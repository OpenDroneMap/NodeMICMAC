// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_TerFix_M2CNoVar.h"


cEqAppui_TerFix_M2CNoVar::cEqAppui_TerFix_M2CNoVar():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Orient",0,6));
   Close(false);
}



void cEqAppui_TerFix_M2CNoVar::ComputeVal()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = mCompCoord[3];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[4];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[5];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = -(tmp3_);
   double tmp18_ = tmp4_*tmp11_;
   double tmp19_ = tmp3_*tmp11_;
   double tmp20_ = tmp17_*tmp10_;
   double tmp21_ = tmp18_*tmp12_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp8_);
   double tmp24_ = tmp4_*tmp10_;
   double tmp25_ = tmp19_*tmp12_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp14_);
   double tmp28_ = tmp23_+tmp27_;
   double tmp29_ = tmp2_*tmp12_;
   double tmp30_ = tmp29_*(tmp16_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = 1.000000/(tmp31_);

  mVal[0] = ((tmp4_*tmp2_*(tmp8_)+tmp3_*tmp2_*(tmp14_)+tmp5_*(tmp16_))*(tmp32_)-mLocXIm)*mLocScNorm;

  mVal[1] = (((tmp17_*tmp12_+tmp18_*tmp9_)*(tmp8_)+(tmp4_*tmp12_+tmp19_*tmp9_)*(tmp14_)+tmp2_*tmp9_*(tmp16_))*(tmp32_)-mLocYIm)*mLocScNorm;

}


void cEqAppui_TerFix_M2CNoVar::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = mCompCoord[3];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[4];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[5];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = tmp4_*tmp2_;
   double tmp18_ = -(tmp3_);
   double tmp19_ = tmp18_*tmp10_;
   double tmp20_ = tmp4_*tmp11_;
   double tmp21_ = tmp20_*tmp12_;
   double tmp22_ = tmp19_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp8_);
   double tmp24_ = tmp4_*tmp10_;
   double tmp25_ = tmp3_*tmp11_;
   double tmp26_ = tmp25_*tmp12_;
   double tmp27_ = tmp24_+tmp26_;
   double tmp28_ = (tmp27_)*(tmp14_);
   double tmp29_ = tmp23_+tmp28_;
   double tmp30_ = tmp2_*tmp12_;
   double tmp31_ = tmp30_*(tmp16_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = 1.000000/(tmp32_);
   double tmp34_ = -(1);
   double tmp35_ = tmp34_*tmp3_;
   double tmp36_ = tmp17_*(tmp8_);
   double tmp37_ = tmp3_*tmp2_;
   double tmp38_ = tmp37_*(tmp14_);
   double tmp39_ = tmp36_+tmp38_;
   double tmp40_ = tmp5_*(tmp16_);
   double tmp41_ = tmp39_+tmp40_;
   double tmp42_ = tmp34_*tmp5_;
   double tmp43_ = -(tmp2_);
   double tmp44_ = ElSquare(tmp32_);
   double tmp45_ = -(tmp12_);
   double tmp46_ = tmp34_*tmp9_;
   double tmp47_ = -(tmp4_);
   double tmp48_ = tmp35_*tmp11_;
   double tmp49_ = tmp20_*tmp9_;
   double tmp50_ = tmp47_*tmp10_;
   double tmp51_ = tmp48_*tmp12_;
   double tmp52_ = tmp50_+tmp51_;
   double tmp53_ = (tmp52_)*(tmp8_);
   double tmp54_ = tmp35_*tmp10_;
   double tmp55_ = tmp54_+tmp21_;
   double tmp56_ = (tmp55_)*(tmp14_);
   double tmp57_ = tmp53_+tmp56_;
   double tmp58_ = -(tmp57_);
   double tmp59_ = tmp58_/tmp44_;
   double tmp60_ = tmp18_*tmp12_;
   double tmp61_ = tmp60_+tmp49_;
   double tmp62_ = (tmp61_)*(tmp8_);
   double tmp63_ = tmp4_*tmp12_;
   double tmp64_ = tmp25_*tmp9_;
   double tmp65_ = tmp63_+tmp64_;
   double tmp66_ = (tmp65_)*(tmp14_);
   double tmp67_ = tmp62_+tmp66_;
   double tmp68_ = tmp2_*tmp9_;
   double tmp69_ = tmp68_*(tmp16_);
   double tmp70_ = tmp67_+tmp69_;
   double tmp71_ = tmp43_*tmp4_;
   double tmp72_ = tmp43_*tmp3_;
   double tmp73_ = tmp71_*tmp12_;
   double tmp74_ = tmp73_*(tmp8_);
   double tmp75_ = tmp72_*tmp12_;
   double tmp76_ = tmp75_*(tmp14_);
   double tmp77_ = tmp74_+tmp76_;
   double tmp78_ = tmp42_*tmp12_;
   double tmp79_ = tmp78_*(tmp16_);
   double tmp80_ = tmp77_+tmp79_;
   double tmp81_ = -(tmp80_);
   double tmp82_ = tmp81_/tmp44_;
   double tmp83_ = tmp45_*tmp18_;
   double tmp84_ = tmp46_*tmp20_;
   double tmp85_ = tmp83_+tmp84_;
   double tmp86_ = (tmp85_)*(tmp8_);
   double tmp87_ = tmp45_*tmp4_;
   double tmp88_ = tmp46_*tmp25_;
   double tmp89_ = tmp87_+tmp88_;
   double tmp90_ = (tmp89_)*(tmp14_);
   double tmp91_ = tmp86_+tmp90_;
   double tmp92_ = tmp46_*tmp2_;
   double tmp93_ = tmp92_*(tmp16_);
   double tmp94_ = tmp91_+tmp93_;
   double tmp95_ = -(tmp94_);
   double tmp96_ = tmp95_/tmp44_;
   double tmp97_ = tmp34_*(tmp22_);
   double tmp98_ = -(tmp97_);
   double tmp99_ = tmp98_/tmp44_;
   double tmp100_ = tmp34_*(tmp27_);
   double tmp101_ = -(tmp100_);
   double tmp102_ = tmp101_/tmp44_;
   double tmp103_ = tmp34_*tmp30_;
   double tmp104_ = -(tmp103_);
   double tmp105_ = tmp104_/tmp44_;

  mVal[0] = ((tmp41_)*(tmp33_)-mLocXIm)*mLocScNorm;

  mCompDer[0][0] = ((tmp35_*tmp2_*(tmp8_)+tmp17_*(tmp14_))*(tmp33_)+(tmp59_)*(tmp41_))*mLocScNorm;
  mCompDer[0][1] = ((tmp42_*tmp4_*(tmp8_)+tmp42_*tmp3_*(tmp14_)+tmp2_*(tmp16_))*(tmp33_)+(tmp82_)*(tmp41_))*mLocScNorm;
  mCompDer[0][2] = (tmp96_)*(tmp41_)*mLocScNorm;
  mCompDer[0][3] = (tmp34_*tmp17_*(tmp33_)+(tmp99_)*(tmp41_))*mLocScNorm;
  mCompDer[0][4] = (tmp34_*tmp37_*(tmp33_)+(tmp102_)*(tmp41_))*mLocScNorm;
  mCompDer[0][5] = (tmp42_*(tmp33_)+(tmp105_)*(tmp41_))*mLocScNorm;
  mVal[1] = ((tmp70_)*(tmp33_)-mLocYIm)*mLocScNorm;

  mCompDer[1][0] = (((tmp47_*tmp12_+tmp48_*tmp9_)*(tmp8_)+(tmp35_*tmp12_+tmp49_)*(tmp14_))*(tmp33_)+(tmp59_)*(tmp70_))*mLocScNorm;
  mCompDer[1][1] = ((tmp71_*tmp9_*(tmp8_)+tmp72_*tmp9_*(tmp14_)+tmp42_*tmp9_*(tmp16_))*(tmp33_)+(tmp82_)*(tmp70_))*mLocScNorm;
  mCompDer[1][2] = (((tmp46_*tmp18_+tmp12_*tmp20_)*(tmp8_)+(tmp46_*tmp4_+tmp12_*tmp25_)*(tmp14_)+tmp12_*tmp2_*(tmp16_))*(tmp33_)+(tmp96_)*(tmp70_))*mLocScNorm;
  mCompDer[1][3] = (tmp34_*(tmp61_)*(tmp33_)+(tmp99_)*(tmp70_))*mLocScNorm;
  mCompDer[1][4] = (tmp34_*(tmp65_)*(tmp33_)+(tmp102_)*(tmp70_))*mLocScNorm;
  mCompDer[1][5] = (tmp34_*tmp68_*(tmp33_)+(tmp105_)*(tmp70_))*mLocScNorm;
}


void cEqAppui_TerFix_M2CNoVar::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_TerFix_M2CNoVar Has no Der Sec");
}

void cEqAppui_TerFix_M2CNoVar::SetScNorm(double aVal){ mLocScNorm = aVal;}
void cEqAppui_TerFix_M2CNoVar::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_TerFix_M2CNoVar::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_TerFix_M2CNoVar::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_TerFix_M2CNoVar::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_TerFix_M2CNoVar::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_TerFix_M2CNoVar::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "ScNorm") return & mLocScNorm;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_TerFix_M2CNoVar::mTheAuto("cEqAppui_TerFix_M2CNoVar",cEqAppui_TerFix_M2CNoVar::Alloc);


cElCompiledFonc *  cEqAppui_TerFix_M2CNoVar::Alloc()
{  return new cEqAppui_TerFix_M2CNoVar();
}


