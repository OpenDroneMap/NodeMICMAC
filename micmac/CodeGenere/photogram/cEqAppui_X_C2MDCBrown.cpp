// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_C2MDCBrown.h"


cEqAppui_X_C2MDCBrown::cEqAppui_X_C2MDCBrown():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,17));
   AddIntRef (cIncIntervale("Orient",17,23));
   Close(false);
}



void cEqAppui_X_C2MDCBrown::ComputeVal()
{
   double tmp0_ = mCompCoord[17];
   double tmp1_ = mCompCoord[18];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[19];
   double tmp7_ = mCompCoord[20];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[21];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[22];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mLocYIm*mLocYIm;
   double tmp18_ = mLocXIm*mLocXIm;
   double tmp19_ = tmp18_*tmp17_;

  mVal[0] = (mCompCoord[1]+mCompCoord[0]*((tmp4_*tmp2_*(tmp8_)+tmp3_*tmp2_*(tmp14_)+tmp5_*(tmp16_))/((-(tmp3_)*tmp10_+tmp4_*tmp11_*tmp12_)*(tmp8_)+(tmp4_*tmp10_+tmp3_*tmp11_*tmp12_)*(tmp14_)+tmp2_*tmp12_*(tmp16_))))-((1+mCompCoord[3])*mLocXIm+mCompCoord[4]*mLocYIm+mCompCoord[5]*mLocXIm*mLocYIm+mCompCoord[6]*tmp17_+mCompCoord[7]*tmp18_*mLocYIm+mCompCoord[8]*mLocXIm*tmp17_+mCompCoord[9]*tmp19_+mCompCoord[15]*(mLocXIm/mLocDCBrown_State_0_0)*tmp19_+mCompCoord[16]*mLocXIm*(tmp18_+tmp17_));

}


void cEqAppui_X_C2MDCBrown::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[17];
   double tmp1_ = mCompCoord[18];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[19];
   double tmp7_ = mCompCoord[20];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[21];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[22];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mLocYIm*mLocYIm;
   double tmp18_ = mLocXIm*mLocXIm;
   double tmp19_ = tmp18_*tmp17_;
   double tmp20_ = tmp4_*tmp2_;
   double tmp21_ = tmp20_*(tmp8_);
   double tmp22_ = tmp3_*tmp2_;
   double tmp23_ = tmp22_*(tmp14_);
   double tmp24_ = tmp21_+tmp23_;
   double tmp25_ = tmp5_*(tmp16_);
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = -(tmp3_);
   double tmp28_ = tmp27_*tmp10_;
   double tmp29_ = tmp4_*tmp11_;
   double tmp30_ = tmp29_*tmp12_;
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = (tmp31_)*(tmp8_);
   double tmp33_ = tmp4_*tmp10_;
   double tmp34_ = tmp3_*tmp11_;
   double tmp35_ = tmp34_*tmp12_;
   double tmp36_ = tmp33_+tmp35_;
   double tmp37_ = (tmp36_)*(tmp14_);
   double tmp38_ = tmp32_+tmp37_;
   double tmp39_ = tmp2_*tmp12_;
   double tmp40_ = tmp39_*(tmp16_);
   double tmp41_ = tmp38_+tmp40_;
   double tmp42_ = (tmp26_)/(tmp41_);
   double tmp43_ = mLocXIm*mLocYIm;
   double tmp44_ = tmp18_*mLocYIm;
   double tmp45_ = mLocXIm*tmp17_;
   double tmp46_ = mLocXIm/mLocDCBrown_State_0_0;
   double tmp47_ = tmp18_+tmp17_;
   double tmp48_ = -(1);
   double tmp49_ = tmp48_*tmp3_;
   double tmp50_ = mCompCoord[0];
   double tmp51_ = tmp48_*tmp5_;
   double tmp52_ = -(tmp2_);
   double tmp53_ = ElSquare(tmp41_);
   double tmp54_ = -(tmp12_);
   double tmp55_ = tmp48_*tmp9_;

  mVal[0] = (mCompCoord[1]+tmp50_*(tmp42_))-((1+mCompCoord[3])*mLocXIm+mCompCoord[4]*mLocYIm+mCompCoord[5]*tmp43_+mCompCoord[6]*tmp17_+mCompCoord[7]*tmp44_+mCompCoord[8]*tmp45_+mCompCoord[9]*tmp19_+mCompCoord[15]*(tmp46_)*tmp19_+mCompCoord[16]*mLocXIm*(tmp47_));

  mCompDer[0][0] = tmp42_;
  mCompDer[0][1] = 1;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = -(mLocXIm);
  mCompDer[0][4] = -(mLocYIm);
  mCompDer[0][5] = -(tmp43_);
  mCompDer[0][6] = -(tmp17_);
  mCompDer[0][7] = -(tmp44_);
  mCompDer[0][8] = -(tmp45_);
  mCompDer[0][9] = -(tmp19_);
  mCompDer[0][10] = 0;
  mCompDer[0][11] = 0;
  mCompDer[0][12] = 0;
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mCompDer[0][15] = -((tmp46_)*tmp19_);
  mCompDer[0][16] = -(mLocXIm*(tmp47_));
  mCompDer[0][17] = (((tmp49_*tmp2_*(tmp8_)+tmp20_*(tmp14_))*(tmp41_)-(tmp26_)*((-(tmp4_)*tmp10_+tmp49_*tmp11_*tmp12_)*(tmp8_)+(tmp49_*tmp10_+tmp30_)*(tmp14_)))/tmp53_)*tmp50_;
  mCompDer[0][18] = (((tmp51_*tmp4_*(tmp8_)+tmp51_*tmp3_*(tmp14_)+tmp2_*(tmp16_))*(tmp41_)-(tmp26_)*(tmp52_*tmp4_*tmp12_*(tmp8_)+tmp52_*tmp3_*tmp12_*(tmp14_)+tmp51_*tmp12_*(tmp16_)))/tmp53_)*tmp50_;
  mCompDer[0][19] = (-((tmp26_)*((tmp54_*tmp27_+tmp55_*tmp29_)*(tmp8_)+(tmp54_*tmp4_+tmp55_*tmp34_)*(tmp14_)+tmp55_*tmp2_*(tmp16_)))/tmp53_)*tmp50_;
  mCompDer[0][20] = ((tmp48_*tmp20_*(tmp41_)-(tmp26_)*tmp48_*(tmp31_))/tmp53_)*tmp50_;
  mCompDer[0][21] = ((tmp48_*tmp22_*(tmp41_)-(tmp26_)*tmp48_*(tmp36_))/tmp53_)*tmp50_;
  mCompDer[0][22] = ((tmp51_*(tmp41_)-(tmp26_)*tmp48_*tmp39_)/tmp53_)*tmp50_;
}


void cEqAppui_X_C2MDCBrown::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_C2MDCBrown Has no Der Sec");
}

void cEqAppui_X_C2MDCBrown::SetDCBrown_State_0_0(double aVal){ mLocDCBrown_State_0_0 = aVal;}
void cEqAppui_X_C2MDCBrown::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_C2MDCBrown::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_C2MDCBrown::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_X_C2MDCBrown::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_C2MDCBrown::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_C2MDCBrown::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "DCBrown_State_0_0") return & mLocDCBrown_State_0_0;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_C2MDCBrown::mTheAuto("cEqAppui_X_C2MDCBrown",cEqAppui_X_C2MDCBrown::Alloc);


cElCompiledFonc *  cEqAppui_X_C2MDCBrown::Alloc()
{  return new cEqAppui_X_C2MDCBrown();
}


