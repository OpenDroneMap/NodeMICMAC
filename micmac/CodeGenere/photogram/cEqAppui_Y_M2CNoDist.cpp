// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_Y_M2CNoDist.h"


cEqAppui_Y_M2CNoDist::cEqAppui_Y_M2CNoDist():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,3));
   AddIntRef (cIncIntervale("Orient",3,9));
   Close(false);
}



void cEqAppui_Y_M2CNoDist::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[5];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[4];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[6];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[7];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[8];
   double tmp19_ = mLocZTer-tmp18_;

  mVal[0] = (mCompCoord[2]+mCompCoord[0]*(((tmp9_*tmp3_+tmp10_*tmp8_)*(tmp12_)+(tmp2_*tmp3_+tmp14_*tmp8_)*(tmp16_)+tmp17_*tmp8_*(tmp19_))/((tmp9_*tmp13_+tmp10_*tmp3_)*(tmp12_)+(tmp2_*tmp13_+tmp14_*tmp3_)*(tmp16_)+tmp17_*tmp3_*(tmp19_))))-mLocYIm;

}


void cEqAppui_Y_M2CNoDist::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[5];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[4];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[6];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[7];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[8];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = tmp9_*tmp3_;
   double tmp21_ = tmp10_*tmp8_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp12_);
   double tmp24_ = tmp2_*tmp3_;
   double tmp25_ = tmp14_*tmp8_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp16_);
   double tmp28_ = tmp23_+tmp27_;
   double tmp29_ = tmp17_*tmp8_;
   double tmp30_ = tmp29_*(tmp19_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = tmp9_*tmp13_;
   double tmp33_ = tmp10_*tmp3_;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = (tmp34_)*(tmp12_);
   double tmp36_ = tmp2_*tmp13_;
   double tmp37_ = tmp14_*tmp3_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = (tmp38_)*(tmp16_);
   double tmp40_ = tmp35_+tmp39_;
   double tmp41_ = tmp17_*tmp3_;
   double tmp42_ = tmp41_*(tmp19_);
   double tmp43_ = tmp40_+tmp42_;
   double tmp44_ = (tmp31_)/(tmp43_);
   double tmp45_ = -(1);
   double tmp46_ = tmp45_*tmp4_;
   double tmp47_ = -(tmp2_);
   double tmp48_ = tmp46_*tmp7_;
   double tmp49_ = mCompCoord[0];
   double tmp50_ = -(tmp17_);
   double tmp51_ = tmp50_*tmp2_;
   double tmp52_ = tmp50_*tmp4_;
   double tmp53_ = tmp45_*tmp6_;
   double tmp54_ = ElSquare(tmp43_);
   double tmp55_ = tmp45_*tmp8_;
   double tmp56_ = -(tmp3_);

  mVal[0] = (mCompCoord[2]+tmp49_*(tmp44_))-mLocYIm;

  mCompDer[0][0] = tmp44_;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 1;
  mCompDer[0][3] = ((((tmp47_*tmp3_+tmp48_*tmp8_)*(tmp12_)+(tmp46_*tmp3_+tmp21_)*(tmp16_))*(tmp43_)-(tmp31_)*((tmp47_*tmp13_+tmp48_*tmp3_)*(tmp12_)+(tmp46_*tmp13_+tmp33_)*(tmp16_)))/tmp54_)*tmp49_;
  mCompDer[0][4] = (((tmp51_*tmp8_*(tmp12_)+tmp52_*tmp8_*(tmp16_)+tmp53_*tmp8_*(tmp19_))*(tmp43_)-(tmp31_)*(tmp51_*tmp3_*(tmp12_)+tmp52_*tmp3_*(tmp16_)+tmp53_*tmp3_*(tmp19_)))/tmp54_)*tmp49_;
  mCompDer[0][5] = ((((tmp55_*tmp9_+tmp3_*tmp10_)*(tmp12_)+(tmp55_*tmp2_+tmp3_*tmp14_)*(tmp16_)+tmp3_*tmp17_*(tmp19_))*(tmp43_)-(tmp31_)*((tmp56_*tmp9_+tmp55_*tmp10_)*(tmp12_)+(tmp56_*tmp2_+tmp55_*tmp14_)*(tmp16_)+tmp55_*tmp17_*(tmp19_)))/tmp54_)*tmp49_;
  mCompDer[0][6] = ((tmp45_*(tmp22_)*(tmp43_)-(tmp31_)*tmp45_*(tmp34_))/tmp54_)*tmp49_;
  mCompDer[0][7] = ((tmp45_*(tmp26_)*(tmp43_)-(tmp31_)*tmp45_*(tmp38_))/tmp54_)*tmp49_;
  mCompDer[0][8] = ((tmp45_*tmp29_*(tmp43_)-(tmp31_)*tmp45_*tmp41_)/tmp54_)*tmp49_;
}


void cEqAppui_Y_M2CNoDist::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_Y_M2CNoDist Has no Der Sec");
}

void cEqAppui_Y_M2CNoDist::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_Y_M2CNoDist::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_Y_M2CNoDist::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_Y_M2CNoDist::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_Y_M2CNoDist::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_Y_M2CNoDist::mTheAuto("cEqAppui_Y_M2CNoDist",cEqAppui_Y_M2CNoDist::Alloc);


cElCompiledFonc *  cEqAppui_Y_M2CNoDist::Alloc()
{  return new cEqAppui_Y_M2CNoDist();
}


