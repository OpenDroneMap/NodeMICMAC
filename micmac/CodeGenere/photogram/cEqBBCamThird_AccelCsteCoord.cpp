// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cEqBBCamThird_AccelCsteCoord.h"


cEqBBCamThird_AccelCsteCoord::cEqBBCamThird_AccelCsteCoord():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("C3",0,3));
   AddIntRef (cIncIntervale("Omega3",3,6));
   AddIntRef (cIncIntervale("Tmp_PTer",6,9));
   Close(false);
}



void cEqBBCamThird_AccelCsteCoord::ComputeVal()
{
   double tmp0_ = mCompCoord[8];
   double tmp1_ = tmp0_-mLocCInit3_z;

  mVal[0] = mLocI3_x-(mCompCoord[6]-mLocCInit3_x)/(tmp1_);

  mVal[1] = mLocI3_y-(mCompCoord[7]-mLocCInit3_y)/(tmp1_);

}


void cEqBBCamThird_AccelCsteCoord::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[8];
   double tmp1_ = tmp0_-mLocCInit3_z;
   double tmp2_ = mCompCoord[6];
   double tmp3_ = tmp2_-mLocCInit3_x;
   double tmp4_ = -(1);
   double tmp5_ = ElSquare(tmp1_);
   double tmp6_ = mCompCoord[7];
   double tmp7_ = tmp4_*(tmp1_);
   double tmp8_ = (tmp7_)/tmp5_;
   double tmp9_ = -(tmp8_);
   double tmp10_ = tmp6_-mLocCInit3_y;
   double tmp11_ = -(tmp2_);
   double tmp12_ = (tmp1_)/tmp5_;
   double tmp13_ = -(tmp12_);

  mVal[0] = mLocI3_x-(tmp3_)/(tmp1_);

  mCompDer[0][0] = tmp9_;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = -(-((tmp3_)*tmp4_)/tmp5_);
  mCompDer[0][3] = -(-((tmp3_)*tmp6_)/tmp5_);
  mCompDer[0][4] = -((tmp0_*(tmp1_)-(tmp3_)*tmp11_)/tmp5_);
  mCompDer[0][5] = -((-(tmp6_)*(tmp1_))/tmp5_);
  mCompDer[0][6] = tmp13_;
  mCompDer[0][7] = 0;
  mCompDer[0][8] = -(-(tmp3_)/tmp5_);
  mVal[1] = mLocI3_y-(tmp10_)/(tmp1_);

  mCompDer[1][0] = 0;
  mCompDer[1][1] = tmp9_;
  mCompDer[1][2] = -(-((tmp10_)*tmp4_)/tmp5_);
  mCompDer[1][3] = -((-(tmp0_)*(tmp1_)-(tmp10_)*tmp6_)/tmp5_);
  mCompDer[1][4] = -(-((tmp10_)*tmp11_)/tmp5_);
  mCompDer[1][5] = -((tmp2_*(tmp1_))/tmp5_);
  mCompDer[1][6] = 0;
  mCompDer[1][7] = tmp13_;
  mCompDer[1][8] = -(-(tmp10_)/tmp5_);
}


void cEqBBCamThird_AccelCsteCoord::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqBBCamThird_AccelCsteCoord Has no Der Sec");
}

void cEqBBCamThird_AccelCsteCoord::SetCInit3_x(double aVal){ mLocCInit3_x = aVal;}
void cEqBBCamThird_AccelCsteCoord::SetCInit3_y(double aVal){ mLocCInit3_y = aVal;}
void cEqBBCamThird_AccelCsteCoord::SetCInit3_z(double aVal){ mLocCInit3_z = aVal;}
void cEqBBCamThird_AccelCsteCoord::SetI3_x(double aVal){ mLocI3_x = aVal;}
void cEqBBCamThird_AccelCsteCoord::SetI3_y(double aVal){ mLocI3_y = aVal;}



double * cEqBBCamThird_AccelCsteCoord::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "CInit3_x") return & mLocCInit3_x;
   if (aName == "CInit3_y") return & mLocCInit3_y;
   if (aName == "CInit3_z") return & mLocCInit3_z;
   if (aName == "I3_x") return & mLocI3_x;
   if (aName == "I3_y") return & mLocI3_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqBBCamThird_AccelCsteCoord::mTheAuto("cEqBBCamThird_AccelCsteCoord",cEqBBCamThird_AccelCsteCoord::Alloc);


cElCompiledFonc *  cEqBBCamThird_AccelCsteCoord::Alloc()
{  return new cEqBBCamThird_AccelCsteCoord();
}


