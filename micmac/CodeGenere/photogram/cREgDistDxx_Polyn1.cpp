// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistDxx_Polyn1.h"


cREgDistDxx_Polyn1::cREgDistDxx_Polyn1():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,5));
   Close(false);
}



void cREgDistDxx_Polyn1::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = 1 + tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = 1 - tmp0_;

  mVal[0] = ((tmp1_) * mLocRegDistuu1_x + tmp2_ * mLocRegDistuu1_y + (tmp1_) * mLocRegDistuu2_x + tmp2_ * mLocRegDistuu2_y) - ((tmp1_) * mLocRegDistuu3_x + tmp2_ * mLocRegDistuu3_y) * 2.000000;

  mVal[1] = ((tmp3_) * mLocRegDistuu1_y + tmp2_ * mLocRegDistuu1_x + (tmp3_) * mLocRegDistuu2_y + tmp2_ * mLocRegDistuu2_x) - ((tmp3_) * mLocRegDistuu3_y + tmp2_ * mLocRegDistuu3_x) * 2.000000;

}


void cREgDistDxx_Polyn1::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = 1 + tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = 1 - tmp0_;
   double tmp4_ = -(1);
   double tmp5_ = mLocRegDistuu1_x + mLocRegDistuu2_x;
   double tmp6_ = mLocRegDistuu3_x * 2.000000;
   double tmp7_ = (tmp5_) - tmp6_;

  mVal[0] = ((tmp1_) * mLocRegDistuu1_x + tmp2_ * mLocRegDistuu1_y + (tmp1_) * mLocRegDistuu2_x + tmp2_ * mLocRegDistuu2_y) - ((tmp1_) * mLocRegDistuu3_x + tmp2_ * mLocRegDistuu3_y) * 2.000000;

  mCompDer[0][0] = 0;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = tmp7_;
  mCompDer[0][4] = (mLocRegDistuu1_y + mLocRegDistuu2_y) - mLocRegDistuu3_y * 2.000000;
  mVal[1] = ((tmp3_) * mLocRegDistuu1_y + tmp2_ * mLocRegDistuu1_x + (tmp3_) * mLocRegDistuu2_y + tmp2_ * mLocRegDistuu2_x) - ((tmp3_) * mLocRegDistuu3_y + tmp2_ * mLocRegDistuu3_x) * 2.000000;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
  mCompDer[1][3] = (tmp4_ * mLocRegDistuu1_y + tmp4_ * mLocRegDistuu2_y) - tmp4_ * mLocRegDistuu3_y * 2.000000;
  mCompDer[1][4] = tmp7_;
}


void cREgDistDxx_Polyn1::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistDxx_Polyn1 Has no Der Sec");
}

void cREgDistDxx_Polyn1::SetRegDistuu1_x(double aVal){ mLocRegDistuu1_x = aVal;}
void cREgDistDxx_Polyn1::SetRegDistuu1_y(double aVal){ mLocRegDistuu1_y = aVal;}
void cREgDistDxx_Polyn1::SetRegDistuu2_x(double aVal){ mLocRegDistuu2_x = aVal;}
void cREgDistDxx_Polyn1::SetRegDistuu2_y(double aVal){ mLocRegDistuu2_y = aVal;}
void cREgDistDxx_Polyn1::SetRegDistuu3_x(double aVal){ mLocRegDistuu3_x = aVal;}
void cREgDistDxx_Polyn1::SetRegDistuu3_y(double aVal){ mLocRegDistuu3_y = aVal;}



double * cREgDistDxx_Polyn1::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "RegDistuu1_x") return & mLocRegDistuu1_x;
   if (aName == "RegDistuu1_y") return & mLocRegDistuu1_y;
   if (aName == "RegDistuu2_x") return & mLocRegDistuu2_x;
   if (aName == "RegDistuu2_y") return & mLocRegDistuu2_y;
   if (aName == "RegDistuu3_x") return & mLocRegDistuu3_x;
   if (aName == "RegDistuu3_y") return & mLocRegDistuu3_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistDxx_Polyn1::mTheAuto("cREgDistDxx_Polyn1",cREgDistDxx_Polyn1::Alloc);


cElCompiledFonc *  cREgDistDxx_Polyn1::Alloc()
{  return new cREgDistDxx_Polyn1();
}


