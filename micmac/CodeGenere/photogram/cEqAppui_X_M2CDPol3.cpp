// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_M2CDPol3.h"


cEqAppui_X_M2CDPol3::cEqAppui_X_M2CDPol3():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,20));
   AddIntRef (cIncIntervale("Orient",20,26));
   Close(false);
}



void cEqAppui_X_M2CDPol3::ComputeVal()
{
   double tmp0_ = mCompCoord[20];
   double tmp1_ = mCompCoord[22];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[21];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[23];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[24];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[25];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = tmp9_*tmp13_;
   double tmp21_ = tmp10_*tmp3_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp12_);
   double tmp24_ = tmp2_*tmp13_;
   double tmp25_ = tmp14_*tmp3_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp16_);
   double tmp28_ = tmp23_+tmp27_;
   double tmp29_ = tmp17_*tmp3_;
   double tmp30_ = tmp29_*(tmp19_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = tmp9_*tmp3_;
   double tmp33_ = tmp10_*tmp8_;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = (tmp34_)*(tmp12_);
   double tmp36_ = tmp2_*tmp3_;
   double tmp37_ = tmp14_*tmp8_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = (tmp38_)*(tmp16_);
   double tmp40_ = tmp35_+tmp39_;
   double tmp41_ = tmp17_*tmp8_;
   double tmp42_ = tmp41_*(tmp19_);
   double tmp43_ = tmp40_+tmp42_;
   double tmp44_ = (tmp43_)/(tmp31_);
   double tmp45_ = tmp2_*tmp17_;
   double tmp46_ = tmp45_*(tmp12_);
   double tmp47_ = tmp4_*tmp17_;
   double tmp48_ = tmp47_*(tmp16_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp6_*(tmp19_);
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)/(tmp31_);
   double tmp53_ = ElSquare(tmp44_);
   double tmp54_ = ElSquare(tmp52_);

  mVal[0] = (mCompCoord[0]+mCompCoord[1]*(tmp44_)+mCompCoord[2]*(tmp52_)+mCompCoord[3]*tmp53_+mCompCoord[4]*(tmp52_)*(tmp44_)+mCompCoord[5]*tmp54_+mCompCoord[6]*VCube(tmp44_)+mCompCoord[7]*(tmp52_)*tmp53_+mCompCoord[8]*tmp54_*(tmp44_)+mCompCoord[9]*VCube(tmp52_))-mLocXIm;

}


void cEqAppui_X_M2CDPol3::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[20];
   double tmp1_ = mCompCoord[22];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[21];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[23];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[24];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[25];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = tmp9_*tmp13_;
   double tmp21_ = tmp10_*tmp3_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp12_);
   double tmp24_ = tmp2_*tmp13_;
   double tmp25_ = tmp14_*tmp3_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp16_);
   double tmp28_ = tmp23_+tmp27_;
   double tmp29_ = tmp17_*tmp3_;
   double tmp30_ = tmp29_*(tmp19_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = tmp9_*tmp3_;
   double tmp33_ = tmp10_*tmp8_;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = (tmp34_)*(tmp12_);
   double tmp36_ = tmp2_*tmp3_;
   double tmp37_ = tmp14_*tmp8_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = (tmp38_)*(tmp16_);
   double tmp40_ = tmp35_+tmp39_;
   double tmp41_ = tmp17_*tmp8_;
   double tmp42_ = tmp41_*(tmp19_);
   double tmp43_ = tmp40_+tmp42_;
   double tmp44_ = (tmp43_)/(tmp31_);
   double tmp45_ = tmp2_*tmp17_;
   double tmp46_ = tmp45_*(tmp12_);
   double tmp47_ = tmp4_*tmp17_;
   double tmp48_ = tmp47_*(tmp16_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp6_*(tmp19_);
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)/(tmp31_);
   double tmp53_ = ElSquare(tmp44_);
   double tmp54_ = ElSquare(tmp52_);
   double tmp55_ = VCube(tmp44_);
   double tmp56_ = VCube(tmp52_);
   double tmp57_ = -(1);
   double tmp58_ = tmp57_*tmp4_;
   double tmp59_ = -(tmp2_);
   double tmp60_ = tmp58_*tmp7_;
   double tmp61_ = mCompCoord[1];
   double tmp62_ = tmp59_*tmp13_;
   double tmp63_ = tmp60_*tmp3_;
   double tmp64_ = tmp62_+tmp63_;
   double tmp65_ = (tmp64_)*(tmp12_);
   double tmp66_ = tmp58_*tmp13_;
   double tmp67_ = tmp66_+tmp21_;
   double tmp68_ = (tmp67_)*(tmp16_);
   double tmp69_ = tmp65_+tmp68_;
   double tmp70_ = ElSquare(tmp31_);
   double tmp71_ = mCompCoord[2];
   double tmp72_ = tmp59_*tmp3_;
   double tmp73_ = tmp60_*tmp8_;
   double tmp74_ = tmp72_+tmp73_;
   double tmp75_ = (tmp74_)*(tmp12_);
   double tmp76_ = tmp58_*tmp3_;
   double tmp77_ = tmp76_+tmp33_;
   double tmp78_ = (tmp77_)*(tmp16_);
   double tmp79_ = tmp75_+tmp78_;
   double tmp80_ = (tmp79_)*(tmp31_);
   double tmp81_ = (tmp43_)*(tmp69_);
   double tmp82_ = tmp80_-tmp81_;
   double tmp83_ = (tmp82_)/tmp70_;
   double tmp84_ = mCompCoord[3];
   double tmp85_ = tmp58_*tmp17_;
   double tmp86_ = tmp85_*(tmp12_);
   double tmp87_ = tmp45_*(tmp16_);
   double tmp88_ = tmp86_+tmp87_;
   double tmp89_ = (tmp88_)*(tmp31_);
   double tmp90_ = (tmp51_)*(tmp69_);
   double tmp91_ = tmp89_-tmp90_;
   double tmp92_ = (tmp91_)/tmp70_;
   double tmp93_ = mCompCoord[4];
   double tmp94_ = tmp93_*(tmp52_);
   double tmp95_ = mCompCoord[5];
   double tmp96_ = mCompCoord[6];
   double tmp97_ = mCompCoord[7];
   double tmp98_ = 2*(tmp83_);
   double tmp99_ = tmp98_*(tmp44_);
   double tmp100_ = tmp97_*(tmp52_);
   double tmp101_ = 2*(tmp92_);
   double tmp102_ = tmp101_*(tmp52_);
   double tmp103_ = mCompCoord[8];
   double tmp104_ = tmp103_*tmp54_;
   double tmp105_ = mCompCoord[9];
   double tmp106_ = -(tmp17_);
   double tmp107_ = tmp106_*tmp2_;
   double tmp108_ = tmp106_*tmp4_;
   double tmp109_ = tmp57_*tmp6_;
   double tmp110_ = tmp107_*tmp3_;
   double tmp111_ = tmp110_*(tmp12_);
   double tmp112_ = tmp108_*tmp3_;
   double tmp113_ = tmp112_*(tmp16_);
   double tmp114_ = tmp111_+tmp113_;
   double tmp115_ = tmp109_*tmp3_;
   double tmp116_ = tmp115_*(tmp19_);
   double tmp117_ = tmp114_+tmp116_;
   double tmp118_ = tmp107_*tmp8_;
   double tmp119_ = tmp118_*(tmp12_);
   double tmp120_ = tmp108_*tmp8_;
   double tmp121_ = tmp120_*(tmp16_);
   double tmp122_ = tmp119_+tmp121_;
   double tmp123_ = tmp109_*tmp8_;
   double tmp124_ = tmp123_*(tmp19_);
   double tmp125_ = tmp122_+tmp124_;
   double tmp126_ = (tmp125_)*(tmp31_);
   double tmp127_ = (tmp43_)*(tmp117_);
   double tmp128_ = tmp126_-tmp127_;
   double tmp129_ = (tmp128_)/tmp70_;
   double tmp130_ = tmp109_*tmp2_;
   double tmp131_ = tmp130_*(tmp12_);
   double tmp132_ = tmp109_*tmp4_;
   double tmp133_ = tmp132_*(tmp16_);
   double tmp134_ = tmp131_+tmp133_;
   double tmp135_ = tmp17_*(tmp19_);
   double tmp136_ = tmp134_+tmp135_;
   double tmp137_ = (tmp136_)*(tmp31_);
   double tmp138_ = (tmp51_)*(tmp117_);
   double tmp139_ = tmp137_-tmp138_;
   double tmp140_ = (tmp139_)/tmp70_;
   double tmp141_ = 2*(tmp129_);
   double tmp142_ = tmp141_*(tmp44_);
   double tmp143_ = 2*(tmp140_);
   double tmp144_ = tmp143_*(tmp52_);
   double tmp145_ = tmp57_*tmp8_;
   double tmp146_ = -(tmp3_);
   double tmp147_ = tmp146_*tmp9_;
   double tmp148_ = tmp145_*tmp10_;
   double tmp149_ = tmp147_+tmp148_;
   double tmp150_ = (tmp149_)*(tmp12_);
   double tmp151_ = tmp146_*tmp2_;
   double tmp152_ = tmp145_*tmp14_;
   double tmp153_ = tmp151_+tmp152_;
   double tmp154_ = (tmp153_)*(tmp16_);
   double tmp155_ = tmp150_+tmp154_;
   double tmp156_ = tmp145_*tmp17_;
   double tmp157_ = tmp156_*(tmp19_);
   double tmp158_ = tmp155_+tmp157_;
   double tmp159_ = tmp145_*tmp9_;
   double tmp160_ = tmp3_*tmp10_;
   double tmp161_ = tmp159_+tmp160_;
   double tmp162_ = (tmp161_)*(tmp12_);
   double tmp163_ = tmp145_*tmp2_;
   double tmp164_ = tmp3_*tmp14_;
   double tmp165_ = tmp163_+tmp164_;
   double tmp166_ = (tmp165_)*(tmp16_);
   double tmp167_ = tmp162_+tmp166_;
   double tmp168_ = tmp3_*tmp17_;
   double tmp169_ = tmp168_*(tmp19_);
   double tmp170_ = tmp167_+tmp169_;
   double tmp171_ = (tmp170_)*(tmp31_);
   double tmp172_ = (tmp43_)*(tmp158_);
   double tmp173_ = tmp171_-tmp172_;
   double tmp174_ = (tmp173_)/tmp70_;
   double tmp175_ = (tmp51_)*(tmp158_);
   double tmp176_ = -(tmp175_);
   double tmp177_ = tmp176_/tmp70_;
   double tmp178_ = 2*(tmp174_);
   double tmp179_ = tmp178_*(tmp44_);
   double tmp180_ = 2*(tmp177_);
   double tmp181_ = tmp180_*(tmp52_);
   double tmp182_ = tmp57_*(tmp22_);
   double tmp183_ = tmp57_*(tmp34_);
   double tmp184_ = tmp183_*(tmp31_);
   double tmp185_ = (tmp43_)*tmp182_;
   double tmp186_ = tmp184_-tmp185_;
   double tmp187_ = (tmp186_)/tmp70_;
   double tmp188_ = tmp57_*tmp45_;
   double tmp189_ = tmp188_*(tmp31_);
   double tmp190_ = (tmp51_)*tmp182_;
   double tmp191_ = tmp189_-tmp190_;
   double tmp192_ = (tmp191_)/tmp70_;
   double tmp193_ = 2*(tmp187_);
   double tmp194_ = tmp193_*(tmp44_);
   double tmp195_ = 2*(tmp192_);
   double tmp196_ = tmp195_*(tmp52_);
   double tmp197_ = tmp57_*(tmp26_);
   double tmp198_ = tmp57_*(tmp38_);
   double tmp199_ = tmp198_*(tmp31_);
   double tmp200_ = (tmp43_)*tmp197_;
   double tmp201_ = tmp199_-tmp200_;
   double tmp202_ = (tmp201_)/tmp70_;
   double tmp203_ = tmp57_*tmp47_;
   double tmp204_ = tmp203_*(tmp31_);
   double tmp205_ = (tmp51_)*tmp197_;
   double tmp206_ = tmp204_-tmp205_;
   double tmp207_ = (tmp206_)/tmp70_;
   double tmp208_ = 2*(tmp202_);
   double tmp209_ = tmp208_*(tmp44_);
   double tmp210_ = 2*(tmp207_);
   double tmp211_ = tmp210_*(tmp52_);
   double tmp212_ = tmp57_*tmp29_;
   double tmp213_ = tmp57_*tmp41_;
   double tmp214_ = tmp213_*(tmp31_);
   double tmp215_ = (tmp43_)*tmp212_;
   double tmp216_ = tmp214_-tmp215_;
   double tmp217_ = (tmp216_)/tmp70_;
   double tmp218_ = tmp109_*(tmp31_);
   double tmp219_ = (tmp51_)*tmp212_;
   double tmp220_ = tmp218_-tmp219_;
   double tmp221_ = (tmp220_)/tmp70_;
   double tmp222_ = 2*(tmp217_);
   double tmp223_ = tmp222_*(tmp44_);
   double tmp224_ = 2*(tmp221_);
   double tmp225_ = tmp224_*(tmp52_);

  mVal[0] = (mCompCoord[0]+tmp61_*(tmp44_)+tmp71_*(tmp52_)+tmp84_*tmp53_+tmp94_*(tmp44_)+tmp95_*tmp54_+tmp96_*tmp55_+tmp100_*tmp53_+tmp104_*(tmp44_)+tmp105_*tmp56_)-mLocXIm;

  mCompDer[0][0] = 1;
  mCompDer[0][1] = tmp44_;
  mCompDer[0][2] = tmp52_;
  mCompDer[0][3] = tmp53_;
  mCompDer[0][4] = (tmp52_)*(tmp44_);
  mCompDer[0][5] = tmp54_;
  mCompDer[0][6] = tmp55_;
  mCompDer[0][7] = (tmp52_)*tmp53_;
  mCompDer[0][8] = tmp54_*(tmp44_);
  mCompDer[0][9] = tmp56_;
  mCompDer[0][10] = 0;
  mCompDer[0][11] = 0;
  mCompDer[0][12] = 0;
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mCompDer[0][15] = 0;
  mCompDer[0][16] = 0;
  mCompDer[0][17] = 0;
  mCompDer[0][18] = 0;
  mCompDer[0][19] = 0;
  mCompDer[0][20] = (tmp83_)*tmp61_+(tmp92_)*tmp71_+tmp99_*tmp84_+(tmp92_)*tmp93_*(tmp44_)+(tmp83_)*tmp94_+tmp102_*tmp95_+3*(tmp83_)*tmp53_*tmp96_+(tmp92_)*tmp97_*tmp53_+tmp99_*tmp100_+tmp102_*tmp103_*(tmp44_)+(tmp83_)*tmp104_+3*(tmp92_)*tmp54_*tmp105_;
  mCompDer[0][21] = (tmp129_)*tmp61_+(tmp140_)*tmp71_+tmp142_*tmp84_+(tmp140_)*tmp93_*(tmp44_)+(tmp129_)*tmp94_+tmp144_*tmp95_+3*(tmp129_)*tmp53_*tmp96_+(tmp140_)*tmp97_*tmp53_+tmp142_*tmp100_+tmp144_*tmp103_*(tmp44_)+(tmp129_)*tmp104_+3*(tmp140_)*tmp54_*tmp105_;
  mCompDer[0][22] = (tmp174_)*tmp61_+(tmp177_)*tmp71_+tmp179_*tmp84_+(tmp177_)*tmp93_*(tmp44_)+(tmp174_)*tmp94_+tmp181_*tmp95_+3*(tmp174_)*tmp53_*tmp96_+(tmp177_)*tmp97_*tmp53_+tmp179_*tmp100_+tmp181_*tmp103_*(tmp44_)+(tmp174_)*tmp104_+3*(tmp177_)*tmp54_*tmp105_;
  mCompDer[0][23] = (tmp187_)*tmp61_+(tmp192_)*tmp71_+tmp194_*tmp84_+(tmp192_)*tmp93_*(tmp44_)+(tmp187_)*tmp94_+tmp196_*tmp95_+3*(tmp187_)*tmp53_*tmp96_+(tmp192_)*tmp97_*tmp53_+tmp194_*tmp100_+tmp196_*tmp103_*(tmp44_)+(tmp187_)*tmp104_+3*(tmp192_)*tmp54_*tmp105_;
  mCompDer[0][24] = (tmp202_)*tmp61_+(tmp207_)*tmp71_+tmp209_*tmp84_+(tmp207_)*tmp93_*(tmp44_)+(tmp202_)*tmp94_+tmp211_*tmp95_+3*(tmp202_)*tmp53_*tmp96_+(tmp207_)*tmp97_*tmp53_+tmp209_*tmp100_+tmp211_*tmp103_*(tmp44_)+(tmp202_)*tmp104_+3*(tmp207_)*tmp54_*tmp105_;
  mCompDer[0][25] = (tmp217_)*tmp61_+(tmp221_)*tmp71_+tmp223_*tmp84_+(tmp221_)*tmp93_*(tmp44_)+(tmp217_)*tmp94_+tmp225_*tmp95_+3*(tmp217_)*tmp53_*tmp96_+(tmp221_)*tmp97_*tmp53_+tmp223_*tmp100_+tmp225_*tmp103_*(tmp44_)+(tmp217_)*tmp104_+3*(tmp221_)*tmp54_*tmp105_;
}


void cEqAppui_X_M2CDPol3::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_M2CDPol3 Has no Der Sec");
}

void cEqAppui_X_M2CDPol3::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_M2CDPol3::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_M2CDPol3::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_M2CDPol3::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_M2CDPol3::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_M2CDPol3::mTheAuto("cEqAppui_X_M2CDPol3",cEqAppui_X_M2CDPol3::Alloc);


cElCompiledFonc *  cEqAppui_X_M2CDPol3::Alloc()
{  return new cEqAppui_X_M2CDPol3();
}


