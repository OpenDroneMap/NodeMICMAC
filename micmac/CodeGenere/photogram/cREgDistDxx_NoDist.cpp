// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistDxx_NoDist.h"


cREgDistDxx_NoDist::cREgDistDxx_NoDist():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,3));
   Close(false);
}



void cREgDistDxx_NoDist::ComputeVal()
{

  mVal[0] = (mLocRegDistuu1_x + mLocRegDistuu2_x) - mLocRegDistuu3_x * 2.000000;

  mVal[1] = (mLocRegDistuu1_y + mLocRegDistuu2_y) - mLocRegDistuu3_y * 2.000000;

}


void cREgDistDxx_NoDist::ComputeValDeriv()
{

  mVal[0] = (mLocRegDistuu1_x + mLocRegDistuu2_x) - mLocRegDistuu3_x * 2.000000;

  mCompDer[0][0] = 0;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 0;
  mVal[1] = (mLocRegDistuu1_y + mLocRegDistuu2_y) - mLocRegDistuu3_y * 2.000000;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
}


void cREgDistDxx_NoDist::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistDxx_NoDist Has no Der Sec");
}

void cREgDistDxx_NoDist::SetRegDistuu1_x(double aVal){ mLocRegDistuu1_x = aVal;}
void cREgDistDxx_NoDist::SetRegDistuu1_y(double aVal){ mLocRegDistuu1_y = aVal;}
void cREgDistDxx_NoDist::SetRegDistuu2_x(double aVal){ mLocRegDistuu2_x = aVal;}
void cREgDistDxx_NoDist::SetRegDistuu2_y(double aVal){ mLocRegDistuu2_y = aVal;}
void cREgDistDxx_NoDist::SetRegDistuu3_x(double aVal){ mLocRegDistuu3_x = aVal;}
void cREgDistDxx_NoDist::SetRegDistuu3_y(double aVal){ mLocRegDistuu3_y = aVal;}



double * cREgDistDxx_NoDist::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "RegDistuu1_x") return & mLocRegDistuu1_x;
   if (aName == "RegDistuu1_y") return & mLocRegDistuu1_y;
   if (aName == "RegDistuu2_x") return & mLocRegDistuu2_x;
   if (aName == "RegDistuu2_y") return & mLocRegDistuu2_y;
   if (aName == "RegDistuu3_x") return & mLocRegDistuu3_x;
   if (aName == "RegDistuu3_y") return & mLocRegDistuu3_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistDxx_NoDist::mTheAuto("cREgDistDxx_NoDist",cREgDistDxx_NoDist::Alloc);


cElCompiledFonc *  cREgDistDxx_NoDist::Alloc()
{  return new cREgDistDxx_NoDist();
}


