/*Header-MicMac-eLiSe-25/06/2007

    MicMac : Multi Image Correspondances par Methodes Automatiques de Correlation
    eLiSe  : ELements of an Image Software Environnement

    www.micmac.ign.fr

   
    Copyright : Institut Geographique National
    Author : Marc Pierrot Deseilligny
    Contributors : Gregoire Maillet, Didier Boldo.

[1] M. Pierrot-Deseilligny, N. Paparoditis.
    "A multiresolution and optimization-based image matching approach:
    An application to surface reconstruction from SPOT5-HRS stereo imagery."
    In IAPRS vol XXXVI-1/W41 in ISPRS Workshop On Topographic Mapping From Space
    (With Special Emphasis on Small Satellites), Ankara, Turquie, 02-2006.

[2] M. Pierrot-Deseilligny, "MicMac, un lociel de mise en correspondance
    d'images, adapte au contexte geograhique" to appears in 
    Bulletin d'information de l'Institut Geographique National, 2007.

Francais :

   MicMac est un logiciel de mise en correspondance d'image adapte 
   au contexte de recherche en information geographique. Il s'appuie sur
   la bibliotheque de manipulation d'image eLiSe. Il est distibue sous la
   licences Cecill-B.  Voir en bas de fichier et  http://www.cecill.info.


English :

    MicMac is an open source software specialized in image matching
    for research in geographic information. MicMac is built on the
    eLiSe image library. MicMac is governed by the  "Cecill-B licence".
    See below and http://www.cecill.info.

Header-MicMac-eLiSe-25/06/2007*/
// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqAppuiYNoDist.h"


cEqAppuiYNoDist::cEqAppuiYNoDist():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,3));
   AddIntRef (cIncIntervale("Orient",3,9));
   Close(false);
}



void cEqAppuiYNoDist::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[5];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[4];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[6];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[7];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[8];
   double tmp19_ = mLocZTer-tmp18_;

  mVal[0] = (mLocYIm-mCompCoord[2])/mCompCoord[0]-((tmp9_*tmp3_+tmp10_*tmp8_)*(tmp12_)+(tmp2_*tmp3_+tmp14_*tmp8_)*(tmp16_)+tmp17_*tmp8_*(tmp19_))/((tmp9_*tmp13_+tmp10_*tmp3_)*(tmp12_)+(tmp2_*tmp13_+tmp14_*tmp3_)*(tmp16_)+tmp17_*tmp3_*(tmp19_));

}


void cEqAppuiYNoDist::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[5];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[4];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[6];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[7];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[8];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mCompCoord[2];
   double tmp21_ = mLocYIm-tmp20_;
   double tmp22_ = mCompCoord[0];
   double tmp23_ = ElSquare(tmp22_);
   double tmp24_ = -(1);
   double tmp25_ = tmp24_*tmp4_;
   double tmp26_ = tmp10_*tmp8_;
   double tmp27_ = tmp9_*tmp13_;
   double tmp28_ = tmp10_*tmp3_;
   double tmp29_ = tmp27_+tmp28_;
   double tmp30_ = (tmp29_)*(tmp12_);
   double tmp31_ = tmp2_*tmp13_;
   double tmp32_ = tmp14_*tmp3_;
   double tmp33_ = tmp31_+tmp32_;
   double tmp34_ = (tmp33_)*(tmp16_);
   double tmp35_ = tmp30_+tmp34_;
   double tmp36_ = tmp17_*tmp3_;
   double tmp37_ = tmp36_*(tmp19_);
   double tmp38_ = tmp35_+tmp37_;
   double tmp39_ = tmp9_*tmp3_;
   double tmp40_ = tmp39_+tmp26_;
   double tmp41_ = (tmp40_)*(tmp12_);
   double tmp42_ = tmp2_*tmp3_;
   double tmp43_ = tmp14_*tmp8_;
   double tmp44_ = tmp42_+tmp43_;
   double tmp45_ = (tmp44_)*(tmp16_);
   double tmp46_ = tmp41_+tmp45_;
   double tmp47_ = tmp17_*tmp8_;
   double tmp48_ = tmp47_*(tmp19_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = -(tmp2_);
   double tmp51_ = tmp25_*tmp7_;
   double tmp52_ = -(tmp17_);
   double tmp53_ = tmp52_*tmp2_;
   double tmp54_ = tmp52_*tmp4_;
   double tmp55_ = tmp24_*tmp6_;
   double tmp56_ = ElSquare(tmp38_);
   double tmp57_ = tmp24_*tmp8_;
   double tmp58_ = -(tmp3_);

  mVal[0] = (tmp21_)/tmp22_-(tmp49_)/(tmp38_);

  mCompDer[0][0] = -(tmp21_)/tmp23_;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = (tmp24_*tmp22_)/tmp23_;
  mCompDer[0][3] = -((((tmp50_*tmp3_+tmp51_*tmp8_)*(tmp12_)+(tmp25_*tmp3_+tmp26_)*(tmp16_))*(tmp38_)-(tmp49_)*((tmp50_*tmp13_+tmp51_*tmp3_)*(tmp12_)+(tmp25_*tmp13_+tmp28_)*(tmp16_)))/tmp56_);
  mCompDer[0][4] = -(((tmp53_*tmp8_*(tmp12_)+tmp54_*tmp8_*(tmp16_)+tmp55_*tmp8_*(tmp19_))*(tmp38_)-(tmp49_)*(tmp53_*tmp3_*(tmp12_)+tmp54_*tmp3_*(tmp16_)+tmp55_*tmp3_*(tmp19_)))/tmp56_);
  mCompDer[0][5] = -((((tmp57_*tmp9_+tmp3_*tmp10_)*(tmp12_)+(tmp57_*tmp2_+tmp3_*tmp14_)*(tmp16_)+tmp3_*tmp17_*(tmp19_))*(tmp38_)-(tmp49_)*((tmp58_*tmp9_+tmp57_*tmp10_)*(tmp12_)+(tmp58_*tmp2_+tmp57_*tmp14_)*(tmp16_)+tmp57_*tmp17_*(tmp19_)))/tmp56_);
  mCompDer[0][6] = -((tmp24_*(tmp40_)*(tmp38_)-(tmp49_)*tmp24_*(tmp29_))/tmp56_);
  mCompDer[0][7] = -((tmp24_*(tmp44_)*(tmp38_)-(tmp49_)*tmp24_*(tmp33_))/tmp56_);
  mCompDer[0][8] = -((tmp24_*tmp47_*(tmp38_)-(tmp49_)*tmp24_*tmp36_)/tmp56_);
}


void cEqAppuiYNoDist::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppuiYNoDist Has no Der Sec");
}

void cEqAppuiYNoDist::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppuiYNoDist::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppuiYNoDist::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppuiYNoDist::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppuiYNoDist::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppuiYNoDist::mTheAuto("cEqAppuiYNoDist",cEqAppuiYNoDist::Alloc);


cElCompiledFonc *  cEqAppuiYNoDist::Alloc()
{  return new cEqAppuiYNoDist();
}



/*Footer-MicMac-eLiSe-25/06/2007

Ce logiciel est un programme informatique servant à la mise en
correspondances d'images pour la reconstruction du relief.

Ce logiciel est régi par la licence CeCILL-B soumise au droit français et
respectant les principes de diffusion des logiciels libres. Vous pouvez
utiliser, modifier et/ou redistribuer ce programme sous les conditions
de la licence CeCILL-B telle que diffusée par le CEA, le CNRS et l'INRIA 
sur le site "http://www.cecill.info".

En contrepartie de l'accessibilité au code source et des droits de copie,
de modification et de redistribution accordés par cette licence, il n'est
offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
seule une responsabilité restreinte pèse sur l'auteur du programme,  le
titulaire des droits patrimoniaux et les concédants successifs.

A cet égard  l'attention de l'utilisateur est attirée sur les risques
associés au chargement,  à l'utilisation,  à la modification et/ou au
développement et à la reproduction du logiciel par l'utilisateur étant 
donné sa spécificité de logiciel libre, qui peut le rendre complexe à 
manipuler et qui le réserve donc à des développeurs et des professionnels
avertis possédant  des  connaissances  informatiques approfondies.  Les
utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
logiciel à leurs besoins dans des conditions permettant d'assurer la
sécurité de leurs systèmes et ou de leurs données et, plus généralement, 
à l'utiliser et l'exploiter dans les mêmes conditions de sécurité. 

Le fait que vous puissiez accéder à cet en-tête signifie que vous avez 
pris connaissance de la licence CeCILL-B, et que vous en avez accepté les
termes.
Footer-MicMac-eLiSe-25/06/2007*/
