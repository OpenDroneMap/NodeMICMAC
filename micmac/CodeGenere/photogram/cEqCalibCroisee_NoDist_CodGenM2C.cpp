// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqCalibCroisee_NoDist_CodGenM2C.h"


cEqCalibCroisee_NoDist_CodGenM2C::cEqCalibCroisee_NoDist_CodGenM2C():
    cElCompiledFonc(3)
{
   AddIntRef (cIncIntervale("Calib",0,3));
   AddIntRef (cIncIntervale("Orient",3,9));
   Close(false);
}



void cEqCalibCroisee_NoDist_CodGenM2C::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = cos(tmp0_);
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mCompCoord[5];
   double tmp4_ = sin(tmp0_);
   double tmp5_ = -(tmp4_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = sin(tmp2_);
   double tmp8_ = -(tmp7_);
   double tmp9_ = tmp1_*tmp8_;
   double tmp10_ = cos(tmp3_);
   double tmp11_ = cos(tmp2_);
   double tmp12_ = -(tmp6_);
   double tmp13_ = tmp4_*tmp8_;
   double tmp14_ = tmp7_*mLocDirEsp2_x;
   double tmp15_ = tmp11_*tmp6_;
   double tmp16_ = tmp15_*mLocDirEsp2_y;
   double tmp17_ = tmp14_+tmp16_;
   double tmp18_ = tmp11_*tmp10_;
   double tmp19_ = tmp18_*mLocDirEsp2_z;
   double tmp20_ = tmp17_+tmp19_;
   double tmp21_ = mCompCoord[0];

  mVal[0] = mLocPIm1_x-(mCompCoord[1]+((tmp1_*tmp11_*mLocDirEsp2_x+(tmp5_*tmp10_+tmp9_*tmp6_)*mLocDirEsp2_y+(tmp5_*tmp12_+tmp9_*tmp10_)*mLocDirEsp2_z)/(tmp20_))*tmp21_);

  mVal[1] = mLocPIm1_y-(mCompCoord[2]+((tmp4_*tmp11_*mLocDirEsp2_x+(tmp1_*tmp10_+tmp13_*tmp6_)*mLocDirEsp2_y+(tmp1_*tmp12_+tmp13_*tmp10_)*mLocDirEsp2_z)/(tmp20_))*tmp21_);

  mVal[2] = 0;

}


void cEqCalibCroisee_NoDist_CodGenM2C::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = cos(tmp0_);
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mCompCoord[5];
   double tmp4_ = sin(tmp0_);
   double tmp5_ = -(tmp4_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = sin(tmp2_);
   double tmp8_ = -(tmp7_);
   double tmp9_ = tmp1_*tmp8_;
   double tmp10_ = cos(tmp3_);
   double tmp11_ = cos(tmp2_);
   double tmp12_ = tmp1_*tmp11_;
   double tmp13_ = tmp12_*mLocDirEsp2_x;
   double tmp14_ = tmp5_*tmp10_;
   double tmp15_ = tmp9_*tmp6_;
   double tmp16_ = tmp14_+tmp15_;
   double tmp17_ = (tmp16_)*mLocDirEsp2_y;
   double tmp18_ = tmp13_+tmp17_;
   double tmp19_ = -(tmp6_);
   double tmp20_ = tmp5_*tmp19_;
   double tmp21_ = tmp9_*tmp10_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*mLocDirEsp2_z;
   double tmp24_ = tmp18_+tmp23_;
   double tmp25_ = tmp7_*mLocDirEsp2_x;
   double tmp26_ = tmp11_*tmp6_;
   double tmp27_ = tmp26_*mLocDirEsp2_y;
   double tmp28_ = tmp25_+tmp27_;
   double tmp29_ = tmp11_*tmp10_;
   double tmp30_ = tmp29_*mLocDirEsp2_z;
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = (tmp24_)/(tmp31_);
   double tmp33_ = -(1);
   double tmp34_ = tmp33_*tmp4_;
   double tmp35_ = -(tmp1_);
   double tmp36_ = tmp34_*tmp8_;
   double tmp37_ = mCompCoord[0];
   double tmp38_ = -(tmp11_);
   double tmp39_ = tmp38_*tmp1_;
   double tmp40_ = tmp33_*tmp7_;
   double tmp41_ = ElSquare(tmp31_);
   double tmp42_ = tmp33_*tmp6_;
   double tmp43_ = tmp4_*tmp8_;
   double tmp44_ = tmp4_*tmp11_;
   double tmp45_ = tmp44_*mLocDirEsp2_x;
   double tmp46_ = tmp1_*tmp10_;
   double tmp47_ = tmp43_*tmp6_;
   double tmp48_ = tmp46_+tmp47_;
   double tmp49_ = (tmp48_)*mLocDirEsp2_y;
   double tmp50_ = tmp45_+tmp49_;
   double tmp51_ = tmp1_*tmp19_;
   double tmp52_ = tmp43_*tmp10_;
   double tmp53_ = tmp51_+tmp52_;
   double tmp54_ = (tmp53_)*mLocDirEsp2_z;
   double tmp55_ = tmp50_+tmp54_;
   double tmp56_ = (tmp55_)/(tmp31_);
   double tmp57_ = tmp38_*tmp4_;
   double tmp58_ = tmp11_*mLocDirEsp2_x;
   double tmp59_ = tmp40_*tmp6_;
   double tmp60_ = tmp59_*mLocDirEsp2_y;
   double tmp61_ = tmp58_+tmp60_;
   double tmp62_ = tmp40_*tmp10_;
   double tmp63_ = tmp62_*mLocDirEsp2_z;
   double tmp64_ = tmp61_+tmp63_;
   double tmp65_ = -(tmp10_);
   double tmp66_ = tmp10_*tmp11_;
   double tmp67_ = tmp66_*mLocDirEsp2_y;
   double tmp68_ = tmp42_*tmp11_;
   double tmp69_ = tmp68_*mLocDirEsp2_z;
   double tmp70_ = tmp67_+tmp69_;

  mVal[0] = mLocPIm1_x-(mCompCoord[1]+(tmp32_)*tmp37_);

  mCompDer[0][0] = -(tmp32_);
  mCompDer[0][1] = tmp33_;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = -((((tmp34_*tmp11_*mLocDirEsp2_x+(tmp35_*tmp10_+tmp36_*tmp6_)*mLocDirEsp2_y+(tmp35_*tmp19_+tmp36_*tmp10_)*mLocDirEsp2_z)*(tmp31_))/tmp41_)*tmp37_);
  mCompDer[0][4] = -((((tmp40_*tmp1_*mLocDirEsp2_x+tmp39_*tmp6_*mLocDirEsp2_y+tmp39_*tmp10_*mLocDirEsp2_z)*(tmp31_)-(tmp24_)*(tmp64_))/tmp41_)*tmp37_);
  mCompDer[0][5] = -(((((tmp42_*tmp5_+tmp10_*tmp9_)*mLocDirEsp2_y+(tmp65_*tmp5_+tmp42_*tmp9_)*mLocDirEsp2_z)*(tmp31_)-(tmp24_)*(tmp70_))/tmp41_)*tmp37_);
  mCompDer[0][6] = 0;
  mCompDer[0][7] = 0;
  mCompDer[0][8] = 0;
  mVal[1] = mLocPIm1_y-(mCompCoord[2]+(tmp56_)*tmp37_);

  mCompDer[1][0] = -(tmp56_);
  mCompDer[1][1] = 0;
  mCompDer[1][2] = tmp33_;
  mCompDer[1][3] = -((((tmp13_+(tmp34_*tmp10_+tmp15_)*mLocDirEsp2_y+(tmp34_*tmp19_+tmp21_)*mLocDirEsp2_z)*(tmp31_))/tmp41_)*tmp37_);
  mCompDer[1][4] = -((((tmp40_*tmp4_*mLocDirEsp2_x+tmp57_*tmp6_*mLocDirEsp2_y+tmp57_*tmp10_*mLocDirEsp2_z)*(tmp31_)-(tmp55_)*(tmp64_))/tmp41_)*tmp37_);
  mCompDer[1][5] = -(((((tmp42_*tmp1_+tmp10_*tmp43_)*mLocDirEsp2_y+(tmp65_*tmp1_+tmp42_*tmp43_)*mLocDirEsp2_z)*(tmp31_)-(tmp55_)*(tmp70_))/tmp41_)*tmp37_);
  mCompDer[1][6] = 0;
  mCompDer[1][7] = 0;
  mCompDer[1][8] = 0;
  mVal[2] = 0;

  mCompDer[2][0] = 0;
  mCompDer[2][1] = 0;
  mCompDer[2][2] = 0;
  mCompDer[2][3] = 0;
  mCompDer[2][4] = 0;
  mCompDer[2][5] = 0;
  mCompDer[2][6] = 0;
  mCompDer[2][7] = 0;
  mCompDer[2][8] = 0;
}


void cEqCalibCroisee_NoDist_CodGenM2C::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqCalibCroisee_NoDist_CodGenM2C Has no Der Sec");
}

void cEqCalibCroisee_NoDist_CodGenM2C::SetDirEsp2_x(double aVal){ mLocDirEsp2_x = aVal;}
void cEqCalibCroisee_NoDist_CodGenM2C::SetDirEsp2_y(double aVal){ mLocDirEsp2_y = aVal;}
void cEqCalibCroisee_NoDist_CodGenM2C::SetDirEsp2_z(double aVal){ mLocDirEsp2_z = aVal;}
void cEqCalibCroisee_NoDist_CodGenM2C::SetPIm1_x(double aVal){ mLocPIm1_x = aVal;}
void cEqCalibCroisee_NoDist_CodGenM2C::SetPIm1_y(double aVal){ mLocPIm1_y = aVal;}



double * cEqCalibCroisee_NoDist_CodGenM2C::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "DirEsp2_x") return & mLocDirEsp2_x;
   if (aName == "DirEsp2_y") return & mLocDirEsp2_y;
   if (aName == "DirEsp2_z") return & mLocDirEsp2_z;
   if (aName == "PIm1_x") return & mLocPIm1_x;
   if (aName == "PIm1_y") return & mLocPIm1_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqCalibCroisee_NoDist_CodGenM2C::mTheAuto("cEqCalibCroisee_NoDist_CodGenM2C",cEqCalibCroisee_NoDist_CodGenM2C::Alloc);


cElCompiledFonc *  cEqCalibCroisee_NoDist_CodGenM2C::Alloc()
{  return new cEqCalibCroisee_NoDist_CodGenM2C();
}


