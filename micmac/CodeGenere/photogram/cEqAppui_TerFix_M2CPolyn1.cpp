// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cEqAppui_TerFix_M2CPolyn1.h"


cEqAppui_TerFix_M2CPolyn1::cEqAppui_TerFix_M2CPolyn1():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,5));
   AddIntRef (cIncIntervale("Orient",5,11));
   Close(false);
}



void cEqAppui_TerFix_M2CPolyn1::ComputeVal()
{
   double tmp0_ = mCompCoord[5];
   double tmp1_ = mCompCoord[6];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[7];
   double tmp7_ = mCompCoord[8];
   double tmp8_ = mLocXTer - tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[9];
   double tmp14_ = mLocYTer - tmp13_;
   double tmp15_ = mCompCoord[10];
   double tmp16_ = mLocZTer - tmp15_;
   double tmp17_ = -(tmp3_);
   double tmp18_ = tmp4_ * tmp11_;
   double tmp19_ = tmp3_ * tmp11_;
   double tmp20_ = mCompCoord[0];
   double tmp21_ = tmp17_ * tmp10_;
   double tmp22_ = tmp18_ * tmp12_;
   double tmp23_ = tmp21_ + tmp22_;
   double tmp24_ = (tmp23_) * (tmp8_);
   double tmp25_ = tmp4_ * tmp10_;
   double tmp26_ = tmp19_ * tmp12_;
   double tmp27_ = tmp25_ + tmp26_;
   double tmp28_ = (tmp27_) * (tmp14_);
   double tmp29_ = tmp24_ + tmp28_;
   double tmp30_ = tmp2_ * tmp12_;
   double tmp31_ = tmp30_ * (tmp16_);
   double tmp32_ = tmp29_ + tmp31_;
   double tmp33_ = tmp20_ / (tmp32_);
   double tmp34_ = mCompCoord[3];
   double tmp35_ = tmp17_ * tmp12_;
   double tmp36_ = tmp18_ * tmp9_;
   double tmp37_ = tmp35_ + tmp36_;
   double tmp38_ = (tmp37_) * (tmp8_);
   double tmp39_ = tmp4_ * tmp12_;
   double tmp40_ = tmp19_ * tmp9_;
   double tmp41_ = tmp39_ + tmp40_;
   double tmp42_ = (tmp41_) * (tmp14_);
   double tmp43_ = tmp38_ + tmp42_;
   double tmp44_ = tmp2_ * tmp9_;
   double tmp45_ = tmp44_ * (tmp16_);
   double tmp46_ = tmp43_ + tmp45_;
   double tmp47_ = (tmp46_) * (tmp33_);
   double tmp48_ = mCompCoord[2];
   double tmp49_ = tmp47_ + tmp48_;
   double tmp50_ = mCompCoord[4];
   double tmp51_ = tmp4_ * tmp2_;
   double tmp52_ = tmp51_ * (tmp8_);
   double tmp53_ = tmp3_ * tmp2_;
   double tmp54_ = tmp53_ * (tmp14_);
   double tmp55_ = tmp52_ + tmp54_;
   double tmp56_ = tmp5_ * (tmp16_);
   double tmp57_ = tmp55_ + tmp56_;
   double tmp58_ = (tmp57_) * (tmp33_);
   double tmp59_ = mCompCoord[1];
   double tmp60_ = tmp58_ + tmp59_;

  mVal[0] = (((1 + tmp34_) * (tmp60_) + tmp50_ * (tmp49_)) - mLocXIm) * mLocScNorm;

  mVal[1] = (((1 - tmp34_) * (tmp49_) + tmp50_ * (tmp60_)) - mLocYIm) * mLocScNorm;

}


void cEqAppui_TerFix_M2CPolyn1::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[5];
   double tmp1_ = mCompCoord[6];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[7];
   double tmp7_ = mCompCoord[8];
   double tmp8_ = mLocXTer - tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[9];
   double tmp14_ = mLocYTer - tmp13_;
   double tmp15_ = mCompCoord[10];
   double tmp16_ = mLocZTer - tmp15_;
   double tmp17_ = -(tmp3_);
   double tmp18_ = tmp4_ * tmp11_;
   double tmp19_ = tmp3_ * tmp11_;
   double tmp20_ = mCompCoord[0];
   double tmp21_ = tmp17_ * tmp10_;
   double tmp22_ = tmp18_ * tmp12_;
   double tmp23_ = tmp21_ + tmp22_;
   double tmp24_ = (tmp23_) * (tmp8_);
   double tmp25_ = tmp4_ * tmp10_;
   double tmp26_ = tmp19_ * tmp12_;
   double tmp27_ = tmp25_ + tmp26_;
   double tmp28_ = (tmp27_) * (tmp14_);
   double tmp29_ = tmp24_ + tmp28_;
   double tmp30_ = tmp2_ * tmp12_;
   double tmp31_ = tmp30_ * (tmp16_);
   double tmp32_ = tmp29_ + tmp31_;
   double tmp33_ = tmp20_ / (tmp32_);
   double tmp34_ = tmp4_ * tmp2_;
   double tmp35_ = tmp34_ * (tmp8_);
   double tmp36_ = tmp3_ * tmp2_;
   double tmp37_ = tmp36_ * (tmp14_);
   double tmp38_ = tmp35_ + tmp37_;
   double tmp39_ = tmp5_ * (tmp16_);
   double tmp40_ = tmp38_ + tmp39_;
   double tmp41_ = mCompCoord[3];
   double tmp42_ = 1 + tmp41_;
   double tmp43_ = ElSquare(tmp32_);
   double tmp44_ = (tmp32_) / tmp43_;
   double tmp45_ = tmp17_ * tmp12_;
   double tmp46_ = tmp18_ * tmp9_;
   double tmp47_ = tmp45_ + tmp46_;
   double tmp48_ = (tmp47_) * (tmp8_);
   double tmp49_ = tmp4_ * tmp12_;
   double tmp50_ = tmp19_ * tmp9_;
   double tmp51_ = tmp49_ + tmp50_;
   double tmp52_ = (tmp51_) * (tmp14_);
   double tmp53_ = tmp48_ + tmp52_;
   double tmp54_ = tmp2_ * tmp9_;
   double tmp55_ = tmp54_ * (tmp16_);
   double tmp56_ = tmp53_ + tmp55_;
   double tmp57_ = mCompCoord[4];
   double tmp58_ = (tmp40_) * (tmp33_);
   double tmp59_ = mCompCoord[1];
   double tmp60_ = tmp58_ + tmp59_;
   double tmp61_ = (tmp56_) * (tmp33_);
   double tmp62_ = mCompCoord[2];
   double tmp63_ = tmp61_ + tmp62_;
   double tmp64_ = -(1);
   double tmp65_ = tmp64_ * tmp3_;
   double tmp66_ = -(tmp4_);
   double tmp67_ = tmp65_ * tmp11_;
   double tmp68_ = tmp66_ * tmp10_;
   double tmp69_ = tmp67_ * tmp12_;
   double tmp70_ = tmp68_ + tmp69_;
   double tmp71_ = (tmp70_) * (tmp8_);
   double tmp72_ = tmp65_ * tmp10_;
   double tmp73_ = tmp72_ + tmp22_;
   double tmp74_ = (tmp73_) * (tmp14_);
   double tmp75_ = tmp71_ + tmp74_;
   double tmp76_ = tmp20_ * (tmp75_);
   double tmp77_ = -(tmp76_);
   double tmp78_ = tmp77_ / tmp43_;
   double tmp79_ = tmp64_ * tmp5_;
   double tmp80_ = -(tmp2_);
   double tmp81_ = tmp80_ * tmp4_;
   double tmp82_ = tmp80_ * tmp3_;
   double tmp83_ = tmp81_ * tmp12_;
   double tmp84_ = tmp83_ * (tmp8_);
   double tmp85_ = tmp82_ * tmp12_;
   double tmp86_ = tmp85_ * (tmp14_);
   double tmp87_ = tmp84_ + tmp86_;
   double tmp88_ = tmp79_ * tmp12_;
   double tmp89_ = tmp88_ * (tmp16_);
   double tmp90_ = tmp87_ + tmp89_;
   double tmp91_ = tmp20_ * (tmp90_);
   double tmp92_ = -(tmp91_);
   double tmp93_ = tmp92_ / tmp43_;
   double tmp94_ = -(tmp12_);
   double tmp95_ = tmp64_ * tmp9_;
   double tmp96_ = tmp94_ * tmp17_;
   double tmp97_ = tmp95_ * tmp18_;
   double tmp98_ = tmp96_ + tmp97_;
   double tmp99_ = (tmp98_) * (tmp8_);
   double tmp100_ = tmp94_ * tmp4_;
   double tmp101_ = tmp95_ * tmp19_;
   double tmp102_ = tmp100_ + tmp101_;
   double tmp103_ = (tmp102_) * (tmp14_);
   double tmp104_ = tmp99_ + tmp103_;
   double tmp105_ = tmp95_ * tmp2_;
   double tmp106_ = tmp105_ * (tmp16_);
   double tmp107_ = tmp104_ + tmp106_;
   double tmp108_ = tmp20_ * (tmp107_);
   double tmp109_ = -(tmp108_);
   double tmp110_ = tmp109_ / tmp43_;
   double tmp111_ = tmp64_ * (tmp23_);
   double tmp112_ = tmp20_ * tmp111_;
   double tmp113_ = -(tmp112_);
   double tmp114_ = tmp113_ / tmp43_;
   double tmp115_ = tmp64_ * (tmp27_);
   double tmp116_ = tmp20_ * tmp115_;
   double tmp117_ = -(tmp116_);
   double tmp118_ = tmp117_ / tmp43_;
   double tmp119_ = tmp64_ * tmp30_;
   double tmp120_ = tmp20_ * tmp119_;
   double tmp121_ = -(tmp120_);
   double tmp122_ = tmp121_ / tmp43_;
   double tmp123_ = (tmp44_) * (tmp56_);
   double tmp124_ = 1 - tmp41_;
   double tmp125_ = (tmp44_) * (tmp40_);
   double tmp126_ = tmp57_ * mLocScNorm;
   double tmp127_ = (tmp60_) * mLocScNorm;
   double tmp128_ = tmp66_ * tmp12_;
   double tmp129_ = tmp67_ * tmp9_;
   double tmp130_ = tmp128_ + tmp129_;
   double tmp131_ = (tmp130_) * (tmp8_);
   double tmp132_ = tmp65_ * tmp12_;
   double tmp133_ = tmp132_ + tmp46_;
   double tmp134_ = (tmp133_) * (tmp14_);
   double tmp135_ = tmp131_ + tmp134_;
   double tmp136_ = (tmp135_) * (tmp33_);
   double tmp137_ = (tmp78_) * (tmp56_);
   double tmp138_ = tmp136_ + tmp137_;
   double tmp139_ = tmp65_ * tmp2_;
   double tmp140_ = tmp139_ * (tmp8_);
   double tmp141_ = tmp34_ * (tmp14_);
   double tmp142_ = tmp140_ + tmp141_;
   double tmp143_ = (tmp142_) * (tmp33_);
   double tmp144_ = (tmp78_) * (tmp40_);
   double tmp145_ = tmp143_ + tmp144_;
   double tmp146_ = tmp81_ * tmp9_;
   double tmp147_ = tmp146_ * (tmp8_);
   double tmp148_ = tmp82_ * tmp9_;
   double tmp149_ = tmp148_ * (tmp14_);
   double tmp150_ = tmp147_ + tmp149_;
   double tmp151_ = tmp79_ * tmp9_;
   double tmp152_ = tmp151_ * (tmp16_);
   double tmp153_ = tmp150_ + tmp152_;
   double tmp154_ = (tmp153_) * (tmp33_);
   double tmp155_ = (tmp93_) * (tmp56_);
   double tmp156_ = tmp154_ + tmp155_;
   double tmp157_ = tmp79_ * tmp4_;
   double tmp158_ = tmp157_ * (tmp8_);
   double tmp159_ = tmp79_ * tmp3_;
   double tmp160_ = tmp159_ * (tmp14_);
   double tmp161_ = tmp158_ + tmp160_;
   double tmp162_ = tmp2_ * (tmp16_);
   double tmp163_ = tmp161_ + tmp162_;
   double tmp164_ = (tmp163_) * (tmp33_);
   double tmp165_ = (tmp93_) * (tmp40_);
   double tmp166_ = tmp164_ + tmp165_;
   double tmp167_ = tmp95_ * tmp17_;
   double tmp168_ = tmp12_ * tmp18_;
   double tmp169_ = tmp167_ + tmp168_;
   double tmp170_ = (tmp169_) * (tmp8_);
   double tmp171_ = tmp95_ * tmp4_;
   double tmp172_ = tmp12_ * tmp19_;
   double tmp173_ = tmp171_ + tmp172_;
   double tmp174_ = (tmp173_) * (tmp14_);
   double tmp175_ = tmp170_ + tmp174_;
   double tmp176_ = tmp12_ * tmp2_;
   double tmp177_ = tmp176_ * (tmp16_);
   double tmp178_ = tmp175_ + tmp177_;
   double tmp179_ = (tmp178_) * (tmp33_);
   double tmp180_ = (tmp110_) * (tmp56_);
   double tmp181_ = tmp179_ + tmp180_;
   double tmp182_ = (tmp110_) * (tmp40_);
   double tmp183_ = tmp64_ * (tmp47_);
   double tmp184_ = tmp183_ * (tmp33_);
   double tmp185_ = (tmp114_) * (tmp56_);
   double tmp186_ = tmp184_ + tmp185_;
   double tmp187_ = tmp64_ * tmp34_;
   double tmp188_ = tmp187_ * (tmp33_);
   double tmp189_ = (tmp114_) * (tmp40_);
   double tmp190_ = tmp188_ + tmp189_;
   double tmp191_ = tmp64_ * (tmp51_);
   double tmp192_ = tmp191_ * (tmp33_);
   double tmp193_ = (tmp118_) * (tmp56_);
   double tmp194_ = tmp192_ + tmp193_;
   double tmp195_ = tmp64_ * tmp36_;
   double tmp196_ = tmp195_ * (tmp33_);
   double tmp197_ = (tmp118_) * (tmp40_);
   double tmp198_ = tmp196_ + tmp197_;
   double tmp199_ = tmp64_ * tmp54_;
   double tmp200_ = tmp199_ * (tmp33_);
   double tmp201_ = (tmp122_) * (tmp56_);
   double tmp202_ = tmp200_ + tmp201_;
   double tmp203_ = tmp79_ * (tmp33_);
   double tmp204_ = (tmp122_) * (tmp40_);
   double tmp205_ = tmp203_ + tmp204_;

  mVal[0] = (((tmp42_) * (tmp60_) + tmp57_ * (tmp63_)) - mLocXIm) * mLocScNorm;

  mCompDer[0][0] = (tmp125_ * (tmp42_) + tmp123_ * tmp57_) * mLocScNorm;
  mCompDer[0][1] = (tmp42_) * mLocScNorm;
  mCompDer[0][2] = tmp126_;
  mCompDer[0][3] = tmp127_;
  mCompDer[0][4] = (tmp63_) * mLocScNorm;
  mCompDer[0][5] = ((tmp145_) * (tmp42_) + (tmp138_) * tmp57_) * mLocScNorm;
  mCompDer[0][6] = ((tmp166_) * (tmp42_) + (tmp156_) * tmp57_) * mLocScNorm;
  mCompDer[0][7] = (tmp182_ * (tmp42_) + (tmp181_) * tmp57_) * mLocScNorm;
  mCompDer[0][8] = ((tmp190_) * (tmp42_) + (tmp186_) * tmp57_) * mLocScNorm;
  mCompDer[0][9] = ((tmp198_) * (tmp42_) + (tmp194_) * tmp57_) * mLocScNorm;
  mCompDer[0][10] = ((tmp205_) * (tmp42_) + (tmp202_) * tmp57_) * mLocScNorm;
  mVal[1] = (((tmp124_) * (tmp63_) + tmp57_ * (tmp60_)) - mLocYIm) * mLocScNorm;

  mCompDer[1][0] = (tmp123_ * (tmp124_) + tmp125_ * tmp57_) * mLocScNorm;
  mCompDer[1][1] = tmp126_;
  mCompDer[1][2] = (tmp124_) * mLocScNorm;
  mCompDer[1][3] = tmp64_ * (tmp63_) * mLocScNorm;
  mCompDer[1][4] = tmp127_;
  mCompDer[1][5] = ((tmp138_) * (tmp124_) + (tmp145_) * tmp57_) * mLocScNorm;
  mCompDer[1][6] = ((tmp156_) * (tmp124_) + (tmp166_) * tmp57_) * mLocScNorm;
  mCompDer[1][7] = ((tmp181_) * (tmp124_) + tmp182_ * tmp57_) * mLocScNorm;
  mCompDer[1][8] = ((tmp186_) * (tmp124_) + (tmp190_) * tmp57_) * mLocScNorm;
  mCompDer[1][9] = ((tmp194_) * (tmp124_) + (tmp198_) * tmp57_) * mLocScNorm;
  mCompDer[1][10] = ((tmp202_) * (tmp124_) + (tmp205_) * tmp57_) * mLocScNorm;
}


void cEqAppui_TerFix_M2CPolyn1::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_TerFix_M2CPolyn1 Has no Der Sec");
}

void cEqAppui_TerFix_M2CPolyn1::SetScNorm(double aVal){ mLocScNorm = aVal;}
void cEqAppui_TerFix_M2CPolyn1::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_TerFix_M2CPolyn1::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_TerFix_M2CPolyn1::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_TerFix_M2CPolyn1::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_TerFix_M2CPolyn1::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_TerFix_M2CPolyn1::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "ScNorm") return & mLocScNorm;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_TerFix_M2CPolyn1::mTheAuto("cEqAppui_TerFix_M2CPolyn1",cEqAppui_TerFix_M2CPolyn1::Alloc);


cElCompiledFonc *  cEqAppui_TerFix_M2CPolyn1::Alloc()
{  return new cEqAppui_TerFix_M2CPolyn1();
}


