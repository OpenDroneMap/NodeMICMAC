// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cRegCamConseq_Polyn1.h"


cRegCamConseq_Polyn1::cRegCamConseq_Polyn1():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,5));
   AddIntRef (cIncIntervale("Intr2",5,10));
   Close(false);
}



void cRegCamConseq_Polyn1::ComputeVal()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = tmp0_ / mLocRay_z;
   double tmp2_ = mCompCoord[5];
   double tmp3_ = tmp2_ / mLocRay_z;
   double tmp4_ = mCompCoord[3];
   double tmp5_ = mLocRay_y * (tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = tmp5_ + tmp6_;
   double tmp8_ = mCompCoord[4];
   double tmp9_ = mLocRay_x * (tmp1_);
   double tmp10_ = mCompCoord[1];
   double tmp11_ = tmp9_ + tmp10_;
   double tmp12_ = mCompCoord[8];
   double tmp13_ = mLocRay_y * (tmp3_);
   double tmp14_ = mCompCoord[7];
   double tmp15_ = tmp13_ + tmp14_;
   double tmp16_ = mCompCoord[9];
   double tmp17_ = mLocRay_x * (tmp3_);
   double tmp18_ = mCompCoord[6];
   double tmp19_ = tmp17_ + tmp18_;

  mVal[0] = ((1 + tmp4_) * (tmp11_) + tmp8_ * (tmp7_)) - ((1 + tmp12_) * (tmp19_) + tmp16_ * (tmp15_));

  mVal[1] = ((1 - tmp4_) * (tmp7_) + tmp8_ * (tmp11_)) - ((1 - tmp12_) * (tmp15_) + tmp16_ * (tmp19_));

}


void cRegCamConseq_Polyn1::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = tmp0_ / mLocRay_z;
   double tmp2_ = mCompCoord[5];
   double tmp3_ = tmp2_ / mLocRay_z;
   double tmp4_ = mCompCoord[3];
   double tmp5_ = 1 + tmp4_;
   double tmp6_ = ElSquare(mLocRay_z);
   double tmp7_ = mLocRay_z / tmp6_;
   double tmp8_ = mCompCoord[4];
   double tmp9_ = mLocRay_x * (tmp1_);
   double tmp10_ = mCompCoord[1];
   double tmp11_ = tmp9_ + tmp10_;
   double tmp12_ = mLocRay_y * (tmp1_);
   double tmp13_ = mCompCoord[2];
   double tmp14_ = tmp12_ + tmp13_;
   double tmp15_ = (tmp7_) * mLocRay_x;
   double tmp16_ = mCompCoord[8];
   double tmp17_ = 1 + tmp16_;
   double tmp18_ = (tmp7_) * mLocRay_y;
   double tmp19_ = mCompCoord[9];
   double tmp20_ = mLocRay_x * (tmp3_);
   double tmp21_ = mCompCoord[6];
   double tmp22_ = tmp20_ + tmp21_;
   double tmp23_ = mLocRay_y * (tmp3_);
   double tmp24_ = mCompCoord[7];
   double tmp25_ = tmp23_ + tmp24_;
   double tmp26_ = 1 - tmp4_;
   double tmp27_ = 1 - tmp16_;
   double tmp28_ = -(tmp19_);
   double tmp29_ = -(1);
   double tmp30_ = -(tmp22_);

  mVal[0] = ((tmp5_) * (tmp11_) + tmp8_ * (tmp14_)) - ((tmp17_) * (tmp22_) + tmp19_ * (tmp25_));

  mCompDer[0][0] = tmp15_ * (tmp5_) + tmp18_ * tmp8_;
  mCompDer[0][1] = tmp5_;
  mCompDer[0][2] = tmp8_;
  mCompDer[0][3] = tmp11_;
  mCompDer[0][4] = tmp14_;
  mCompDer[0][5] = -(tmp15_ * (tmp17_) + tmp18_ * tmp19_);
  mCompDer[0][6] = -(tmp17_);
  mCompDer[0][7] = tmp28_;
  mCompDer[0][8] = tmp30_;
  mCompDer[0][9] = -(tmp25_);
  mVal[1] = ((tmp26_) * (tmp14_) + tmp8_ * (tmp11_)) - ((tmp27_) * (tmp25_) + tmp19_ * (tmp22_));

  mCompDer[1][0] = tmp18_ * (tmp26_) + tmp15_ * tmp8_;
  mCompDer[1][1] = tmp8_;
  mCompDer[1][2] = tmp26_;
  mCompDer[1][3] = tmp29_ * (tmp14_);
  mCompDer[1][4] = tmp11_;
  mCompDer[1][5] = -(tmp18_ * (tmp27_) + tmp15_ * tmp19_);
  mCompDer[1][6] = tmp28_;
  mCompDer[1][7] = -(tmp27_);
  mCompDer[1][8] = -(tmp29_ * (tmp25_));
  mCompDer[1][9] = tmp30_;
}


void cRegCamConseq_Polyn1::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cRegCamConseq_Polyn1 Has no Der Sec");
}

void cRegCamConseq_Polyn1::SetRay_x(double aVal){ mLocRay_x = aVal;}
void cRegCamConseq_Polyn1::SetRay_y(double aVal){ mLocRay_y = aVal;}
void cRegCamConseq_Polyn1::SetRay_z(double aVal){ mLocRay_z = aVal;}



double * cRegCamConseq_Polyn1::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Ray_x") return & mLocRay_x;
   if (aName == "Ray_y") return & mLocRay_y;
   if (aName == "Ray_z") return & mLocRay_z;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cRegCamConseq_Polyn1::mTheAuto("cRegCamConseq_Polyn1",cRegCamConseq_Polyn1::Alloc);


cElCompiledFonc *  cRegCamConseq_Polyn1::Alloc()
{  return new cRegCamConseq_Polyn1();
}


