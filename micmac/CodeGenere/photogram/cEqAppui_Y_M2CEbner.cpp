// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_Y_M2CEbner.h"


cEqAppui_Y_M2CEbner::cEqAppui_Y_M2CEbner():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,15));
   AddIntRef (cIncIntervale("Orient",15,21));
   Close(false);
}



void cEqAppui_Y_M2CEbner::ComputeVal()
{
   double tmp0_ = mCompCoord[15];
   double tmp1_ = mCompCoord[17];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[16];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[18];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[19];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[20];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mCompCoord[0];
   double tmp21_ = tmp9_*tmp13_;
   double tmp22_ = tmp10_*tmp3_;
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp12_);
   double tmp25_ = tmp2_*tmp13_;
   double tmp26_ = tmp14_*tmp3_;
   double tmp27_ = tmp25_+tmp26_;
   double tmp28_ = (tmp27_)*(tmp16_);
   double tmp29_ = tmp24_+tmp28_;
   double tmp30_ = tmp17_*tmp3_;
   double tmp31_ = tmp30_*(tmp19_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = mCompCoord[1];
   double tmp34_ = tmp2_*tmp17_;
   double tmp35_ = tmp34_*(tmp12_);
   double tmp36_ = tmp4_*tmp17_;
   double tmp37_ = tmp36_*(tmp16_);
   double tmp38_ = tmp35_+tmp37_;
   double tmp39_ = tmp6_*(tmp19_);
   double tmp40_ = tmp38_+tmp39_;
   double tmp41_ = (tmp40_)/(tmp32_);
   double tmp42_ = tmp20_*(tmp41_);
   double tmp43_ = tmp33_+tmp42_;
   double tmp44_ = mCompCoord[2];
   double tmp45_ = tmp9_*tmp3_;
   double tmp46_ = tmp10_*tmp8_;
   double tmp47_ = tmp45_+tmp46_;
   double tmp48_ = (tmp47_)*(tmp12_);
   double tmp49_ = tmp2_*tmp3_;
   double tmp50_ = tmp14_*tmp8_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)*(tmp16_);
   double tmp53_ = tmp48_+tmp52_;
   double tmp54_ = tmp17_*tmp8_;
   double tmp55_ = tmp54_*(tmp19_);
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = (tmp56_)/(tmp32_);
   double tmp58_ = tmp20_*(tmp57_);
   double tmp59_ = tmp44_+tmp58_;
   double tmp60_ = mLocEbner_State_0_0*mLocEbner_State_0_0;
   double tmp61_ = tmp60_*0.666667;
   double tmp62_ = (tmp43_)*(tmp43_);
   double tmp63_ = tmp62_-tmp61_;
   double tmp64_ = (tmp59_)*(tmp59_);
   double tmp65_ = tmp64_-tmp61_;

  mVal[0] = (((1-mCompCoord[3])*(tmp59_)+mCompCoord[4]*(tmp43_)+mCompCoord[5]*(tmp43_)*(tmp59_))-mCompCoord[6]*2*(tmp65_)+mCompCoord[8]*(tmp63_)+mCompCoord[10]*(tmp59_)*(tmp63_)+mCompCoord[12]*(tmp43_)*(tmp65_)+mCompCoord[14]*(tmp63_)*(tmp65_))-mLocYIm;

}


void cEqAppui_Y_M2CEbner::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[15];
   double tmp1_ = mCompCoord[17];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[16];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[18];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[19];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[20];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mCompCoord[0];
   double tmp21_ = tmp9_*tmp13_;
   double tmp22_ = tmp10_*tmp3_;
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp12_);
   double tmp25_ = tmp2_*tmp13_;
   double tmp26_ = tmp14_*tmp3_;
   double tmp27_ = tmp25_+tmp26_;
   double tmp28_ = (tmp27_)*(tmp16_);
   double tmp29_ = tmp24_+tmp28_;
   double tmp30_ = tmp17_*tmp3_;
   double tmp31_ = tmp30_*(tmp19_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = mCompCoord[1];
   double tmp34_ = tmp2_*tmp17_;
   double tmp35_ = tmp34_*(tmp12_);
   double tmp36_ = tmp4_*tmp17_;
   double tmp37_ = tmp36_*(tmp16_);
   double tmp38_ = tmp35_+tmp37_;
   double tmp39_ = tmp6_*(tmp19_);
   double tmp40_ = tmp38_+tmp39_;
   double tmp41_ = (tmp40_)/(tmp32_);
   double tmp42_ = tmp20_*(tmp41_);
   double tmp43_ = tmp33_+tmp42_;
   double tmp44_ = mCompCoord[2];
   double tmp45_ = tmp9_*tmp3_;
   double tmp46_ = tmp10_*tmp8_;
   double tmp47_ = tmp45_+tmp46_;
   double tmp48_ = (tmp47_)*(tmp12_);
   double tmp49_ = tmp2_*tmp3_;
   double tmp50_ = tmp14_*tmp8_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)*(tmp16_);
   double tmp53_ = tmp48_+tmp52_;
   double tmp54_ = tmp17_*tmp8_;
   double tmp55_ = tmp54_*(tmp19_);
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = (tmp56_)/(tmp32_);
   double tmp58_ = tmp20_*(tmp57_);
   double tmp59_ = tmp44_+tmp58_;
   double tmp60_ = mLocEbner_State_0_0*mLocEbner_State_0_0;
   double tmp61_ = tmp60_*0.666667;
   double tmp62_ = (tmp43_)*(tmp43_);
   double tmp63_ = tmp62_-tmp61_;
   double tmp64_ = (tmp59_)*(tmp59_);
   double tmp65_ = tmp64_-tmp61_;
   double tmp66_ = mCompCoord[3];
   double tmp67_ = 1-tmp66_;
   double tmp68_ = mCompCoord[4];
   double tmp69_ = mCompCoord[5];
   double tmp70_ = (tmp57_)*(tmp59_);
   double tmp71_ = mCompCoord[6];
   double tmp72_ = tmp71_*2;
   double tmp73_ = (tmp41_)*(tmp43_);
   double tmp74_ = mCompCoord[8];
   double tmp75_ = mCompCoord[10];
   double tmp76_ = tmp73_+tmp73_;
   double tmp77_ = tmp75_*(tmp59_);
   double tmp78_ = mCompCoord[12];
   double tmp79_ = tmp70_+tmp70_;
   double tmp80_ = tmp78_*(tmp43_);
   double tmp81_ = mCompCoord[14];
   double tmp82_ = tmp81_*(tmp63_);
   double tmp83_ = tmp43_+tmp43_;
   double tmp84_ = tmp59_+tmp59_;
   double tmp85_ = (tmp43_)*(tmp59_);
   double tmp86_ = -(1);
   double tmp87_ = tmp86_*tmp4_;
   double tmp88_ = -(tmp2_);
   double tmp89_ = tmp87_*tmp7_;
   double tmp90_ = tmp88_*tmp13_;
   double tmp91_ = tmp89_*tmp3_;
   double tmp92_ = tmp90_+tmp91_;
   double tmp93_ = (tmp92_)*(tmp12_);
   double tmp94_ = tmp87_*tmp13_;
   double tmp95_ = tmp94_+tmp22_;
   double tmp96_ = (tmp95_)*(tmp16_);
   double tmp97_ = tmp93_+tmp96_;
   double tmp98_ = ElSquare(tmp32_);
   double tmp99_ = tmp87_*tmp17_;
   double tmp100_ = tmp99_*(tmp12_);
   double tmp101_ = tmp34_*(tmp16_);
   double tmp102_ = tmp100_+tmp101_;
   double tmp103_ = (tmp102_)*(tmp32_);
   double tmp104_ = (tmp40_)*(tmp97_);
   double tmp105_ = tmp103_-tmp104_;
   double tmp106_ = (tmp105_)/tmp98_;
   double tmp107_ = (tmp106_)*tmp20_;
   double tmp108_ = tmp88_*tmp3_;
   double tmp109_ = tmp89_*tmp8_;
   double tmp110_ = tmp108_+tmp109_;
   double tmp111_ = (tmp110_)*(tmp12_);
   double tmp112_ = tmp87_*tmp3_;
   double tmp113_ = tmp112_+tmp46_;
   double tmp114_ = (tmp113_)*(tmp16_);
   double tmp115_ = tmp111_+tmp114_;
   double tmp116_ = (tmp115_)*(tmp32_);
   double tmp117_ = (tmp56_)*(tmp97_);
   double tmp118_ = tmp116_-tmp117_;
   double tmp119_ = (tmp118_)/tmp98_;
   double tmp120_ = (tmp119_)*tmp20_;
   double tmp121_ = tmp120_*(tmp59_);
   double tmp122_ = tmp107_*(tmp43_);
   double tmp123_ = tmp122_+tmp122_;
   double tmp124_ = tmp121_+tmp121_;
   double tmp125_ = -(tmp17_);
   double tmp126_ = tmp125_*tmp2_;
   double tmp127_ = tmp125_*tmp4_;
   double tmp128_ = tmp86_*tmp6_;
   double tmp129_ = tmp126_*tmp3_;
   double tmp130_ = tmp129_*(tmp12_);
   double tmp131_ = tmp127_*tmp3_;
   double tmp132_ = tmp131_*(tmp16_);
   double tmp133_ = tmp130_+tmp132_;
   double tmp134_ = tmp128_*tmp3_;
   double tmp135_ = tmp134_*(tmp19_);
   double tmp136_ = tmp133_+tmp135_;
   double tmp137_ = tmp128_*tmp2_;
   double tmp138_ = tmp137_*(tmp12_);
   double tmp139_ = tmp128_*tmp4_;
   double tmp140_ = tmp139_*(tmp16_);
   double tmp141_ = tmp138_+tmp140_;
   double tmp142_ = tmp17_*(tmp19_);
   double tmp143_ = tmp141_+tmp142_;
   double tmp144_ = (tmp143_)*(tmp32_);
   double tmp145_ = (tmp40_)*(tmp136_);
   double tmp146_ = tmp144_-tmp145_;
   double tmp147_ = (tmp146_)/tmp98_;
   double tmp148_ = (tmp147_)*tmp20_;
   double tmp149_ = tmp126_*tmp8_;
   double tmp150_ = tmp149_*(tmp12_);
   double tmp151_ = tmp127_*tmp8_;
   double tmp152_ = tmp151_*(tmp16_);
   double tmp153_ = tmp150_+tmp152_;
   double tmp154_ = tmp128_*tmp8_;
   double tmp155_ = tmp154_*(tmp19_);
   double tmp156_ = tmp153_+tmp155_;
   double tmp157_ = (tmp156_)*(tmp32_);
   double tmp158_ = (tmp56_)*(tmp136_);
   double tmp159_ = tmp157_-tmp158_;
   double tmp160_ = (tmp159_)/tmp98_;
   double tmp161_ = (tmp160_)*tmp20_;
   double tmp162_ = tmp161_*(tmp59_);
   double tmp163_ = tmp148_*(tmp43_);
   double tmp164_ = tmp163_+tmp163_;
   double tmp165_ = tmp162_+tmp162_;
   double tmp166_ = tmp86_*tmp8_;
   double tmp167_ = -(tmp3_);
   double tmp168_ = tmp167_*tmp9_;
   double tmp169_ = tmp166_*tmp10_;
   double tmp170_ = tmp168_+tmp169_;
   double tmp171_ = (tmp170_)*(tmp12_);
   double tmp172_ = tmp167_*tmp2_;
   double tmp173_ = tmp166_*tmp14_;
   double tmp174_ = tmp172_+tmp173_;
   double tmp175_ = (tmp174_)*(tmp16_);
   double tmp176_ = tmp171_+tmp175_;
   double tmp177_ = tmp166_*tmp17_;
   double tmp178_ = tmp177_*(tmp19_);
   double tmp179_ = tmp176_+tmp178_;
   double tmp180_ = (tmp40_)*(tmp179_);
   double tmp181_ = -(tmp180_);
   double tmp182_ = tmp181_/tmp98_;
   double tmp183_ = (tmp182_)*tmp20_;
   double tmp184_ = tmp166_*tmp9_;
   double tmp185_ = tmp3_*tmp10_;
   double tmp186_ = tmp184_+tmp185_;
   double tmp187_ = (tmp186_)*(tmp12_);
   double tmp188_ = tmp166_*tmp2_;
   double tmp189_ = tmp3_*tmp14_;
   double tmp190_ = tmp188_+tmp189_;
   double tmp191_ = (tmp190_)*(tmp16_);
   double tmp192_ = tmp187_+tmp191_;
   double tmp193_ = tmp3_*tmp17_;
   double tmp194_ = tmp193_*(tmp19_);
   double tmp195_ = tmp192_+tmp194_;
   double tmp196_ = (tmp195_)*(tmp32_);
   double tmp197_ = (tmp56_)*(tmp179_);
   double tmp198_ = tmp196_-tmp197_;
   double tmp199_ = (tmp198_)/tmp98_;
   double tmp200_ = (tmp199_)*tmp20_;
   double tmp201_ = tmp200_*(tmp59_);
   double tmp202_ = tmp183_*(tmp43_);
   double tmp203_ = tmp202_+tmp202_;
   double tmp204_ = tmp201_+tmp201_;
   double tmp205_ = tmp86_*(tmp23_);
   double tmp206_ = tmp86_*tmp34_;
   double tmp207_ = tmp206_*(tmp32_);
   double tmp208_ = (tmp40_)*tmp205_;
   double tmp209_ = tmp207_-tmp208_;
   double tmp210_ = (tmp209_)/tmp98_;
   double tmp211_ = (tmp210_)*tmp20_;
   double tmp212_ = tmp86_*(tmp47_);
   double tmp213_ = tmp212_*(tmp32_);
   double tmp214_ = (tmp56_)*tmp205_;
   double tmp215_ = tmp213_-tmp214_;
   double tmp216_ = (tmp215_)/tmp98_;
   double tmp217_ = (tmp216_)*tmp20_;
   double tmp218_ = tmp217_*(tmp59_);
   double tmp219_ = tmp211_*(tmp43_);
   double tmp220_ = tmp219_+tmp219_;
   double tmp221_ = tmp218_+tmp218_;
   double tmp222_ = tmp86_*(tmp27_);
   double tmp223_ = tmp86_*tmp36_;
   double tmp224_ = tmp223_*(tmp32_);
   double tmp225_ = (tmp40_)*tmp222_;
   double tmp226_ = tmp224_-tmp225_;
   double tmp227_ = (tmp226_)/tmp98_;
   double tmp228_ = (tmp227_)*tmp20_;
   double tmp229_ = tmp86_*(tmp51_);
   double tmp230_ = tmp229_*(tmp32_);
   double tmp231_ = (tmp56_)*tmp222_;
   double tmp232_ = tmp230_-tmp231_;
   double tmp233_ = (tmp232_)/tmp98_;
   double tmp234_ = (tmp233_)*tmp20_;
   double tmp235_ = tmp234_*(tmp59_);
   double tmp236_ = tmp228_*(tmp43_);
   double tmp237_ = tmp236_+tmp236_;
   double tmp238_ = tmp235_+tmp235_;
   double tmp239_ = tmp86_*tmp30_;
   double tmp240_ = tmp128_*(tmp32_);
   double tmp241_ = (tmp40_)*tmp239_;
   double tmp242_ = tmp240_-tmp241_;
   double tmp243_ = (tmp242_)/tmp98_;
   double tmp244_ = (tmp243_)*tmp20_;
   double tmp245_ = tmp86_*tmp54_;
   double tmp246_ = tmp245_*(tmp32_);
   double tmp247_ = (tmp56_)*tmp239_;
   double tmp248_ = tmp246_-tmp247_;
   double tmp249_ = (tmp248_)/tmp98_;
   double tmp250_ = (tmp249_)*tmp20_;
   double tmp251_ = tmp250_*(tmp59_);
   double tmp252_ = tmp244_*(tmp43_);
   double tmp253_ = tmp252_+tmp252_;
   double tmp254_ = tmp251_+tmp251_;

  mVal[0] = (((tmp67_)*(tmp59_)+tmp68_*(tmp43_)+tmp69_*tmp85_)-tmp72_*(tmp65_)+tmp74_*(tmp63_)+tmp77_*(tmp63_)+tmp80_*(tmp65_)+tmp82_*(tmp65_))-mLocYIm;

  mCompDer[0][0] = ((tmp57_)*(tmp67_)+(tmp41_)*tmp68_+((tmp41_)*(tmp59_)+(tmp57_)*(tmp43_))*tmp69_)-(tmp79_)*tmp72_+(tmp76_)*tmp74_+(tmp57_)*tmp75_*(tmp63_)+(tmp76_)*tmp77_+(tmp41_)*tmp78_*(tmp65_)+(tmp79_)*tmp80_+(tmp76_)*tmp81_*(tmp65_)+(tmp79_)*tmp82_;
  mCompDer[0][1] = tmp68_+(tmp59_)*tmp69_+(tmp83_)*tmp74_+(tmp83_)*tmp77_+tmp78_*(tmp65_)+(tmp83_)*tmp81_*(tmp65_);
  mCompDer[0][2] = (tmp67_+(tmp43_)*tmp69_)-(tmp84_)*tmp72_+tmp75_*(tmp63_)+(tmp84_)*tmp80_+(tmp84_)*tmp82_;
  mCompDer[0][3] = tmp86_*(tmp59_);
  mCompDer[0][4] = tmp43_;
  mCompDer[0][5] = tmp85_;
  mCompDer[0][6] = -(2*(tmp65_));
  mCompDer[0][7] = 0;
  mCompDer[0][8] = tmp63_;
  mCompDer[0][9] = 0;
  mCompDer[0][10] = (tmp59_)*(tmp63_);
  mCompDer[0][11] = 0;
  mCompDer[0][12] = (tmp43_)*(tmp65_);
  mCompDer[0][13] = 0;
  mCompDer[0][14] = (tmp63_)*(tmp65_);
  mCompDer[0][15] = (tmp120_*(tmp67_)+tmp107_*tmp68_+(tmp107_*(tmp59_)+tmp120_*(tmp43_))*tmp69_)-(tmp124_)*tmp72_+(tmp123_)*tmp74_+tmp120_*tmp75_*(tmp63_)+(tmp123_)*tmp77_+tmp107_*tmp78_*(tmp65_)+(tmp124_)*tmp80_+(tmp123_)*tmp81_*(tmp65_)+(tmp124_)*tmp82_;
  mCompDer[0][16] = (tmp161_*(tmp67_)+tmp148_*tmp68_+(tmp148_*(tmp59_)+tmp161_*(tmp43_))*tmp69_)-(tmp165_)*tmp72_+(tmp164_)*tmp74_+tmp161_*tmp75_*(tmp63_)+(tmp164_)*tmp77_+tmp148_*tmp78_*(tmp65_)+(tmp165_)*tmp80_+(tmp164_)*tmp81_*(tmp65_)+(tmp165_)*tmp82_;
  mCompDer[0][17] = (tmp200_*(tmp67_)+tmp183_*tmp68_+(tmp183_*(tmp59_)+tmp200_*(tmp43_))*tmp69_)-(tmp204_)*tmp72_+(tmp203_)*tmp74_+tmp200_*tmp75_*(tmp63_)+(tmp203_)*tmp77_+tmp183_*tmp78_*(tmp65_)+(tmp204_)*tmp80_+(tmp203_)*tmp81_*(tmp65_)+(tmp204_)*tmp82_;
  mCompDer[0][18] = (tmp217_*(tmp67_)+tmp211_*tmp68_+(tmp211_*(tmp59_)+tmp217_*(tmp43_))*tmp69_)-(tmp221_)*tmp72_+(tmp220_)*tmp74_+tmp217_*tmp75_*(tmp63_)+(tmp220_)*tmp77_+tmp211_*tmp78_*(tmp65_)+(tmp221_)*tmp80_+(tmp220_)*tmp81_*(tmp65_)+(tmp221_)*tmp82_;
  mCompDer[0][19] = (tmp234_*(tmp67_)+tmp228_*tmp68_+(tmp228_*(tmp59_)+tmp234_*(tmp43_))*tmp69_)-(tmp238_)*tmp72_+(tmp237_)*tmp74_+tmp234_*tmp75_*(tmp63_)+(tmp237_)*tmp77_+tmp228_*tmp78_*(tmp65_)+(tmp238_)*tmp80_+(tmp237_)*tmp81_*(tmp65_)+(tmp238_)*tmp82_;
  mCompDer[0][20] = (tmp250_*(tmp67_)+tmp244_*tmp68_+(tmp244_*(tmp59_)+tmp250_*(tmp43_))*tmp69_)-(tmp254_)*tmp72_+(tmp253_)*tmp74_+tmp250_*tmp75_*(tmp63_)+(tmp253_)*tmp77_+tmp244_*tmp78_*(tmp65_)+(tmp254_)*tmp80_+(tmp253_)*tmp81_*(tmp65_)+(tmp254_)*tmp82_;
}


void cEqAppui_Y_M2CEbner::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_Y_M2CEbner Has no Der Sec");
}

void cEqAppui_Y_M2CEbner::SetEbner_State_0_0(double aVal){ mLocEbner_State_0_0 = aVal;}
void cEqAppui_Y_M2CEbner::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_Y_M2CEbner::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_Y_M2CEbner::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_Y_M2CEbner::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_Y_M2CEbner::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Ebner_State_0_0") return & mLocEbner_State_0_0;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_Y_M2CEbner::mTheAuto("cEqAppui_Y_M2CEbner",cEqAppui_Y_M2CEbner::Alloc);


cElCompiledFonc *  cEqAppui_Y_M2CEbner::Alloc()
{  return new cEqAppui_Y_M2CEbner();
}


