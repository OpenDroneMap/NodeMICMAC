// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqCalibCroisee_NoDist_CodGenC2M.h"


cEqCalibCroisee_NoDist_CodGenC2M::cEqCalibCroisee_NoDist_CodGenC2M():
    cElCompiledFonc(3)
{
   AddIntRef (cIncIntervale("Calib",0,3));
   AddIntRef (cIncIntervale("Orient",3,9));
   Close(false);
}



void cEqCalibCroisee_NoDist_CodGenC2M::ComputeVal()
{
   double tmp0_ = mCompCoord[1];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[0];
   double tmp3_ = (tmp1_)/tmp2_;
   double tmp4_ = mCompCoord[2];
   double tmp5_ = mLocPIm1_y-tmp4_;
   double tmp6_ = (tmp5_)/tmp2_;
   double tmp7_ = mCompCoord[3];
   double tmp8_ = cos(tmp7_);
   double tmp9_ = mCompCoord[4];
   double tmp10_ = mCompCoord[5];
   double tmp11_ = sin(tmp7_);
   double tmp12_ = -(tmp11_);
   double tmp13_ = sin(tmp10_);
   double tmp14_ = sin(tmp9_);
   double tmp15_ = -(tmp14_);
   double tmp16_ = tmp8_*tmp15_;
   double tmp17_ = cos(tmp10_);
   double tmp18_ = (tmp3_)*(tmp3_);
   double tmp19_ = (tmp6_)*(tmp6_);
   double tmp20_ = tmp18_+tmp19_;
   double tmp21_ = tmp20_+1.000000;
   double tmp22_ = sqrt(tmp21_);
   double tmp23_ = cos(tmp9_);
   double tmp24_ = -(tmp13_);
   double tmp25_ = tmp11_*tmp15_;

  mVal[0] = (tmp3_)/tmp22_-(tmp8_*tmp23_*mLocDirEsp2_x+(tmp12_*tmp17_+tmp16_*tmp13_)*mLocDirEsp2_y+(tmp12_*tmp24_+tmp16_*tmp17_)*mLocDirEsp2_z);

  mVal[1] = (tmp6_)/tmp22_-(tmp11_*tmp23_*mLocDirEsp2_x+(tmp8_*tmp17_+tmp25_*tmp13_)*mLocDirEsp2_y+(tmp8_*tmp24_+tmp25_*tmp17_)*mLocDirEsp2_z);

  mVal[2] = 1.000000/tmp22_-(tmp14_*mLocDirEsp2_x+tmp23_*tmp13_*mLocDirEsp2_y+tmp23_*tmp17_*mLocDirEsp2_z);

}


void cEqCalibCroisee_NoDist_CodGenC2M::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[1];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[0];
   double tmp3_ = (tmp1_)/tmp2_;
   double tmp4_ = mCompCoord[2];
   double tmp5_ = mLocPIm1_y-tmp4_;
   double tmp6_ = (tmp5_)/tmp2_;
   double tmp7_ = mCompCoord[3];
   double tmp8_ = cos(tmp7_);
   double tmp9_ = mCompCoord[4];
   double tmp10_ = mCompCoord[5];
   double tmp11_ = sin(tmp7_);
   double tmp12_ = -(tmp11_);
   double tmp13_ = sin(tmp10_);
   double tmp14_ = sin(tmp9_);
   double tmp15_ = -(tmp14_);
   double tmp16_ = tmp8_*tmp15_;
   double tmp17_ = cos(tmp10_);
   double tmp18_ = (tmp3_)*(tmp3_);
   double tmp19_ = (tmp6_)*(tmp6_);
   double tmp20_ = tmp18_+tmp19_;
   double tmp21_ = tmp20_+1.000000;
   double tmp22_ = sqrt(tmp21_);
   double tmp23_ = -(tmp1_);
   double tmp24_ = ElSquare(tmp2_);
   double tmp25_ = tmp23_/tmp24_;
   double tmp26_ = (tmp25_)*(tmp3_);
   double tmp27_ = -(tmp5_);
   double tmp28_ = tmp27_/tmp24_;
   double tmp29_ = (tmp28_)*(tmp6_);
   double tmp30_ = -(1);
   double tmp31_ = tmp30_*tmp2_;
   double tmp32_ = (tmp31_)/tmp24_;
   double tmp33_ = (tmp32_)*(tmp3_);
   double tmp34_ = ElSquare(tmp22_);
   double tmp35_ = (tmp32_)*(tmp6_);
   double tmp36_ = cos(tmp9_);
   double tmp37_ = tmp30_*tmp11_;
   double tmp38_ = -(tmp8_);
   double tmp39_ = -(tmp13_);
   double tmp40_ = tmp37_*tmp15_;
   double tmp41_ = -(tmp36_);
   double tmp42_ = tmp41_*tmp8_;
   double tmp43_ = tmp30_*tmp13_;
   double tmp44_ = tmp11_*tmp15_;
   double tmp45_ = tmp26_+tmp26_;
   double tmp46_ = tmp29_+tmp29_;
   double tmp47_ = tmp45_+tmp46_;
   double tmp48_ = 0.500000*(tmp47_);
   double tmp49_ = (tmp48_)/tmp22_;
   double tmp50_ = tmp33_+tmp33_;
   double tmp51_ = 0.500000*(tmp50_);
   double tmp52_ = (tmp51_)/tmp22_;
   double tmp53_ = (tmp32_)*tmp22_;
   double tmp54_ = tmp35_+tmp35_;
   double tmp55_ = 0.500000*(tmp54_);
   double tmp56_ = (tmp55_)/tmp22_;
   double tmp57_ = tmp8_*tmp36_;
   double tmp58_ = tmp57_*mLocDirEsp2_x;
   double tmp59_ = tmp16_*tmp13_;
   double tmp60_ = tmp16_*tmp17_;
   double tmp61_ = tmp30_*tmp14_;
   double tmp62_ = tmp41_*tmp11_;
   double tmp63_ = -(tmp17_);

  mVal[0] = (tmp3_)/tmp22_-(tmp58_+(tmp12_*tmp17_+tmp59_)*mLocDirEsp2_y+(tmp12_*tmp39_+tmp60_)*mLocDirEsp2_z);

  mCompDer[0][0] = ((tmp25_)*tmp22_-(tmp3_)*(tmp49_))/tmp34_;
  mCompDer[0][1] = (tmp53_-(tmp3_)*(tmp52_))/tmp34_;
  mCompDer[0][2] = -((tmp3_)*(tmp56_))/tmp34_;
  mCompDer[0][3] = -(tmp37_*tmp36_*mLocDirEsp2_x+(tmp38_*tmp17_+tmp40_*tmp13_)*mLocDirEsp2_y+(tmp38_*tmp39_+tmp40_*tmp17_)*mLocDirEsp2_z);
  mCompDer[0][4] = -(tmp61_*tmp8_*mLocDirEsp2_x+tmp42_*tmp13_*mLocDirEsp2_y+tmp42_*tmp17_*mLocDirEsp2_z);
  mCompDer[0][5] = -((tmp43_*tmp12_+tmp17_*tmp16_)*mLocDirEsp2_y+(tmp63_*tmp12_+tmp43_*tmp16_)*mLocDirEsp2_z);
  mCompDer[0][6] = 0;
  mCompDer[0][7] = 0;
  mCompDer[0][8] = 0;
  mVal[1] = (tmp6_)/tmp22_-(tmp11_*tmp36_*mLocDirEsp2_x+(tmp8_*tmp17_+tmp44_*tmp13_)*mLocDirEsp2_y+(tmp8_*tmp39_+tmp44_*tmp17_)*mLocDirEsp2_z);

  mCompDer[1][0] = ((tmp28_)*tmp22_-(tmp6_)*(tmp49_))/tmp34_;
  mCompDer[1][1] = -((tmp6_)*(tmp52_))/tmp34_;
  mCompDer[1][2] = (tmp53_-(tmp6_)*(tmp56_))/tmp34_;
  mCompDer[1][3] = -(tmp58_+(tmp37_*tmp17_+tmp59_)*mLocDirEsp2_y+(tmp37_*tmp39_+tmp60_)*mLocDirEsp2_z);
  mCompDer[1][4] = -(tmp61_*tmp11_*mLocDirEsp2_x+tmp62_*tmp13_*mLocDirEsp2_y+tmp62_*tmp17_*mLocDirEsp2_z);
  mCompDer[1][5] = -((tmp43_*tmp8_+tmp17_*tmp44_)*mLocDirEsp2_y+(tmp63_*tmp8_+tmp43_*tmp44_)*mLocDirEsp2_z);
  mCompDer[1][6] = 0;
  mCompDer[1][7] = 0;
  mCompDer[1][8] = 0;
  mVal[2] = 1.000000/tmp22_-(tmp14_*mLocDirEsp2_x+tmp36_*tmp13_*mLocDirEsp2_y+tmp36_*tmp17_*mLocDirEsp2_z);

  mCompDer[2][0] = -(tmp49_)/tmp34_;
  mCompDer[2][1] = -(tmp52_)/tmp34_;
  mCompDer[2][2] = -(tmp56_)/tmp34_;
  mCompDer[2][3] = 0;
  mCompDer[2][4] = -(tmp36_*mLocDirEsp2_x+tmp61_*tmp13_*mLocDirEsp2_y+tmp61_*tmp17_*mLocDirEsp2_z);
  mCompDer[2][5] = -(tmp17_*tmp36_*mLocDirEsp2_y+tmp43_*tmp36_*mLocDirEsp2_z);
  mCompDer[2][6] = 0;
  mCompDer[2][7] = 0;
  mCompDer[2][8] = 0;
}


void cEqCalibCroisee_NoDist_CodGenC2M::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqCalibCroisee_NoDist_CodGenC2M Has no Der Sec");
}

void cEqCalibCroisee_NoDist_CodGenC2M::SetDirEsp2_x(double aVal){ mLocDirEsp2_x = aVal;}
void cEqCalibCroisee_NoDist_CodGenC2M::SetDirEsp2_y(double aVal){ mLocDirEsp2_y = aVal;}
void cEqCalibCroisee_NoDist_CodGenC2M::SetDirEsp2_z(double aVal){ mLocDirEsp2_z = aVal;}
void cEqCalibCroisee_NoDist_CodGenC2M::SetPIm1_x(double aVal){ mLocPIm1_x = aVal;}
void cEqCalibCroisee_NoDist_CodGenC2M::SetPIm1_y(double aVal){ mLocPIm1_y = aVal;}



double * cEqCalibCroisee_NoDist_CodGenC2M::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "DirEsp2_x") return & mLocDirEsp2_x;
   if (aName == "DirEsp2_y") return & mLocDirEsp2_y;
   if (aName == "DirEsp2_z") return & mLocDirEsp2_z;
   if (aName == "PIm1_x") return & mLocPIm1_x;
   if (aName == "PIm1_y") return & mLocPIm1_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqCalibCroisee_NoDist_CodGenC2M::mTheAuto("cEqCalibCroisee_NoDist_CodGenC2M",cEqCalibCroisee_NoDist_CodGenC2M::Alloc);


cElCompiledFonc *  cEqCalibCroisee_NoDist_CodGenC2M::Alloc()
{  return new cEqCalibCroisee_NoDist_CodGenC2M();
}


