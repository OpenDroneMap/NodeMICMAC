// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "TestCeresColinearity.h"


TestCeresColinearity::TestCeresColinearity():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Glob",0,14));
   Close(false);
}



void TestCeresColinearity::ComputeVal()
{
   double tmp0_ = mCompCoord[6];
   double tmp1_ = cos(tmp0_);
   double tmp2_ = mCompCoord[7];
   double tmp3_ = mCompCoord[8];
   double tmp4_ = sin(tmp0_);
   double tmp5_ = -(tmp4_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = sin(tmp2_);
   double tmp8_ = -(tmp7_);
   double tmp9_ = tmp1_ * tmp8_;
   double tmp10_ = cos(tmp3_);
   double tmp11_ = mCompCoord[0];
   double tmp12_ = mCompCoord[3];
   double tmp13_ = tmp11_ - tmp12_;
   double tmp14_ = cos(tmp2_);
   double tmp15_ = mCompCoord[1];
   double tmp16_ = mCompCoord[4];
   double tmp17_ = tmp15_ - tmp16_;
   double tmp18_ = mCompCoord[2];
   double tmp19_ = mCompCoord[5];
   double tmp20_ = tmp18_ - tmp19_;
   double tmp21_ = tmp1_ * tmp14_;
   double tmp22_ = tmp21_ * (tmp13_);
   double tmp23_ = tmp5_ * tmp10_;
   double tmp24_ = tmp9_ * tmp6_;
   double tmp25_ = tmp23_ + tmp24_;
   double tmp26_ = (tmp25_) * (tmp17_);
   double tmp27_ = tmp22_ + tmp26_;
   double tmp28_ = -(tmp6_);
   double tmp29_ = tmp5_ * tmp28_;
   double tmp30_ = tmp9_ * tmp10_;
   double tmp31_ = tmp29_ + tmp30_;
   double tmp32_ = (tmp31_) * (tmp20_);
   double tmp33_ = tmp27_ + tmp32_;
   double tmp34_ = tmp7_ * (tmp13_);
   double tmp35_ = tmp14_ * tmp6_;
   double tmp36_ = tmp35_ * (tmp17_);
   double tmp37_ = tmp34_ + tmp36_;
   double tmp38_ = tmp14_ * tmp10_;
   double tmp39_ = tmp38_ * (tmp20_);
   double tmp40_ = tmp37_ + tmp39_;
   double tmp41_ = (tmp33_) / (tmp40_);
   double tmp42_ = tmp4_ * tmp8_;
   double tmp43_ = tmp4_ * tmp14_;
   double tmp44_ = tmp43_ * (tmp13_);
   double tmp45_ = tmp1_ * tmp10_;
   double tmp46_ = tmp42_ * tmp6_;
   double tmp47_ = tmp45_ + tmp46_;
   double tmp48_ = (tmp47_) * (tmp17_);
   double tmp49_ = tmp44_ + tmp48_;
   double tmp50_ = tmp1_ * tmp28_;
   double tmp51_ = tmp42_ * tmp10_;
   double tmp52_ = tmp50_ + tmp51_;
   double tmp53_ = (tmp52_) * (tmp20_);
   double tmp54_ = tmp49_ + tmp53_;
   double tmp55_ = (tmp54_) / (tmp40_);
   double tmp56_ = (tmp41_) * (tmp41_);
   double tmp57_ = (tmp55_) * (tmp55_);
   double tmp58_ = tmp56_ + tmp57_;
   double tmp59_ = mCompCoord[12];
   double tmp60_ = tmp59_ * (tmp58_);
   double tmp61_ = 1 + tmp60_;
   double tmp62_ = mCompCoord[13];
   double tmp63_ = (tmp58_) * (tmp58_);
   double tmp64_ = tmp62_ * tmp63_;
   double tmp65_ = tmp61_ + tmp64_;
   double tmp66_ = mCompCoord[11];

  mVal[0] = mLocObsIm_x - ((tmp41_) * (tmp65_) * tmp66_ + mCompCoord[9]);

  mVal[1] = mLocObsIm_y - ((tmp55_) * (tmp65_) * tmp66_ + mCompCoord[10]);

}


void TestCeresColinearity::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[6];
   double tmp1_ = cos(tmp0_);
   double tmp2_ = mCompCoord[7];
   double tmp3_ = mCompCoord[8];
   double tmp4_ = sin(tmp0_);
   double tmp5_ = -(tmp4_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = sin(tmp2_);
   double tmp8_ = -(tmp7_);
   double tmp9_ = tmp1_ * tmp8_;
   double tmp10_ = cos(tmp3_);
   double tmp11_ = mCompCoord[0];
   double tmp12_ = mCompCoord[3];
   double tmp13_ = tmp11_ - tmp12_;
   double tmp14_ = cos(tmp2_);
   double tmp15_ = mCompCoord[1];
   double tmp16_ = mCompCoord[4];
   double tmp17_ = tmp15_ - tmp16_;
   double tmp18_ = mCompCoord[2];
   double tmp19_ = mCompCoord[5];
   double tmp20_ = tmp18_ - tmp19_;
   double tmp21_ = tmp1_ * tmp14_;
   double tmp22_ = tmp21_ * (tmp13_);
   double tmp23_ = tmp5_ * tmp10_;
   double tmp24_ = tmp9_ * tmp6_;
   double tmp25_ = tmp23_ + tmp24_;
   double tmp26_ = (tmp25_) * (tmp17_);
   double tmp27_ = tmp22_ + tmp26_;
   double tmp28_ = -(tmp6_);
   double tmp29_ = tmp5_ * tmp28_;
   double tmp30_ = tmp9_ * tmp10_;
   double tmp31_ = tmp29_ + tmp30_;
   double tmp32_ = (tmp31_) * (tmp20_);
   double tmp33_ = tmp27_ + tmp32_;
   double tmp34_ = tmp7_ * (tmp13_);
   double tmp35_ = tmp14_ * tmp6_;
   double tmp36_ = tmp35_ * (tmp17_);
   double tmp37_ = tmp34_ + tmp36_;
   double tmp38_ = tmp14_ * tmp10_;
   double tmp39_ = tmp38_ * (tmp20_);
   double tmp40_ = tmp37_ + tmp39_;
   double tmp41_ = (tmp33_) / (tmp40_);
   double tmp42_ = tmp4_ * tmp8_;
   double tmp43_ = tmp4_ * tmp14_;
   double tmp44_ = tmp43_ * (tmp13_);
   double tmp45_ = tmp1_ * tmp10_;
   double tmp46_ = tmp42_ * tmp6_;
   double tmp47_ = tmp45_ + tmp46_;
   double tmp48_ = (tmp47_) * (tmp17_);
   double tmp49_ = tmp44_ + tmp48_;
   double tmp50_ = tmp1_ * tmp28_;
   double tmp51_ = tmp42_ * tmp10_;
   double tmp52_ = tmp50_ + tmp51_;
   double tmp53_ = (tmp52_) * (tmp20_);
   double tmp54_ = tmp49_ + tmp53_;
   double tmp55_ = (tmp54_) / (tmp40_);
   double tmp56_ = (tmp41_) * (tmp41_);
   double tmp57_ = (tmp55_) * (tmp55_);
   double tmp58_ = tmp56_ + tmp57_;
   double tmp59_ = mCompCoord[12];
   double tmp60_ = tmp59_ * (tmp58_);
   double tmp61_ = 1 + tmp60_;
   double tmp62_ = mCompCoord[13];
   double tmp63_ = (tmp58_) * (tmp58_);
   double tmp64_ = tmp62_ * tmp63_;
   double tmp65_ = tmp61_ + tmp64_;
   double tmp66_ = tmp21_ * (tmp40_);
   double tmp67_ = (tmp33_) * tmp7_;
   double tmp68_ = tmp66_ - tmp67_;
   double tmp69_ = ElSquare(tmp40_);
   double tmp70_ = (tmp68_) / tmp69_;
   double tmp71_ = (tmp70_) * (tmp41_);
   double tmp72_ = tmp43_ * (tmp40_);
   double tmp73_ = (tmp54_) * tmp7_;
   double tmp74_ = tmp72_ - tmp73_;
   double tmp75_ = (tmp74_) / tmp69_;
   double tmp76_ = (tmp75_) * (tmp55_);
   double tmp77_ = tmp71_ + tmp71_;
   double tmp78_ = tmp76_ + tmp76_;
   double tmp79_ = tmp77_ + tmp78_;
   double tmp80_ = (tmp79_) * (tmp58_);
   double tmp81_ = mCompCoord[11];
   double tmp82_ = (tmp25_) * (tmp40_);
   double tmp83_ = (tmp33_) * tmp35_;
   double tmp84_ = tmp82_ - tmp83_;
   double tmp85_ = (tmp84_) / tmp69_;
   double tmp86_ = (tmp85_) * (tmp41_);
   double tmp87_ = (tmp47_) * (tmp40_);
   double tmp88_ = (tmp54_) * tmp35_;
   double tmp89_ = tmp87_ - tmp88_;
   double tmp90_ = (tmp89_) / tmp69_;
   double tmp91_ = (tmp90_) * (tmp55_);
   double tmp92_ = tmp86_ + tmp86_;
   double tmp93_ = tmp91_ + tmp91_;
   double tmp94_ = tmp92_ + tmp93_;
   double tmp95_ = (tmp94_) * (tmp58_);
   double tmp96_ = (tmp31_) * (tmp40_);
   double tmp97_ = (tmp33_) * tmp38_;
   double tmp98_ = tmp96_ - tmp97_;
   double tmp99_ = (tmp98_) / tmp69_;
   double tmp100_ = (tmp99_) * (tmp41_);
   double tmp101_ = (tmp52_) * (tmp40_);
   double tmp102_ = (tmp54_) * tmp38_;
   double tmp103_ = tmp101_ - tmp102_;
   double tmp104_ = (tmp103_) / tmp69_;
   double tmp105_ = (tmp104_) * (tmp55_);
   double tmp106_ = tmp100_ + tmp100_;
   double tmp107_ = tmp105_ + tmp105_;
   double tmp108_ = tmp106_ + tmp107_;
   double tmp109_ = (tmp108_) * (tmp58_);
   double tmp110_ = -(1);
   double tmp111_ = tmp110_ * tmp21_;
   double tmp112_ = tmp111_ * (tmp40_);
   double tmp113_ = tmp110_ * tmp7_;
   double tmp114_ = (tmp33_) * tmp113_;
   double tmp115_ = tmp112_ - tmp114_;
   double tmp116_ = (tmp115_) / tmp69_;
   double tmp117_ = (tmp116_) * (tmp41_);
   double tmp118_ = tmp110_ * tmp43_;
   double tmp119_ = tmp118_ * (tmp40_);
   double tmp120_ = (tmp54_) * tmp113_;
   double tmp121_ = tmp119_ - tmp120_;
   double tmp122_ = (tmp121_) / tmp69_;
   double tmp123_ = (tmp122_) * (tmp55_);
   double tmp124_ = tmp117_ + tmp117_;
   double tmp125_ = tmp123_ + tmp123_;
   double tmp126_ = tmp124_ + tmp125_;
   double tmp127_ = (tmp126_) * (tmp58_);
   double tmp128_ = tmp110_ * (tmp25_);
   double tmp129_ = tmp128_ * (tmp40_);
   double tmp130_ = tmp110_ * tmp35_;
   double tmp131_ = (tmp33_) * tmp130_;
   double tmp132_ = tmp129_ - tmp131_;
   double tmp133_ = (tmp132_) / tmp69_;
   double tmp134_ = (tmp133_) * (tmp41_);
   double tmp135_ = tmp110_ * (tmp47_);
   double tmp136_ = tmp135_ * (tmp40_);
   double tmp137_ = (tmp54_) * tmp130_;
   double tmp138_ = tmp136_ - tmp137_;
   double tmp139_ = (tmp138_) / tmp69_;
   double tmp140_ = (tmp139_) * (tmp55_);
   double tmp141_ = tmp134_ + tmp134_;
   double tmp142_ = tmp140_ + tmp140_;
   double tmp143_ = tmp141_ + tmp142_;
   double tmp144_ = (tmp143_) * (tmp58_);
   double tmp145_ = tmp110_ * (tmp31_);
   double tmp146_ = tmp145_ * (tmp40_);
   double tmp147_ = tmp110_ * tmp38_;
   double tmp148_ = (tmp33_) * tmp147_;
   double tmp149_ = tmp146_ - tmp148_;
   double tmp150_ = (tmp149_) / tmp69_;
   double tmp151_ = (tmp150_) * (tmp41_);
   double tmp152_ = tmp110_ * (tmp52_);
   double tmp153_ = tmp152_ * (tmp40_);
   double tmp154_ = (tmp54_) * tmp147_;
   double tmp155_ = tmp153_ - tmp154_;
   double tmp156_ = (tmp155_) / tmp69_;
   double tmp157_ = (tmp156_) * (tmp55_);
   double tmp158_ = tmp151_ + tmp151_;
   double tmp159_ = tmp157_ + tmp157_;
   double tmp160_ = tmp158_ + tmp159_;
   double tmp161_ = (tmp160_) * (tmp58_);
   double tmp162_ = tmp110_ * tmp4_;
   double tmp163_ = -(tmp1_);
   double tmp164_ = tmp162_ * tmp8_;
   double tmp165_ = tmp162_ * tmp14_;
   double tmp166_ = tmp165_ * (tmp13_);
   double tmp167_ = tmp163_ * tmp10_;
   double tmp168_ = tmp164_ * tmp6_;
   double tmp169_ = tmp167_ + tmp168_;
   double tmp170_ = (tmp169_) * (tmp17_);
   double tmp171_ = tmp166_ + tmp170_;
   double tmp172_ = tmp163_ * tmp28_;
   double tmp173_ = tmp164_ * tmp10_;
   double tmp174_ = tmp172_ + tmp173_;
   double tmp175_ = (tmp174_) * (tmp20_);
   double tmp176_ = tmp171_ + tmp175_;
   double tmp177_ = (tmp176_) * (tmp40_);
   double tmp178_ = (tmp177_) / tmp69_;
   double tmp179_ = (tmp178_) * (tmp41_);
   double tmp180_ = tmp162_ * tmp10_;
   double tmp181_ = tmp180_ + tmp24_;
   double tmp182_ = (tmp181_) * (tmp17_);
   double tmp183_ = tmp22_ + tmp182_;
   double tmp184_ = tmp162_ * tmp28_;
   double tmp185_ = tmp184_ + tmp30_;
   double tmp186_ = (tmp185_) * (tmp20_);
   double tmp187_ = tmp183_ + tmp186_;
   double tmp188_ = (tmp187_) * (tmp40_);
   double tmp189_ = (tmp188_) / tmp69_;
   double tmp190_ = (tmp189_) * (tmp55_);
   double tmp191_ = tmp179_ + tmp179_;
   double tmp192_ = tmp190_ + tmp190_;
   double tmp193_ = tmp191_ + tmp192_;
   double tmp194_ = (tmp193_) * (tmp58_);
   double tmp195_ = -(tmp14_);
   double tmp196_ = tmp195_ * tmp1_;
   double tmp197_ = tmp113_ * tmp1_;
   double tmp198_ = tmp197_ * (tmp13_);
   double tmp199_ = tmp196_ * tmp6_;
   double tmp200_ = tmp199_ * (tmp17_);
   double tmp201_ = tmp198_ + tmp200_;
   double tmp202_ = tmp196_ * tmp10_;
   double tmp203_ = tmp202_ * (tmp20_);
   double tmp204_ = tmp201_ + tmp203_;
   double tmp205_ = (tmp204_) * (tmp40_);
   double tmp206_ = tmp14_ * (tmp13_);
   double tmp207_ = tmp113_ * tmp6_;
   double tmp208_ = tmp207_ * (tmp17_);
   double tmp209_ = tmp206_ + tmp208_;
   double tmp210_ = tmp113_ * tmp10_;
   double tmp211_ = tmp210_ * (tmp20_);
   double tmp212_ = tmp209_ + tmp211_;
   double tmp213_ = (tmp33_) * (tmp212_);
   double tmp214_ = tmp205_ - tmp213_;
   double tmp215_ = (tmp214_) / tmp69_;
   double tmp216_ = (tmp215_) * (tmp41_);
   double tmp217_ = tmp195_ * tmp4_;
   double tmp218_ = tmp113_ * tmp4_;
   double tmp219_ = tmp218_ * (tmp13_);
   double tmp220_ = tmp217_ * tmp6_;
   double tmp221_ = tmp220_ * (tmp17_);
   double tmp222_ = tmp219_ + tmp221_;
   double tmp223_ = tmp217_ * tmp10_;
   double tmp224_ = tmp223_ * (tmp20_);
   double tmp225_ = tmp222_ + tmp224_;
   double tmp226_ = (tmp225_) * (tmp40_);
   double tmp227_ = (tmp54_) * (tmp212_);
   double tmp228_ = tmp226_ - tmp227_;
   double tmp229_ = (tmp228_) / tmp69_;
   double tmp230_ = (tmp229_) * (tmp55_);
   double tmp231_ = tmp216_ + tmp216_;
   double tmp232_ = tmp230_ + tmp230_;
   double tmp233_ = tmp231_ + tmp232_;
   double tmp234_ = (tmp233_) * (tmp58_);
   double tmp235_ = tmp110_ * tmp6_;
   double tmp236_ = tmp235_ * tmp5_;
   double tmp237_ = tmp10_ * tmp9_;
   double tmp238_ = tmp236_ + tmp237_;
   double tmp239_ = (tmp238_) * (tmp17_);
   double tmp240_ = -(tmp10_);
   double tmp241_ = tmp240_ * tmp5_;
   double tmp242_ = tmp235_ * tmp9_;
   double tmp243_ = tmp241_ + tmp242_;
   double tmp244_ = (tmp243_) * (tmp20_);
   double tmp245_ = tmp239_ + tmp244_;
   double tmp246_ = (tmp245_) * (tmp40_);
   double tmp247_ = tmp10_ * tmp14_;
   double tmp248_ = tmp247_ * (tmp17_);
   double tmp249_ = tmp235_ * tmp14_;
   double tmp250_ = tmp249_ * (tmp20_);
   double tmp251_ = tmp248_ + tmp250_;
   double tmp252_ = (tmp33_) * (tmp251_);
   double tmp253_ = tmp246_ - tmp252_;
   double tmp254_ = (tmp253_) / tmp69_;
   double tmp255_ = (tmp254_) * (tmp41_);
   double tmp256_ = tmp235_ * tmp1_;
   double tmp257_ = tmp10_ * tmp42_;
   double tmp258_ = tmp256_ + tmp257_;
   double tmp259_ = (tmp258_) * (tmp17_);
   double tmp260_ = tmp240_ * tmp1_;
   double tmp261_ = tmp235_ * tmp42_;
   double tmp262_ = tmp260_ + tmp261_;
   double tmp263_ = (tmp262_) * (tmp20_);
   double tmp264_ = tmp259_ + tmp263_;
   double tmp265_ = (tmp264_) * (tmp40_);
   double tmp266_ = (tmp54_) * (tmp251_);
   double tmp267_ = tmp265_ - tmp266_;
   double tmp268_ = (tmp267_) / tmp69_;
   double tmp269_ = (tmp268_) * (tmp55_);
   double tmp270_ = tmp255_ + tmp255_;
   double tmp271_ = tmp269_ + tmp269_;
   double tmp272_ = tmp270_ + tmp271_;
   double tmp273_ = (tmp272_) * (tmp58_);
   double tmp274_ = (tmp41_) * (tmp65_);
   double tmp275_ = (tmp79_) * tmp59_;
   double tmp276_ = tmp80_ + tmp80_;
   double tmp277_ = (tmp276_) * tmp62_;
   double tmp278_ = tmp275_ + tmp277_;
   double tmp279_ = (tmp94_) * tmp59_;
   double tmp280_ = tmp95_ + tmp95_;
   double tmp281_ = (tmp280_) * tmp62_;
   double tmp282_ = tmp279_ + tmp281_;
   double tmp283_ = (tmp108_) * tmp59_;
   double tmp284_ = tmp109_ + tmp109_;
   double tmp285_ = (tmp284_) * tmp62_;
   double tmp286_ = tmp283_ + tmp285_;
   double tmp287_ = (tmp126_) * tmp59_;
   double tmp288_ = tmp127_ + tmp127_;
   double tmp289_ = (tmp288_) * tmp62_;
   double tmp290_ = tmp287_ + tmp289_;
   double tmp291_ = (tmp143_) * tmp59_;
   double tmp292_ = tmp144_ + tmp144_;
   double tmp293_ = (tmp292_) * tmp62_;
   double tmp294_ = tmp291_ + tmp293_;
   double tmp295_ = (tmp160_) * tmp59_;
   double tmp296_ = tmp161_ + tmp161_;
   double tmp297_ = (tmp296_) * tmp62_;
   double tmp298_ = tmp295_ + tmp297_;
   double tmp299_ = (tmp193_) * tmp59_;
   double tmp300_ = tmp194_ + tmp194_;
   double tmp301_ = (tmp300_) * tmp62_;
   double tmp302_ = tmp299_ + tmp301_;
   double tmp303_ = (tmp233_) * tmp59_;
   double tmp304_ = tmp234_ + tmp234_;
   double tmp305_ = (tmp304_) * tmp62_;
   double tmp306_ = tmp303_ + tmp305_;
   double tmp307_ = (tmp272_) * tmp59_;
   double tmp308_ = tmp273_ + tmp273_;
   double tmp309_ = (tmp308_) * tmp62_;
   double tmp310_ = tmp307_ + tmp309_;
   double tmp311_ = (tmp55_) * (tmp65_);

  mVal[0] = mLocObsIm_x - (tmp274_ * tmp81_ + mCompCoord[9]);

  mCompDer[0][0] = -(((tmp70_) * (tmp65_) + (tmp278_) * (tmp41_)) * tmp81_);
  mCompDer[0][1] = -(((tmp85_) * (tmp65_) + (tmp282_) * (tmp41_)) * tmp81_);
  mCompDer[0][2] = -(((tmp99_) * (tmp65_) + (tmp286_) * (tmp41_)) * tmp81_);
  mCompDer[0][3] = -(((tmp116_) * (tmp65_) + (tmp290_) * (tmp41_)) * tmp81_);
  mCompDer[0][4] = -(((tmp133_) * (tmp65_) + (tmp294_) * (tmp41_)) * tmp81_);
  mCompDer[0][5] = -(((tmp150_) * (tmp65_) + (tmp298_) * (tmp41_)) * tmp81_);
  mCompDer[0][6] = -(((tmp178_) * (tmp65_) + (tmp302_) * (tmp41_)) * tmp81_);
  mCompDer[0][7] = -(((tmp215_) * (tmp65_) + (tmp306_) * (tmp41_)) * tmp81_);
  mCompDer[0][8] = -(((tmp254_) * (tmp65_) + (tmp310_) * (tmp41_)) * tmp81_);
  mCompDer[0][9] = tmp110_;
  mCompDer[0][10] = 0;
  mCompDer[0][11] = -(tmp274_);
  mCompDer[0][12] = -((tmp58_) * (tmp41_) * tmp81_);
  mCompDer[0][13] = -(tmp63_ * (tmp41_) * tmp81_);
  mVal[1] = mLocObsIm_y - (tmp311_ * tmp81_ + mCompCoord[10]);

  mCompDer[1][0] = -(((tmp75_) * (tmp65_) + (tmp278_) * (tmp55_)) * tmp81_);
  mCompDer[1][1] = -(((tmp90_) * (tmp65_) + (tmp282_) * (tmp55_)) * tmp81_);
  mCompDer[1][2] = -(((tmp104_) * (tmp65_) + (tmp286_) * (tmp55_)) * tmp81_);
  mCompDer[1][3] = -(((tmp122_) * (tmp65_) + (tmp290_) * (tmp55_)) * tmp81_);
  mCompDer[1][4] = -(((tmp139_) * (tmp65_) + (tmp294_) * (tmp55_)) * tmp81_);
  mCompDer[1][5] = -(((tmp156_) * (tmp65_) + (tmp298_) * (tmp55_)) * tmp81_);
  mCompDer[1][6] = -(((tmp189_) * (tmp65_) + (tmp302_) * (tmp55_)) * tmp81_);
  mCompDer[1][7] = -(((tmp229_) * (tmp65_) + (tmp306_) * (tmp55_)) * tmp81_);
  mCompDer[1][8] = -(((tmp268_) * (tmp65_) + (tmp310_) * (tmp55_)) * tmp81_);
  mCompDer[1][9] = 0;
  mCompDer[1][10] = tmp110_;
  mCompDer[1][11] = -(tmp311_);
  mCompDer[1][12] = -((tmp58_) * (tmp55_) * tmp81_);
  mCompDer[1][13] = -(tmp63_ * (tmp55_) * tmp81_);
}


void TestCeresColinearity::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur TestCeresColinearity Has no Der Sec");
}

void TestCeresColinearity::SetObsIm_x(double aVal){ mLocObsIm_x = aVal;}
void TestCeresColinearity::SetObsIm_y(double aVal){ mLocObsIm_y = aVal;}



double * TestCeresColinearity::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "ObsIm_x") return & mLocObsIm_x;
   if (aName == "ObsIm_y") return & mLocObsIm_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry TestCeresColinearity::mTheAuto("TestCeresColinearity",TestCeresColinearity::Alloc);


cElCompiledFonc *  TestCeresColinearity::Alloc()
{  return new TestCeresColinearity();
}


