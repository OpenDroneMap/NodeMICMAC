// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqDirectDistDRad5Bayer_CodGen.h"


cEqDirectDistDRad5Bayer_CodGen::cEqDirectDistDRad5Bayer_CodGen():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Calib",0,10));
   Close(false);
}



void cEqDirectDistDRad5Bayer_CodGen::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocPIm1_y-tmp2_;
   double tmp4_ = (tmp1_)*(tmp1_);
   double tmp5_ = (tmp3_)*(tmp3_);
   double tmp6_ = tmp4_+tmp5_;
   double tmp7_ = (tmp6_)*(tmp6_);
   double tmp8_ = tmp7_*(tmp6_);
   double tmp9_ = tmp8_*(tmp6_);
   double tmp10_ = mCompCoord[5];
   double tmp11_ = (tmp6_)*tmp10_;
   double tmp12_ = 1+tmp11_;
   double tmp13_ = mCompCoord[6];
   double tmp14_ = tmp7_*tmp13_;
   double tmp15_ = tmp12_+tmp14_;
   double tmp16_ = mCompCoord[7];
   double tmp17_ = tmp8_*tmp16_;
   double tmp18_ = tmp15_+tmp17_;
   double tmp19_ = mCompCoord[8];
   double tmp20_ = tmp9_*tmp19_;
   double tmp21_ = tmp18_+tmp20_;
   double tmp22_ = tmp9_*(tmp6_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = tmp22_*tmp23_;
   double tmp25_ = tmp21_+tmp24_;
   double tmp26_ = mCompCoord[0];

  mVal[0] = (tmp0_+(tmp1_)*(tmp25_)+(mLocPIm1_x-mCompCoord[1])*tmp26_)-mLocPIm2_x;

  mVal[1] = (tmp2_+(tmp3_)*(tmp25_)+(mLocPIm1_y-mCompCoord[2])*tmp26_)-mLocPIm2_y;

}


void cEqDirectDistDRad5Bayer_CodGen::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocPIm1_y-tmp2_;
   double tmp4_ = (tmp1_)*(tmp1_);
   double tmp5_ = (tmp3_)*(tmp3_);
   double tmp6_ = tmp4_+tmp5_;
   double tmp7_ = (tmp6_)*(tmp6_);
   double tmp8_ = tmp7_*(tmp6_);
   double tmp9_ = tmp8_*(tmp6_);
   double tmp10_ = mCompCoord[1];
   double tmp11_ = mLocPIm1_x-tmp10_;
   double tmp12_ = mCompCoord[0];
   double tmp13_ = -(1);
   double tmp14_ = mCompCoord[5];
   double tmp15_ = (tmp6_)*tmp14_;
   double tmp16_ = 1+tmp15_;
   double tmp17_ = mCompCoord[6];
   double tmp18_ = tmp7_*tmp17_;
   double tmp19_ = tmp16_+tmp18_;
   double tmp20_ = mCompCoord[7];
   double tmp21_ = tmp8_*tmp20_;
   double tmp22_ = tmp19_+tmp21_;
   double tmp23_ = mCompCoord[8];
   double tmp24_ = tmp9_*tmp23_;
   double tmp25_ = tmp22_+tmp24_;
   double tmp26_ = tmp9_*(tmp6_);
   double tmp27_ = mCompCoord[9];
   double tmp28_ = tmp26_*tmp27_;
   double tmp29_ = tmp25_+tmp28_;
   double tmp30_ = tmp13_*(tmp1_);
   double tmp31_ = tmp30_+tmp30_;
   double tmp32_ = (tmp31_)*(tmp6_);
   double tmp33_ = tmp32_+tmp32_;
   double tmp34_ = (tmp33_)*(tmp6_);
   double tmp35_ = (tmp31_)*tmp7_;
   double tmp36_ = tmp34_+tmp35_;
   double tmp37_ = (tmp36_)*(tmp6_);
   double tmp38_ = (tmp31_)*tmp8_;
   double tmp39_ = tmp37_+tmp38_;
   double tmp40_ = tmp13_*(tmp3_);
   double tmp41_ = tmp40_+tmp40_;
   double tmp42_ = (tmp41_)*(tmp6_);
   double tmp43_ = tmp42_+tmp42_;
   double tmp44_ = (tmp43_)*(tmp6_);
   double tmp45_ = (tmp41_)*tmp7_;
   double tmp46_ = tmp44_+tmp45_;
   double tmp47_ = (tmp46_)*(tmp6_);
   double tmp48_ = (tmp41_)*tmp8_;
   double tmp49_ = tmp47_+tmp48_;
   double tmp50_ = mCompCoord[2];
   double tmp51_ = mLocPIm1_y-tmp50_;
   double tmp52_ = tmp13_*tmp12_;
   double tmp53_ = (tmp31_)*tmp14_;
   double tmp54_ = (tmp33_)*tmp17_;
   double tmp55_ = tmp53_+tmp54_;
   double tmp56_ = (tmp36_)*tmp20_;
   double tmp57_ = tmp55_+tmp56_;
   double tmp58_ = (tmp39_)*tmp23_;
   double tmp59_ = tmp57_+tmp58_;
   double tmp60_ = (tmp39_)*(tmp6_);
   double tmp61_ = (tmp31_)*tmp9_;
   double tmp62_ = tmp60_+tmp61_;
   double tmp63_ = (tmp62_)*tmp27_;
   double tmp64_ = tmp59_+tmp63_;
   double tmp65_ = tmp13_*(tmp29_);
   double tmp66_ = (tmp41_)*tmp14_;
   double tmp67_ = (tmp43_)*tmp17_;
   double tmp68_ = tmp66_+tmp67_;
   double tmp69_ = (tmp46_)*tmp20_;
   double tmp70_ = tmp68_+tmp69_;
   double tmp71_ = (tmp49_)*tmp23_;
   double tmp72_ = tmp70_+tmp71_;
   double tmp73_ = (tmp49_)*(tmp6_);
   double tmp74_ = (tmp41_)*tmp9_;
   double tmp75_ = tmp73_+tmp74_;
   double tmp76_ = (tmp75_)*tmp27_;
   double tmp77_ = tmp72_+tmp76_;

  mVal[0] = (tmp0_+(tmp1_)*(tmp29_)+(tmp11_)*tmp12_)-mLocPIm2_x;

  mCompDer[0][0] = tmp11_;
  mCompDer[0][1] = tmp52_;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = 1+tmp65_+(tmp64_)*(tmp1_);
  mCompDer[0][4] = (tmp77_)*(tmp1_);
  mCompDer[0][5] = (tmp6_)*(tmp1_);
  mCompDer[0][6] = tmp7_*(tmp1_);
  mCompDer[0][7] = tmp8_*(tmp1_);
  mCompDer[0][8] = tmp9_*(tmp1_);
  mCompDer[0][9] = tmp26_*(tmp1_);
  mVal[1] = (tmp2_+(tmp3_)*(tmp29_)+(tmp51_)*tmp12_)-mLocPIm2_y;

  mCompDer[1][0] = tmp51_;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = tmp52_;
  mCompDer[1][3] = (tmp64_)*(tmp3_);
  mCompDer[1][4] = 1+tmp65_+(tmp77_)*(tmp3_);
  mCompDer[1][5] = (tmp6_)*(tmp3_);
  mCompDer[1][6] = tmp7_*(tmp3_);
  mCompDer[1][7] = tmp8_*(tmp3_);
  mCompDer[1][8] = tmp9_*(tmp3_);
  mCompDer[1][9] = tmp26_*(tmp3_);
}


void cEqDirectDistDRad5Bayer_CodGen::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqDirectDistDRad5Bayer_CodGen Has no Der Sec");
}

void cEqDirectDistDRad5Bayer_CodGen::SetPIm1_x(double aVal){ mLocPIm1_x = aVal;}
void cEqDirectDistDRad5Bayer_CodGen::SetPIm1_y(double aVal){ mLocPIm1_y = aVal;}
void cEqDirectDistDRad5Bayer_CodGen::SetPIm2_x(double aVal){ mLocPIm2_x = aVal;}
void cEqDirectDistDRad5Bayer_CodGen::SetPIm2_y(double aVal){ mLocPIm2_y = aVal;}



double * cEqDirectDistDRad5Bayer_CodGen::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "PIm1_x") return & mLocPIm1_x;
   if (aName == "PIm1_y") return & mLocPIm1_y;
   if (aName == "PIm2_x") return & mLocPIm2_x;
   if (aName == "PIm2_y") return & mLocPIm2_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqDirectDistDRad5Bayer_CodGen::mTheAuto("cEqDirectDistDRad5Bayer_CodGen",cEqDirectDistDRad5Bayer_CodGen::Alloc);


cElCompiledFonc *  cEqDirectDistDRad5Bayer_CodGen::Alloc()
{  return new cEqDirectDistDRad5Bayer_CodGen();
}


