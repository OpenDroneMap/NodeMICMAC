// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cCodeGenEqPlanInconnuFormel.h"


cCodeGenEqPlanInconnuFormel::cCodeGenEqPlanInconnuFormel():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("SomA1",2,3));
   AddIntRef (cIncIntervale("SomA2",0,1));
   AddIntRef (cIncIntervale("SomA3",1,2));
   AddIntRef (cIncIntervale("Tmp_PTer",3,6));
   Close(false);
}



void cCodeGenEqPlanInconnuFormel::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[4];

  mVal[0] = mCompCoord[5]-(mCompCoord[2]*(mLocCoefBar_0_0*tmp0_+mLocCoefBar_1_0*tmp1_+mLocCoefBar_2_0)+mCompCoord[0]*(mLocCoefBar_0_1*tmp0_+mLocCoefBar_1_1*tmp1_+mLocCoefBar_2_1)+mCompCoord[1]*(mLocCoefBar_0_2*tmp0_+mLocCoefBar_1_2*tmp1_+mLocCoefBar_2_2));

}


void cCodeGenEqPlanInconnuFormel::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[4];
   double tmp2_ = mLocCoefBar_0_1*tmp0_;
   double tmp3_ = mLocCoefBar_1_1*tmp1_;
   double tmp4_ = tmp2_+tmp3_;
   double tmp5_ = tmp4_+mLocCoefBar_2_1;
   double tmp6_ = mLocCoefBar_0_2*tmp0_;
   double tmp7_ = mLocCoefBar_1_2*tmp1_;
   double tmp8_ = tmp6_+tmp7_;
   double tmp9_ = tmp8_+mLocCoefBar_2_2;
   double tmp10_ = mLocCoefBar_0_0*tmp0_;
   double tmp11_ = mLocCoefBar_1_0*tmp1_;
   double tmp12_ = tmp10_+tmp11_;
   double tmp13_ = tmp12_+mLocCoefBar_2_0;
   double tmp14_ = mCompCoord[2];
   double tmp15_ = mCompCoord[0];
   double tmp16_ = mCompCoord[1];

  mVal[0] = mCompCoord[5]-(tmp14_*(tmp13_)+tmp15_*(tmp5_)+tmp16_*(tmp9_));

  mCompDer[0][0] = -(tmp5_);
  mCompDer[0][1] = -(tmp9_);
  mCompDer[0][2] = -(tmp13_);
  mCompDer[0][3] = -(mLocCoefBar_0_0*tmp14_+mLocCoefBar_0_1*tmp15_+mLocCoefBar_0_2*tmp16_);
  mCompDer[0][4] = -(mLocCoefBar_1_0*tmp14_+mLocCoefBar_1_1*tmp15_+mLocCoefBar_1_2*tmp16_);
  mCompDer[0][5] = 1;
}


void cCodeGenEqPlanInconnuFormel::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cCodeGenEqPlanInconnuFormel Has no Der Sec");
}

void cCodeGenEqPlanInconnuFormel::SetCoefBar_0_0(double aVal){ mLocCoefBar_0_0 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_0_1(double aVal){ mLocCoefBar_0_1 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_0_2(double aVal){ mLocCoefBar_0_2 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_1_0(double aVal){ mLocCoefBar_1_0 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_1_1(double aVal){ mLocCoefBar_1_1 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_1_2(double aVal){ mLocCoefBar_1_2 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_2_0(double aVal){ mLocCoefBar_2_0 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_2_1(double aVal){ mLocCoefBar_2_1 = aVal;}
void cCodeGenEqPlanInconnuFormel::SetCoefBar_2_2(double aVal){ mLocCoefBar_2_2 = aVal;}



double * cCodeGenEqPlanInconnuFormel::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "CoefBar_0_0") return & mLocCoefBar_0_0;
   if (aName == "CoefBar_0_1") return & mLocCoefBar_0_1;
   if (aName == "CoefBar_0_2") return & mLocCoefBar_0_2;
   if (aName == "CoefBar_1_0") return & mLocCoefBar_1_0;
   if (aName == "CoefBar_1_1") return & mLocCoefBar_1_1;
   if (aName == "CoefBar_1_2") return & mLocCoefBar_1_2;
   if (aName == "CoefBar_2_0") return & mLocCoefBar_2_0;
   if (aName == "CoefBar_2_1") return & mLocCoefBar_2_1;
   if (aName == "CoefBar_2_2") return & mLocCoefBar_2_2;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cCodeGenEqPlanInconnuFormel::mTheAuto("cCodeGenEqPlanInconnuFormel",cCodeGenEqPlanInconnuFormel::Alloc);


cElCompiledFonc *  cCodeGenEqPlanInconnuFormel::Alloc()
{  return new cCodeGenEqPlanInconnuFormel();
}


