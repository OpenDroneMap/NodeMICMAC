// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_Y_C2MDRad5.h"


cEqAppui_Y_C2MDRad5::cEqAppui_Y_C2MDRad5():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,10));
   AddIntRef (cIncIntervale("Orient",10,16));
   Close(false);
}



void cEqAppui_Y_C2MDRad5::ComputeVal()
{
   double tmp0_ = mCompCoord[10];
   double tmp1_ = mCompCoord[12];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[11];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[13];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[14];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[15];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mCompCoord[4];
   double tmp21_ = mCompCoord[3];
   double tmp22_ = mLocXIm-tmp21_;
   double tmp23_ = mLocYIm-tmp20_;
   double tmp24_ = (tmp22_)*(tmp22_);
   double tmp25_ = (tmp23_)*(tmp23_);
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp26_);
   double tmp28_ = tmp27_*(tmp26_);
   double tmp29_ = tmp28_*(tmp26_);

  mVal[0] = (mCompCoord[2]+mCompCoord[0]*(((tmp9_*tmp3_+tmp10_*tmp8_)*(tmp12_)+(tmp2_*tmp3_+tmp14_*tmp8_)*(tmp16_)+tmp17_*tmp8_*(tmp19_))/((tmp9_*tmp13_+tmp10_*tmp3_)*(tmp12_)+(tmp2_*tmp13_+tmp14_*tmp3_)*(tmp16_)+tmp17_*tmp3_*(tmp19_))))-(tmp20_+(tmp23_)*(1+(tmp26_)*mCompCoord[5]+tmp27_*mCompCoord[6]+tmp28_*mCompCoord[7]+tmp29_*mCompCoord[8]+tmp29_*(tmp26_)*mCompCoord[9]));

}


void cEqAppui_Y_C2MDRad5::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[10];
   double tmp1_ = mCompCoord[12];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[11];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[13];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[14];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[15];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mCompCoord[4];
   double tmp21_ = mCompCoord[3];
   double tmp22_ = mLocXIm-tmp21_;
   double tmp23_ = mLocYIm-tmp20_;
   double tmp24_ = (tmp22_)*(tmp22_);
   double tmp25_ = (tmp23_)*(tmp23_);
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp26_);
   double tmp28_ = tmp27_*(tmp26_);
   double tmp29_ = tmp28_*(tmp26_);
   double tmp30_ = tmp9_*tmp3_;
   double tmp31_ = tmp10_*tmp8_;
   double tmp32_ = tmp30_+tmp31_;
   double tmp33_ = (tmp32_)*(tmp12_);
   double tmp34_ = tmp2_*tmp3_;
   double tmp35_ = tmp14_*tmp8_;
   double tmp36_ = tmp34_+tmp35_;
   double tmp37_ = (tmp36_)*(tmp16_);
   double tmp38_ = tmp33_+tmp37_;
   double tmp39_ = tmp17_*tmp8_;
   double tmp40_ = tmp39_*(tmp19_);
   double tmp41_ = tmp38_+tmp40_;
   double tmp42_ = tmp9_*tmp13_;
   double tmp43_ = tmp10_*tmp3_;
   double tmp44_ = tmp42_+tmp43_;
   double tmp45_ = (tmp44_)*(tmp12_);
   double tmp46_ = tmp2_*tmp13_;
   double tmp47_ = tmp14_*tmp3_;
   double tmp48_ = tmp46_+tmp47_;
   double tmp49_ = (tmp48_)*(tmp16_);
   double tmp50_ = tmp45_+tmp49_;
   double tmp51_ = tmp17_*tmp3_;
   double tmp52_ = tmp51_*(tmp19_);
   double tmp53_ = tmp50_+tmp52_;
   double tmp54_ = (tmp41_)/(tmp53_);
   double tmp55_ = -(1);
   double tmp56_ = tmp55_*(tmp22_);
   double tmp57_ = mCompCoord[5];
   double tmp58_ = tmp56_+tmp56_;
   double tmp59_ = (tmp58_)*(tmp26_);
   double tmp60_ = mCompCoord[6];
   double tmp61_ = tmp59_+tmp59_;
   double tmp62_ = mCompCoord[7];
   double tmp63_ = (tmp61_)*(tmp26_);
   double tmp64_ = (tmp58_)*tmp27_;
   double tmp65_ = tmp63_+tmp64_;
   double tmp66_ = mCompCoord[8];
   double tmp67_ = (tmp65_)*(tmp26_);
   double tmp68_ = (tmp58_)*tmp28_;
   double tmp69_ = tmp67_+tmp68_;
   double tmp70_ = mCompCoord[9];
   double tmp71_ = (tmp26_)*tmp57_;
   double tmp72_ = 1+tmp71_;
   double tmp73_ = tmp27_*tmp60_;
   double tmp74_ = tmp72_+tmp73_;
   double tmp75_ = tmp28_*tmp62_;
   double tmp76_ = tmp74_+tmp75_;
   double tmp77_ = tmp29_*tmp66_;
   double tmp78_ = tmp76_+tmp77_;
   double tmp79_ = tmp29_*(tmp26_);
   double tmp80_ = tmp79_*tmp70_;
   double tmp81_ = tmp78_+tmp80_;
   double tmp82_ = tmp55_*(tmp23_);
   double tmp83_ = tmp82_+tmp82_;
   double tmp84_ = (tmp83_)*(tmp26_);
   double tmp85_ = tmp84_+tmp84_;
   double tmp86_ = (tmp85_)*(tmp26_);
   double tmp87_ = (tmp83_)*tmp27_;
   double tmp88_ = tmp86_+tmp87_;
   double tmp89_ = (tmp88_)*(tmp26_);
   double tmp90_ = (tmp83_)*tmp28_;
   double tmp91_ = tmp89_+tmp90_;
   double tmp92_ = tmp55_*tmp4_;
   double tmp93_ = -(tmp2_);
   double tmp94_ = tmp92_*tmp7_;
   double tmp95_ = mCompCoord[0];
   double tmp96_ = -(tmp17_);
   double tmp97_ = tmp96_*tmp2_;
   double tmp98_ = tmp96_*tmp4_;
   double tmp99_ = tmp55_*tmp6_;
   double tmp100_ = ElSquare(tmp53_);
   double tmp101_ = tmp55_*tmp8_;
   double tmp102_ = -(tmp3_);

  mVal[0] = (mCompCoord[2]+tmp95_*(tmp54_))-(tmp20_+(tmp23_)*(tmp81_));

  mCompDer[0][0] = tmp54_;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 1;
  mCompDer[0][3] = -(((tmp58_)*tmp57_+(tmp61_)*tmp60_+(tmp65_)*tmp62_+(tmp69_)*tmp66_+((tmp69_)*(tmp26_)+(tmp58_)*tmp29_)*tmp70_)*(tmp23_));
  mCompDer[0][4] = -(1+tmp55_*(tmp81_)+((tmp83_)*tmp57_+(tmp85_)*tmp60_+(tmp88_)*tmp62_+(tmp91_)*tmp66_+((tmp91_)*(tmp26_)+(tmp83_)*tmp29_)*tmp70_)*(tmp23_));
  mCompDer[0][5] = -((tmp26_)*(tmp23_));
  mCompDer[0][6] = -(tmp27_*(tmp23_));
  mCompDer[0][7] = -(tmp28_*(tmp23_));
  mCompDer[0][8] = -(tmp29_*(tmp23_));
  mCompDer[0][9] = -(tmp79_*(tmp23_));
  mCompDer[0][10] = ((((tmp93_*tmp3_+tmp94_*tmp8_)*(tmp12_)+(tmp92_*tmp3_+tmp31_)*(tmp16_))*(tmp53_)-(tmp41_)*((tmp93_*tmp13_+tmp94_*tmp3_)*(tmp12_)+(tmp92_*tmp13_+tmp43_)*(tmp16_)))/tmp100_)*tmp95_;
  mCompDer[0][11] = (((tmp97_*tmp8_*(tmp12_)+tmp98_*tmp8_*(tmp16_)+tmp99_*tmp8_*(tmp19_))*(tmp53_)-(tmp41_)*(tmp97_*tmp3_*(tmp12_)+tmp98_*tmp3_*(tmp16_)+tmp99_*tmp3_*(tmp19_)))/tmp100_)*tmp95_;
  mCompDer[0][12] = ((((tmp101_*tmp9_+tmp3_*tmp10_)*(tmp12_)+(tmp101_*tmp2_+tmp3_*tmp14_)*(tmp16_)+tmp3_*tmp17_*(tmp19_))*(tmp53_)-(tmp41_)*((tmp102_*tmp9_+tmp101_*tmp10_)*(tmp12_)+(tmp102_*tmp2_+tmp101_*tmp14_)*(tmp16_)+tmp101_*tmp17_*(tmp19_)))/tmp100_)*tmp95_;
  mCompDer[0][13] = ((tmp55_*(tmp32_)*(tmp53_)-(tmp41_)*tmp55_*(tmp44_))/tmp100_)*tmp95_;
  mCompDer[0][14] = ((tmp55_*(tmp36_)*(tmp53_)-(tmp41_)*tmp55_*(tmp48_))/tmp100_)*tmp95_;
  mCompDer[0][15] = ((tmp55_*tmp39_*(tmp53_)-(tmp41_)*tmp55_*tmp51_)/tmp100_)*tmp95_;
}


void cEqAppui_Y_C2MDRad5::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_Y_C2MDRad5 Has no Der Sec");
}

void cEqAppui_Y_C2MDRad5::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_Y_C2MDRad5::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_Y_C2MDRad5::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_Y_C2MDRad5::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_Y_C2MDRad5::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_Y_C2MDRad5::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_Y_C2MDRad5::mTheAuto("cEqAppui_Y_C2MDRad5",cEqAppui_Y_C2MDRad5::Alloc);


cElCompiledFonc *  cEqAppui_Y_C2MDRad5::Alloc()
{  return new cEqAppui_Y_C2MDRad5();
}


