// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqCalibCroisee_DRad5_CodGen.h"


cEqCalibCroisee_DRad5_CodGen::cEqCalibCroisee_DRad5_CodGen():
    cElCompiledFonc(3)
{
   AddIntRef (cIncIntervale("Calib",0,10));
   AddIntRef (cIncIntervale("Orient",10,16));
   Close(false);
}



void cEqCalibCroisee_DRad5_CodGen::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocPIm1_y-tmp2_;
   double tmp4_ = (tmp1_)*(tmp1_);
   double tmp5_ = (tmp3_)*(tmp3_);
   double tmp6_ = tmp4_+tmp5_;
   double tmp7_ = (tmp6_)*(tmp6_);
   double tmp8_ = tmp7_*(tmp6_);
   double tmp9_ = tmp8_*(tmp6_);
   double tmp10_ = mCompCoord[5];
   double tmp11_ = (tmp6_)*tmp10_;
   double tmp12_ = 1+tmp11_;
   double tmp13_ = mCompCoord[6];
   double tmp14_ = tmp7_*tmp13_;
   double tmp15_ = tmp12_+tmp14_;
   double tmp16_ = mCompCoord[7];
   double tmp17_ = tmp8_*tmp16_;
   double tmp18_ = tmp15_+tmp17_;
   double tmp19_ = mCompCoord[8];
   double tmp20_ = tmp9_*tmp19_;
   double tmp21_ = tmp18_+tmp20_;
   double tmp22_ = tmp9_*(tmp6_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = tmp22_*tmp23_;
   double tmp25_ = tmp21_+tmp24_;
   double tmp26_ = (tmp1_)*(tmp25_);
   double tmp27_ = tmp0_+tmp26_;
   double tmp28_ = mCompCoord[1];
   double tmp29_ = (tmp27_)-tmp28_;
   double tmp30_ = mCompCoord[0];
   double tmp31_ = (tmp29_)/tmp30_;
   double tmp32_ = (tmp3_)*(tmp25_);
   double tmp33_ = tmp2_+tmp32_;
   double tmp34_ = mCompCoord[2];
   double tmp35_ = (tmp33_)-tmp34_;
   double tmp36_ = (tmp35_)/tmp30_;
   double tmp37_ = mCompCoord[10];
   double tmp38_ = cos(tmp37_);
   double tmp39_ = mCompCoord[11];
   double tmp40_ = mCompCoord[12];
   double tmp41_ = sin(tmp37_);
   double tmp42_ = -(tmp41_);
   double tmp43_ = sin(tmp40_);
   double tmp44_ = sin(tmp39_);
   double tmp45_ = -(tmp44_);
   double tmp46_ = tmp38_*tmp45_;
   double tmp47_ = cos(tmp40_);
   double tmp48_ = (tmp31_)*(tmp31_);
   double tmp49_ = (tmp36_)*(tmp36_);
   double tmp50_ = tmp48_+tmp49_;
   double tmp51_ = tmp50_+1.000000;
   double tmp52_ = sqrt(tmp51_);
   double tmp53_ = cos(tmp39_);
   double tmp54_ = -(tmp43_);
   double tmp55_ = tmp41_*tmp45_;

  mVal[0] = (tmp31_)/tmp52_-(tmp38_*tmp53_*mLocDirEsp2_x+(tmp42_*tmp47_+tmp46_*tmp43_)*mLocDirEsp2_y+(tmp42_*tmp54_+tmp46_*tmp47_)*mLocDirEsp2_z);

  mVal[1] = (tmp36_)/tmp52_-(tmp41_*tmp53_*mLocDirEsp2_x+(tmp38_*tmp47_+tmp55_*tmp43_)*mLocDirEsp2_y+(tmp38_*tmp54_+tmp55_*tmp47_)*mLocDirEsp2_z);

  mVal[2] = 1.000000/tmp52_-(tmp44_*mLocDirEsp2_x+tmp53_*tmp43_*mLocDirEsp2_y+tmp53_*tmp47_*mLocDirEsp2_z);

}


void cEqCalibCroisee_DRad5_CodGen::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocPIm1_y-tmp2_;
   double tmp4_ = (tmp1_)*(tmp1_);
   double tmp5_ = (tmp3_)*(tmp3_);
   double tmp6_ = tmp4_+tmp5_;
   double tmp7_ = (tmp6_)*(tmp6_);
   double tmp8_ = tmp7_*(tmp6_);
   double tmp9_ = tmp8_*(tmp6_);
   double tmp10_ = mCompCoord[5];
   double tmp11_ = (tmp6_)*tmp10_;
   double tmp12_ = 1+tmp11_;
   double tmp13_ = mCompCoord[6];
   double tmp14_ = tmp7_*tmp13_;
   double tmp15_ = tmp12_+tmp14_;
   double tmp16_ = mCompCoord[7];
   double tmp17_ = tmp8_*tmp16_;
   double tmp18_ = tmp15_+tmp17_;
   double tmp19_ = mCompCoord[8];
   double tmp20_ = tmp9_*tmp19_;
   double tmp21_ = tmp18_+tmp20_;
   double tmp22_ = tmp9_*(tmp6_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = tmp22_*tmp23_;
   double tmp25_ = tmp21_+tmp24_;
   double tmp26_ = (tmp1_)*(tmp25_);
   double tmp27_ = tmp0_+tmp26_;
   double tmp28_ = mCompCoord[1];
   double tmp29_ = (tmp27_)-tmp28_;
   double tmp30_ = mCompCoord[0];
   double tmp31_ = (tmp29_)/tmp30_;
   double tmp32_ = (tmp3_)*(tmp25_);
   double tmp33_ = tmp2_+tmp32_;
   double tmp34_ = mCompCoord[2];
   double tmp35_ = (tmp33_)-tmp34_;
   double tmp36_ = (tmp35_)/tmp30_;
   double tmp37_ = mCompCoord[10];
   double tmp38_ = cos(tmp37_);
   double tmp39_ = mCompCoord[11];
   double tmp40_ = mCompCoord[12];
   double tmp41_ = sin(tmp37_);
   double tmp42_ = -(tmp41_);
   double tmp43_ = sin(tmp40_);
   double tmp44_ = sin(tmp39_);
   double tmp45_ = -(tmp44_);
   double tmp46_ = tmp38_*tmp45_;
   double tmp47_ = cos(tmp40_);
   double tmp48_ = (tmp31_)*(tmp31_);
   double tmp49_ = (tmp36_)*(tmp36_);
   double tmp50_ = tmp48_+tmp49_;
   double tmp51_ = tmp50_+1.000000;
   double tmp52_ = sqrt(tmp51_);
   double tmp53_ = -(tmp29_);
   double tmp54_ = ElSquare(tmp30_);
   double tmp55_ = tmp53_/tmp54_;
   double tmp56_ = (tmp55_)*(tmp31_);
   double tmp57_ = -(tmp35_);
   double tmp58_ = tmp57_/tmp54_;
   double tmp59_ = (tmp58_)*(tmp36_);
   double tmp60_ = -(1);
   double tmp61_ = tmp60_*tmp30_;
   double tmp62_ = (tmp61_)/tmp54_;
   double tmp63_ = (tmp62_)*(tmp31_);
   double tmp64_ = ElSquare(tmp52_);
   double tmp65_ = (tmp62_)*(tmp36_);
   double tmp66_ = tmp60_*(tmp1_);
   double tmp67_ = tmp66_+tmp66_;
   double tmp68_ = (tmp67_)*(tmp6_);
   double tmp69_ = tmp68_+tmp68_;
   double tmp70_ = (tmp69_)*(tmp6_);
   double tmp71_ = (tmp67_)*tmp7_;
   double tmp72_ = tmp70_+tmp71_;
   double tmp73_ = (tmp72_)*(tmp6_);
   double tmp74_ = (tmp67_)*tmp8_;
   double tmp75_ = tmp73_+tmp74_;
   double tmp76_ = tmp60_*(tmp25_);
   double tmp77_ = (tmp67_)*tmp10_;
   double tmp78_ = (tmp69_)*tmp13_;
   double tmp79_ = tmp77_+tmp78_;
   double tmp80_ = (tmp72_)*tmp16_;
   double tmp81_ = tmp79_+tmp80_;
   double tmp82_ = (tmp75_)*tmp19_;
   double tmp83_ = tmp81_+tmp82_;
   double tmp84_ = (tmp75_)*(tmp6_);
   double tmp85_ = (tmp67_)*tmp9_;
   double tmp86_ = tmp84_+tmp85_;
   double tmp87_ = (tmp86_)*tmp23_;
   double tmp88_ = tmp83_+tmp87_;
   double tmp89_ = (tmp88_)*(tmp1_);
   double tmp90_ = tmp76_+tmp89_;
   double tmp91_ = 1+tmp90_;
   double tmp92_ = (tmp91_)*tmp30_;
   double tmp93_ = (tmp92_)/tmp54_;
   double tmp94_ = (tmp93_)*(tmp31_);
   double tmp95_ = (tmp88_)*(tmp3_);
   double tmp96_ = tmp95_*tmp30_;
   double tmp97_ = (tmp96_)/tmp54_;
   double tmp98_ = (tmp97_)*(tmp36_);
   double tmp99_ = tmp60_*(tmp3_);
   double tmp100_ = tmp99_+tmp99_;
   double tmp101_ = (tmp100_)*(tmp6_);
   double tmp102_ = tmp101_+tmp101_;
   double tmp103_ = (tmp102_)*(tmp6_);
   double tmp104_ = (tmp100_)*tmp7_;
   double tmp105_ = tmp103_+tmp104_;
   double tmp106_ = (tmp105_)*(tmp6_);
   double tmp107_ = (tmp100_)*tmp8_;
   double tmp108_ = tmp106_+tmp107_;
   double tmp109_ = (tmp100_)*tmp10_;
   double tmp110_ = (tmp102_)*tmp13_;
   double tmp111_ = tmp109_+tmp110_;
   double tmp112_ = (tmp105_)*tmp16_;
   double tmp113_ = tmp111_+tmp112_;
   double tmp114_ = (tmp108_)*tmp19_;
   double tmp115_ = tmp113_+tmp114_;
   double tmp116_ = (tmp108_)*(tmp6_);
   double tmp117_ = (tmp100_)*tmp9_;
   double tmp118_ = tmp116_+tmp117_;
   double tmp119_ = (tmp118_)*tmp23_;
   double tmp120_ = tmp115_+tmp119_;
   double tmp121_ = (tmp120_)*(tmp1_);
   double tmp122_ = tmp121_*tmp30_;
   double tmp123_ = (tmp122_)/tmp54_;
   double tmp124_ = (tmp123_)*(tmp31_);
   double tmp125_ = (tmp120_)*(tmp3_);
   double tmp126_ = tmp76_+tmp125_;
   double tmp127_ = 1+tmp126_;
   double tmp128_ = (tmp127_)*tmp30_;
   double tmp129_ = (tmp128_)/tmp54_;
   double tmp130_ = (tmp129_)*(tmp36_);
   double tmp131_ = (tmp6_)*(tmp1_);
   double tmp132_ = tmp131_*tmp30_;
   double tmp133_ = (tmp132_)/tmp54_;
   double tmp134_ = (tmp133_)*(tmp31_);
   double tmp135_ = (tmp6_)*(tmp3_);
   double tmp136_ = tmp135_*tmp30_;
   double tmp137_ = (tmp136_)/tmp54_;
   double tmp138_ = (tmp137_)*(tmp36_);
   double tmp139_ = tmp7_*(tmp1_);
   double tmp140_ = tmp139_*tmp30_;
   double tmp141_ = (tmp140_)/tmp54_;
   double tmp142_ = (tmp141_)*(tmp31_);
   double tmp143_ = tmp7_*(tmp3_);
   double tmp144_ = tmp143_*tmp30_;
   double tmp145_ = (tmp144_)/tmp54_;
   double tmp146_ = (tmp145_)*(tmp36_);
   double tmp147_ = tmp8_*(tmp1_);
   double tmp148_ = tmp147_*tmp30_;
   double tmp149_ = (tmp148_)/tmp54_;
   double tmp150_ = (tmp149_)*(tmp31_);
   double tmp151_ = tmp8_*(tmp3_);
   double tmp152_ = tmp151_*tmp30_;
   double tmp153_ = (tmp152_)/tmp54_;
   double tmp154_ = (tmp153_)*(tmp36_);
   double tmp155_ = tmp9_*(tmp1_);
   double tmp156_ = tmp155_*tmp30_;
   double tmp157_ = (tmp156_)/tmp54_;
   double tmp158_ = (tmp157_)*(tmp31_);
   double tmp159_ = tmp9_*(tmp3_);
   double tmp160_ = tmp159_*tmp30_;
   double tmp161_ = (tmp160_)/tmp54_;
   double tmp162_ = (tmp161_)*(tmp36_);
   double tmp163_ = tmp22_*(tmp1_);
   double tmp164_ = tmp163_*tmp30_;
   double tmp165_ = (tmp164_)/tmp54_;
   double tmp166_ = (tmp165_)*(tmp31_);
   double tmp167_ = tmp22_*(tmp3_);
   double tmp168_ = tmp167_*tmp30_;
   double tmp169_ = (tmp168_)/tmp54_;
   double tmp170_ = (tmp169_)*(tmp36_);
   double tmp171_ = cos(tmp39_);
   double tmp172_ = tmp60_*tmp41_;
   double tmp173_ = -(tmp38_);
   double tmp174_ = -(tmp43_);
   double tmp175_ = tmp172_*tmp45_;
   double tmp176_ = -(tmp171_);
   double tmp177_ = tmp176_*tmp38_;
   double tmp178_ = tmp60_*tmp43_;
   double tmp179_ = tmp41_*tmp45_;
   double tmp180_ = tmp56_+tmp56_;
   double tmp181_ = tmp59_+tmp59_;
   double tmp182_ = tmp180_+tmp181_;
   double tmp183_ = 0.500000*(tmp182_);
   double tmp184_ = (tmp183_)/tmp52_;
   double tmp185_ = tmp63_+tmp63_;
   double tmp186_ = 0.500000*(tmp185_);
   double tmp187_ = (tmp186_)/tmp52_;
   double tmp188_ = (tmp62_)*tmp52_;
   double tmp189_ = tmp65_+tmp65_;
   double tmp190_ = 0.500000*(tmp189_);
   double tmp191_ = (tmp190_)/tmp52_;
   double tmp192_ = tmp94_+tmp94_;
   double tmp193_ = tmp98_+tmp98_;
   double tmp194_ = tmp192_+tmp193_;
   double tmp195_ = 0.500000*(tmp194_);
   double tmp196_ = (tmp195_)/tmp52_;
   double tmp197_ = tmp124_+tmp124_;
   double tmp198_ = tmp130_+tmp130_;
   double tmp199_ = tmp197_+tmp198_;
   double tmp200_ = 0.500000*(tmp199_);
   double tmp201_ = (tmp200_)/tmp52_;
   double tmp202_ = tmp134_+tmp134_;
   double tmp203_ = tmp138_+tmp138_;
   double tmp204_ = tmp202_+tmp203_;
   double tmp205_ = 0.500000*(tmp204_);
   double tmp206_ = (tmp205_)/tmp52_;
   double tmp207_ = tmp142_+tmp142_;
   double tmp208_ = tmp146_+tmp146_;
   double tmp209_ = tmp207_+tmp208_;
   double tmp210_ = 0.500000*(tmp209_);
   double tmp211_ = (tmp210_)/tmp52_;
   double tmp212_ = tmp150_+tmp150_;
   double tmp213_ = tmp154_+tmp154_;
   double tmp214_ = tmp212_+tmp213_;
   double tmp215_ = 0.500000*(tmp214_);
   double tmp216_ = (tmp215_)/tmp52_;
   double tmp217_ = tmp158_+tmp158_;
   double tmp218_ = tmp162_+tmp162_;
   double tmp219_ = tmp217_+tmp218_;
   double tmp220_ = 0.500000*(tmp219_);
   double tmp221_ = (tmp220_)/tmp52_;
   double tmp222_ = tmp166_+tmp166_;
   double tmp223_ = tmp170_+tmp170_;
   double tmp224_ = tmp222_+tmp223_;
   double tmp225_ = 0.500000*(tmp224_);
   double tmp226_ = (tmp225_)/tmp52_;
   double tmp227_ = tmp38_*tmp171_;
   double tmp228_ = tmp227_*mLocDirEsp2_x;
   double tmp229_ = tmp46_*tmp43_;
   double tmp230_ = tmp46_*tmp47_;
   double tmp231_ = tmp60_*tmp44_;
   double tmp232_ = tmp176_*tmp41_;
   double tmp233_ = -(tmp47_);

  mVal[0] = (tmp31_)/tmp52_-(tmp228_+(tmp42_*tmp47_+tmp229_)*mLocDirEsp2_y+(tmp42_*tmp174_+tmp230_)*mLocDirEsp2_z);

  mCompDer[0][0] = ((tmp55_)*tmp52_-(tmp31_)*(tmp184_))/tmp64_;
  mCompDer[0][1] = (tmp188_-(tmp31_)*(tmp187_))/tmp64_;
  mCompDer[0][2] = -((tmp31_)*(tmp191_))/tmp64_;
  mCompDer[0][3] = ((tmp93_)*tmp52_-(tmp31_)*(tmp196_))/tmp64_;
  mCompDer[0][4] = ((tmp123_)*tmp52_-(tmp31_)*(tmp201_))/tmp64_;
  mCompDer[0][5] = ((tmp133_)*tmp52_-(tmp31_)*(tmp206_))/tmp64_;
  mCompDer[0][6] = ((tmp141_)*tmp52_-(tmp31_)*(tmp211_))/tmp64_;
  mCompDer[0][7] = ((tmp149_)*tmp52_-(tmp31_)*(tmp216_))/tmp64_;
  mCompDer[0][8] = ((tmp157_)*tmp52_-(tmp31_)*(tmp221_))/tmp64_;
  mCompDer[0][9] = ((tmp165_)*tmp52_-(tmp31_)*(tmp226_))/tmp64_;
  mCompDer[0][10] = -(tmp172_*tmp171_*mLocDirEsp2_x+(tmp173_*tmp47_+tmp175_*tmp43_)*mLocDirEsp2_y+(tmp173_*tmp174_+tmp175_*tmp47_)*mLocDirEsp2_z);
  mCompDer[0][11] = -(tmp231_*tmp38_*mLocDirEsp2_x+tmp177_*tmp43_*mLocDirEsp2_y+tmp177_*tmp47_*mLocDirEsp2_z);
  mCompDer[0][12] = -((tmp178_*tmp42_+tmp47_*tmp46_)*mLocDirEsp2_y+(tmp233_*tmp42_+tmp178_*tmp46_)*mLocDirEsp2_z);
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mCompDer[0][15] = 0;
  mVal[1] = (tmp36_)/tmp52_-(tmp41_*tmp171_*mLocDirEsp2_x+(tmp38_*tmp47_+tmp179_*tmp43_)*mLocDirEsp2_y+(tmp38_*tmp174_+tmp179_*tmp47_)*mLocDirEsp2_z);

  mCompDer[1][0] = ((tmp58_)*tmp52_-(tmp36_)*(tmp184_))/tmp64_;
  mCompDer[1][1] = -((tmp36_)*(tmp187_))/tmp64_;
  mCompDer[1][2] = (tmp188_-(tmp36_)*(tmp191_))/tmp64_;
  mCompDer[1][3] = ((tmp97_)*tmp52_-(tmp36_)*(tmp196_))/tmp64_;
  mCompDer[1][4] = ((tmp129_)*tmp52_-(tmp36_)*(tmp201_))/tmp64_;
  mCompDer[1][5] = ((tmp137_)*tmp52_-(tmp36_)*(tmp206_))/tmp64_;
  mCompDer[1][6] = ((tmp145_)*tmp52_-(tmp36_)*(tmp211_))/tmp64_;
  mCompDer[1][7] = ((tmp153_)*tmp52_-(tmp36_)*(tmp216_))/tmp64_;
  mCompDer[1][8] = ((tmp161_)*tmp52_-(tmp36_)*(tmp221_))/tmp64_;
  mCompDer[1][9] = ((tmp169_)*tmp52_-(tmp36_)*(tmp226_))/tmp64_;
  mCompDer[1][10] = -(tmp228_+(tmp172_*tmp47_+tmp229_)*mLocDirEsp2_y+(tmp172_*tmp174_+tmp230_)*mLocDirEsp2_z);
  mCompDer[1][11] = -(tmp231_*tmp41_*mLocDirEsp2_x+tmp232_*tmp43_*mLocDirEsp2_y+tmp232_*tmp47_*mLocDirEsp2_z);
  mCompDer[1][12] = -((tmp178_*tmp38_+tmp47_*tmp179_)*mLocDirEsp2_y+(tmp233_*tmp38_+tmp178_*tmp179_)*mLocDirEsp2_z);
  mCompDer[1][13] = 0;
  mCompDer[1][14] = 0;
  mCompDer[1][15] = 0;
  mVal[2] = 1.000000/tmp52_-(tmp44_*mLocDirEsp2_x+tmp171_*tmp43_*mLocDirEsp2_y+tmp171_*tmp47_*mLocDirEsp2_z);

  mCompDer[2][0] = -(tmp184_)/tmp64_;
  mCompDer[2][1] = -(tmp187_)/tmp64_;
  mCompDer[2][2] = -(tmp191_)/tmp64_;
  mCompDer[2][3] = -(tmp196_)/tmp64_;
  mCompDer[2][4] = -(tmp201_)/tmp64_;
  mCompDer[2][5] = -(tmp206_)/tmp64_;
  mCompDer[2][6] = -(tmp211_)/tmp64_;
  mCompDer[2][7] = -(tmp216_)/tmp64_;
  mCompDer[2][8] = -(tmp221_)/tmp64_;
  mCompDer[2][9] = -(tmp226_)/tmp64_;
  mCompDer[2][10] = 0;
  mCompDer[2][11] = -(tmp171_*mLocDirEsp2_x+tmp231_*tmp43_*mLocDirEsp2_y+tmp231_*tmp47_*mLocDirEsp2_z);
  mCompDer[2][12] = -(tmp47_*tmp171_*mLocDirEsp2_y+tmp178_*tmp171_*mLocDirEsp2_z);
  mCompDer[2][13] = 0;
  mCompDer[2][14] = 0;
  mCompDer[2][15] = 0;
}


void cEqCalibCroisee_DRad5_CodGen::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqCalibCroisee_DRad5_CodGen Has no Der Sec");
}

void cEqCalibCroisee_DRad5_CodGen::SetDirEsp2_x(double aVal){ mLocDirEsp2_x = aVal;}
void cEqCalibCroisee_DRad5_CodGen::SetDirEsp2_y(double aVal){ mLocDirEsp2_y = aVal;}
void cEqCalibCroisee_DRad5_CodGen::SetDirEsp2_z(double aVal){ mLocDirEsp2_z = aVal;}
void cEqCalibCroisee_DRad5_CodGen::SetPIm1_x(double aVal){ mLocPIm1_x = aVal;}
void cEqCalibCroisee_DRad5_CodGen::SetPIm1_y(double aVal){ mLocPIm1_y = aVal;}



double * cEqCalibCroisee_DRad5_CodGen::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "DirEsp2_x") return & mLocDirEsp2_x;
   if (aName == "DirEsp2_y") return & mLocDirEsp2_y;
   if (aName == "DirEsp2_z") return & mLocDirEsp2_z;
   if (aName == "PIm1_x") return & mLocPIm1_x;
   if (aName == "PIm1_y") return & mLocPIm1_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqCalibCroisee_DRad5_CodGen::mTheAuto("cEqCalibCroisee_DRad5_CodGen",cEqCalibCroisee_DRad5_CodGen::Alloc);


cElCompiledFonc *  cEqCalibCroisee_DRad5_CodGen::Alloc()
{  return new cEqCalibCroisee_DRad5_CodGen();
}


