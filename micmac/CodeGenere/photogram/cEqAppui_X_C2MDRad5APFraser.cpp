// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_C2MDRad5APFraser.h"


cEqAppui_X_C2MDRad5APFraser::cEqAppui_X_C2MDRad5APFraser():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,14));
   AddIntRef (cIncIntervale("Orient",14,20));
   Close(false);
}



void cEqAppui_X_C2MDRad5APFraser::ComputeVal()
{
   double tmp0_ = mCompCoord[14];
   double tmp1_ = mCompCoord[15];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[16];
   double tmp7_ = mCompCoord[17];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[18];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[19];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mCompCoord[3];
   double tmp18_ = mLocXIm-tmp17_;
   double tmp19_ = mCompCoord[4];
   double tmp20_ = mLocYIm-tmp19_;
   double tmp21_ = (tmp18_)*(tmp18_);
   double tmp22_ = (tmp20_)*(tmp20_);
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp23_);
   double tmp25_ = tmp24_*(tmp23_);
   double tmp26_ = tmp25_*(tmp23_);
   double tmp27_ = ElSquare(tmp18_);

  mVal[0] = (mCompCoord[1]+mCompCoord[0]*((tmp4_*tmp2_*(tmp8_)+tmp3_*tmp2_*(tmp14_)+tmp5_*(tmp16_))/((-(tmp3_)*tmp10_+tmp4_*tmp11_*tmp12_)*(tmp8_)+(tmp4_*tmp10_+tmp3_*tmp11_*tmp12_)*(tmp14_)+tmp2_*tmp12_*(tmp16_))))-(tmp17_+(tmp18_)*(1+(tmp23_)*mCompCoord[5]+tmp24_*mCompCoord[6]+tmp25_*mCompCoord[7]+tmp26_*mCompCoord[8]+tmp26_*(tmp23_)*mCompCoord[9])+(2*tmp27_+tmp27_+ElSquare(tmp20_))*mCompCoord[10]+2*(tmp18_)*(tmp20_)*mCompCoord[11]+mCompCoord[12]*(tmp18_)+mCompCoord[13]*(tmp20_));

}


void cEqAppui_X_C2MDRad5APFraser::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[14];
   double tmp1_ = mCompCoord[15];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[16];
   double tmp7_ = mCompCoord[17];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[18];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[19];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mCompCoord[3];
   double tmp18_ = mLocXIm-tmp17_;
   double tmp19_ = mCompCoord[4];
   double tmp20_ = mLocYIm-tmp19_;
   double tmp21_ = (tmp18_)*(tmp18_);
   double tmp22_ = (tmp20_)*(tmp20_);
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp23_);
   double tmp25_ = tmp24_*(tmp23_);
   double tmp26_ = tmp25_*(tmp23_);
   double tmp27_ = ElSquare(tmp18_);
   double tmp28_ = tmp4_*tmp2_;
   double tmp29_ = tmp28_*(tmp8_);
   double tmp30_ = tmp3_*tmp2_;
   double tmp31_ = tmp30_*(tmp14_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = tmp5_*(tmp16_);
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = -(tmp3_);
   double tmp36_ = tmp35_*tmp10_;
   double tmp37_ = tmp4_*tmp11_;
   double tmp38_ = tmp37_*tmp12_;
   double tmp39_ = tmp36_+tmp38_;
   double tmp40_ = (tmp39_)*(tmp8_);
   double tmp41_ = tmp4_*tmp10_;
   double tmp42_ = tmp3_*tmp11_;
   double tmp43_ = tmp42_*tmp12_;
   double tmp44_ = tmp41_+tmp43_;
   double tmp45_ = (tmp44_)*(tmp14_);
   double tmp46_ = tmp40_+tmp45_;
   double tmp47_ = tmp2_*tmp12_;
   double tmp48_ = tmp47_*(tmp16_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = (tmp34_)/(tmp49_);
   double tmp51_ = mCompCoord[5];
   double tmp52_ = (tmp23_)*tmp51_;
   double tmp53_ = 1+tmp52_;
   double tmp54_ = mCompCoord[6];
   double tmp55_ = tmp24_*tmp54_;
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = mCompCoord[7];
   double tmp58_ = tmp25_*tmp57_;
   double tmp59_ = tmp56_+tmp58_;
   double tmp60_ = mCompCoord[8];
   double tmp61_ = tmp26_*tmp60_;
   double tmp62_ = tmp59_+tmp61_;
   double tmp63_ = tmp26_*(tmp23_);
   double tmp64_ = mCompCoord[9];
   double tmp65_ = tmp63_*tmp64_;
   double tmp66_ = tmp62_+tmp65_;
   double tmp67_ = -(1);
   double tmp68_ = tmp67_*(tmp18_);
   double tmp69_ = tmp68_+tmp68_;
   double tmp70_ = (tmp69_)*(tmp23_);
   double tmp71_ = tmp70_+tmp70_;
   double tmp72_ = (tmp71_)*(tmp23_);
   double tmp73_ = (tmp69_)*tmp24_;
   double tmp74_ = tmp72_+tmp73_;
   double tmp75_ = (tmp74_)*(tmp23_);
   double tmp76_ = (tmp69_)*tmp25_;
   double tmp77_ = tmp75_+tmp76_;
   double tmp78_ = 2*tmp67_;
   double tmp79_ = tmp78_*(tmp18_);
   double tmp80_ = mCompCoord[10];
   double tmp81_ = mCompCoord[11];
   double tmp82_ = mCompCoord[12];
   double tmp83_ = tmp67_*(tmp20_);
   double tmp84_ = tmp83_+tmp83_;
   double tmp85_ = (tmp84_)*(tmp23_);
   double tmp86_ = tmp85_+tmp85_;
   double tmp87_ = (tmp86_)*(tmp23_);
   double tmp88_ = (tmp84_)*tmp24_;
   double tmp89_ = tmp87_+tmp88_;
   double tmp90_ = (tmp89_)*(tmp23_);
   double tmp91_ = (tmp84_)*tmp25_;
   double tmp92_ = tmp90_+tmp91_;
   double tmp93_ = 2*(tmp18_);
   double tmp94_ = mCompCoord[13];
   double tmp95_ = 2*tmp27_;
   double tmp96_ = ElSquare(tmp20_);
   double tmp97_ = tmp27_+tmp96_;
   double tmp98_ = tmp95_+tmp97_;
   double tmp99_ = tmp93_*(tmp20_);
   double tmp100_ = tmp67_*tmp3_;
   double tmp101_ = mCompCoord[0];
   double tmp102_ = tmp67_*tmp5_;
   double tmp103_ = -(tmp2_);
   double tmp104_ = ElSquare(tmp49_);
   double tmp105_ = -(tmp12_);
   double tmp106_ = tmp67_*tmp9_;

  mVal[0] = (mCompCoord[1]+tmp101_*(tmp50_))-(tmp17_+(tmp18_)*(tmp66_)+(tmp98_)*tmp80_+tmp99_*tmp81_+tmp82_*(tmp18_)+tmp94_*(tmp20_));

  mCompDer[0][0] = tmp50_;
  mCompDer[0][1] = 1;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = -(1+tmp67_*(tmp66_)+((tmp69_)*tmp51_+(tmp71_)*tmp54_+(tmp74_)*tmp57_+(tmp77_)*tmp60_+((tmp77_)*(tmp23_)+(tmp69_)*tmp26_)*tmp64_)*(tmp18_)+(tmp79_*2+tmp79_)*tmp80_+tmp67_*2*(tmp20_)*tmp81_+tmp67_*tmp82_);
  mCompDer[0][4] = -(((tmp84_)*tmp51_+(tmp86_)*tmp54_+(tmp89_)*tmp57_+(tmp92_)*tmp60_+((tmp92_)*(tmp23_)+(tmp84_)*tmp26_)*tmp64_)*(tmp18_)+tmp78_*(tmp20_)*tmp80_+tmp67_*tmp93_*tmp81_+tmp67_*tmp94_);
  mCompDer[0][5] = -((tmp23_)*(tmp18_));
  mCompDer[0][6] = -(tmp24_*(tmp18_));
  mCompDer[0][7] = -(tmp25_*(tmp18_));
  mCompDer[0][8] = -(tmp26_*(tmp18_));
  mCompDer[0][9] = -(tmp63_*(tmp18_));
  mCompDer[0][10] = -(tmp98_);
  mCompDer[0][11] = -(tmp99_);
  mCompDer[0][12] = -(tmp18_);
  mCompDer[0][13] = -(tmp20_);
  mCompDer[0][14] = (((tmp100_*tmp2_*(tmp8_)+tmp28_*(tmp14_))*(tmp49_)-(tmp34_)*((-(tmp4_)*tmp10_+tmp100_*tmp11_*tmp12_)*(tmp8_)+(tmp100_*tmp10_+tmp38_)*(tmp14_)))/tmp104_)*tmp101_;
  mCompDer[0][15] = (((tmp102_*tmp4_*(tmp8_)+tmp102_*tmp3_*(tmp14_)+tmp2_*(tmp16_))*(tmp49_)-(tmp34_)*(tmp103_*tmp4_*tmp12_*(tmp8_)+tmp103_*tmp3_*tmp12_*(tmp14_)+tmp102_*tmp12_*(tmp16_)))/tmp104_)*tmp101_;
  mCompDer[0][16] = (-((tmp34_)*((tmp105_*tmp35_+tmp106_*tmp37_)*(tmp8_)+(tmp105_*tmp4_+tmp106_*tmp42_)*(tmp14_)+tmp106_*tmp2_*(tmp16_)))/tmp104_)*tmp101_;
  mCompDer[0][17] = ((tmp67_*tmp28_*(tmp49_)-(tmp34_)*tmp67_*(tmp39_))/tmp104_)*tmp101_;
  mCompDer[0][18] = ((tmp67_*tmp30_*(tmp49_)-(tmp34_)*tmp67_*(tmp44_))/tmp104_)*tmp101_;
  mCompDer[0][19] = ((tmp102_*(tmp49_)-(tmp34_)*tmp67_*tmp47_)/tmp104_)*tmp101_;
}


void cEqAppui_X_C2MDRad5APFraser::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_C2MDRad5APFraser Has no Der Sec");
}

void cEqAppui_X_C2MDRad5APFraser::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_C2MDRad5APFraser::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_C2MDRad5APFraser::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_X_C2MDRad5APFraser::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_C2MDRad5APFraser::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_C2MDRad5APFraser::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_C2MDRad5APFraser::mTheAuto("cEqAppui_X_C2MDRad5APFraser",cEqAppui_X_C2MDRad5APFraser::Alloc);


cElCompiledFonc *  cEqAppui_X_C2MDRad5APFraser::Alloc()
{  return new cEqAppui_X_C2MDRad5APFraser();
}


