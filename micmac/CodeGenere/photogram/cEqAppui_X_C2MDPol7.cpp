// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_C2MDPol7.h"


cEqAppui_X_C2MDPol7::cEqAppui_X_C2MDPol7():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,72));
   AddIntRef (cIncIntervale("Orient",72,78));
   Close(false);
}



void cEqAppui_X_C2MDPol7::ComputeVal()
{
   double tmp0_ = mCompCoord[72];
   double tmp1_ = mCompCoord[73];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[74];
   double tmp7_ = mCompCoord[75];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[76];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[77];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = ElSquare(mLocYIm);
   double tmp18_ = ElSquare(mLocXIm);
   double tmp19_ = VCube(mLocYIm);
   double tmp20_ = VCube(mLocXIm);
   double tmp21_ = VPow4(mLocYIm);
   double tmp22_ = VPow4(mLocXIm);
   double tmp23_ = VPow5(mLocYIm);
   double tmp24_ = VPow5(mLocXIm);
   double tmp25_ = VPow6(mLocYIm);
   double tmp26_ = VPow6(mLocXIm);

  mVal[0] = (tmp4_*tmp2_*(tmp8_)+tmp3_*tmp2_*(tmp14_)+tmp5_*(tmp16_))/((-(tmp3_)*tmp10_+tmp4_*tmp11_*tmp12_)*(tmp8_)+(tmp4_*tmp10_+tmp3_*tmp11_*tmp12_)*(tmp14_)+tmp2_*tmp12_*(tmp16_))-(mCompCoord[0]+mCompCoord[1]*mLocYIm+mCompCoord[2]*mLocXIm+mCompCoord[3]*tmp17_+mCompCoord[4]*mLocXIm*mLocYIm+mCompCoord[5]*tmp18_+mCompCoord[6]*tmp19_+mCompCoord[7]*mLocXIm*tmp17_+mCompCoord[8]*tmp18_*mLocYIm+mCompCoord[9]*tmp20_+mCompCoord[10]*tmp21_+mCompCoord[11]*mLocXIm*tmp19_+mCompCoord[12]*tmp18_*tmp17_+mCompCoord[13]*tmp20_*mLocYIm+mCompCoord[14]*tmp22_+mCompCoord[15]*tmp23_+mCompCoord[16]*mLocXIm*tmp21_+mCompCoord[17]*tmp18_*tmp19_+mCompCoord[18]*tmp20_*tmp17_+mCompCoord[19]*tmp22_*mLocYIm+mCompCoord[20]*tmp24_+mCompCoord[21]*tmp25_+mCompCoord[22]*mLocXIm*tmp23_+mCompCoord[23]*tmp18_*tmp21_+mCompCoord[24]*tmp20_*tmp19_+mCompCoord[25]*tmp22_*tmp17_+mCompCoord[26]*tmp24_*mLocYIm+mCompCoord[27]*tmp26_+mCompCoord[28]*VPow7(mLocYIm)+mCompCoord[29]*mLocXIm*tmp25_+mCompCoord[30]*tmp18_*tmp23_+mCompCoord[31]*tmp20_*tmp21_+mCompCoord[32]*tmp22_*tmp19_+mCompCoord[33]*tmp24_*tmp17_+mCompCoord[34]*tmp26_*mLocYIm+mCompCoord[35]*VPow7(mLocXIm));

}


void cEqAppui_X_C2MDPol7::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[72];
   double tmp1_ = mCompCoord[73];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[74];
   double tmp7_ = mCompCoord[75];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[76];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[77];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = ElSquare(mLocYIm);
   double tmp18_ = ElSquare(mLocXIm);
   double tmp19_ = VCube(mLocYIm);
   double tmp20_ = VCube(mLocXIm);
   double tmp21_ = VPow4(mLocYIm);
   double tmp22_ = VPow4(mLocXIm);
   double tmp23_ = VPow5(mLocYIm);
   double tmp24_ = VPow5(mLocXIm);
   double tmp25_ = VPow6(mLocYIm);
   double tmp26_ = VPow6(mLocXIm);
   double tmp27_ = VPow7(mLocYIm);
   double tmp28_ = VPow7(mLocXIm);
   double tmp29_ = -(1);
   double tmp30_ = tmp4_*tmp2_;
   double tmp31_ = -(tmp3_);
   double tmp32_ = tmp31_*tmp10_;
   double tmp33_ = tmp4_*tmp11_;
   double tmp34_ = tmp33_*tmp12_;
   double tmp35_ = tmp32_+tmp34_;
   double tmp36_ = (tmp35_)*(tmp8_);
   double tmp37_ = tmp4_*tmp10_;
   double tmp38_ = tmp3_*tmp11_;
   double tmp39_ = tmp38_*tmp12_;
   double tmp40_ = tmp37_+tmp39_;
   double tmp41_ = (tmp40_)*(tmp14_);
   double tmp42_ = tmp36_+tmp41_;
   double tmp43_ = tmp2_*tmp12_;
   double tmp44_ = tmp43_*(tmp16_);
   double tmp45_ = tmp42_+tmp44_;
   double tmp46_ = tmp30_*(tmp8_);
   double tmp47_ = tmp3_*tmp2_;
   double tmp48_ = tmp47_*(tmp14_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp5_*(tmp16_);
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = tmp29_*tmp3_;
   double tmp53_ = tmp29_*tmp5_;
   double tmp54_ = -(tmp2_);
   double tmp55_ = ElSquare(tmp45_);
   double tmp56_ = -(tmp12_);
   double tmp57_ = tmp29_*tmp9_;

  mVal[0] = (tmp51_)/(tmp45_)-(mCompCoord[0]+mCompCoord[1]*mLocYIm+mCompCoord[2]*mLocXIm+mCompCoord[3]*tmp17_+mCompCoord[4]*mLocXIm*mLocYIm+mCompCoord[5]*tmp18_+mCompCoord[6]*tmp19_+mCompCoord[7]*mLocXIm*tmp17_+mCompCoord[8]*tmp18_*mLocYIm+mCompCoord[9]*tmp20_+mCompCoord[10]*tmp21_+mCompCoord[11]*mLocXIm*tmp19_+mCompCoord[12]*tmp18_*tmp17_+mCompCoord[13]*tmp20_*mLocYIm+mCompCoord[14]*tmp22_+mCompCoord[15]*tmp23_+mCompCoord[16]*mLocXIm*tmp21_+mCompCoord[17]*tmp18_*tmp19_+mCompCoord[18]*tmp20_*tmp17_+mCompCoord[19]*tmp22_*mLocYIm+mCompCoord[20]*tmp24_+mCompCoord[21]*tmp25_+mCompCoord[22]*mLocXIm*tmp23_+mCompCoord[23]*tmp18_*tmp21_+mCompCoord[24]*tmp20_*tmp19_+mCompCoord[25]*tmp22_*tmp17_+mCompCoord[26]*tmp24_*mLocYIm+mCompCoord[27]*tmp26_+mCompCoord[28]*tmp27_+mCompCoord[29]*mLocXIm*tmp25_+mCompCoord[30]*tmp18_*tmp23_+mCompCoord[31]*tmp20_*tmp21_+mCompCoord[32]*tmp22_*tmp19_+mCompCoord[33]*tmp24_*tmp17_+mCompCoord[34]*tmp26_*mLocYIm+mCompCoord[35]*tmp28_);

  mCompDer[0][0] = tmp29_;
  mCompDer[0][1] = -(mLocYIm);
  mCompDer[0][2] = -(mLocXIm);
  mCompDer[0][3] = -(tmp17_);
  mCompDer[0][4] = -(mLocXIm*mLocYIm);
  mCompDer[0][5] = -(tmp18_);
  mCompDer[0][6] = -(tmp19_);
  mCompDer[0][7] = -(mLocXIm*tmp17_);
  mCompDer[0][8] = -(tmp18_*mLocYIm);
  mCompDer[0][9] = -(tmp20_);
  mCompDer[0][10] = -(tmp21_);
  mCompDer[0][11] = -(mLocXIm*tmp19_);
  mCompDer[0][12] = -(tmp18_*tmp17_);
  mCompDer[0][13] = -(tmp20_*mLocYIm);
  mCompDer[0][14] = -(tmp22_);
  mCompDer[0][15] = -(tmp23_);
  mCompDer[0][16] = -(mLocXIm*tmp21_);
  mCompDer[0][17] = -(tmp18_*tmp19_);
  mCompDer[0][18] = -(tmp20_*tmp17_);
  mCompDer[0][19] = -(tmp22_*mLocYIm);
  mCompDer[0][20] = -(tmp24_);
  mCompDer[0][21] = -(tmp25_);
  mCompDer[0][22] = -(mLocXIm*tmp23_);
  mCompDer[0][23] = -(tmp18_*tmp21_);
  mCompDer[0][24] = -(tmp20_*tmp19_);
  mCompDer[0][25] = -(tmp22_*tmp17_);
  mCompDer[0][26] = -(tmp24_*mLocYIm);
  mCompDer[0][27] = -(tmp26_);
  mCompDer[0][28] = -(tmp27_);
  mCompDer[0][29] = -(mLocXIm*tmp25_);
  mCompDer[0][30] = -(tmp18_*tmp23_);
  mCompDer[0][31] = -(tmp20_*tmp21_);
  mCompDer[0][32] = -(tmp22_*tmp19_);
  mCompDer[0][33] = -(tmp24_*tmp17_);
  mCompDer[0][34] = -(tmp26_*mLocYIm);
  mCompDer[0][35] = -(tmp28_);
  mCompDer[0][36] = 0;
  mCompDer[0][37] = 0;
  mCompDer[0][38] = 0;
  mCompDer[0][39] = 0;
  mCompDer[0][40] = 0;
  mCompDer[0][41] = 0;
  mCompDer[0][42] = 0;
  mCompDer[0][43] = 0;
  mCompDer[0][44] = 0;
  mCompDer[0][45] = 0;
  mCompDer[0][46] = 0;
  mCompDer[0][47] = 0;
  mCompDer[0][48] = 0;
  mCompDer[0][49] = 0;
  mCompDer[0][50] = 0;
  mCompDer[0][51] = 0;
  mCompDer[0][52] = 0;
  mCompDer[0][53] = 0;
  mCompDer[0][54] = 0;
  mCompDer[0][55] = 0;
  mCompDer[0][56] = 0;
  mCompDer[0][57] = 0;
  mCompDer[0][58] = 0;
  mCompDer[0][59] = 0;
  mCompDer[0][60] = 0;
  mCompDer[0][61] = 0;
  mCompDer[0][62] = 0;
  mCompDer[0][63] = 0;
  mCompDer[0][64] = 0;
  mCompDer[0][65] = 0;
  mCompDer[0][66] = 0;
  mCompDer[0][67] = 0;
  mCompDer[0][68] = 0;
  mCompDer[0][69] = 0;
  mCompDer[0][70] = 0;
  mCompDer[0][71] = 0;
  mCompDer[0][72] = ((tmp52_*tmp2_*(tmp8_)+tmp30_*(tmp14_))*(tmp45_)-(tmp51_)*((-(tmp4_)*tmp10_+tmp52_*tmp11_*tmp12_)*(tmp8_)+(tmp52_*tmp10_+tmp34_)*(tmp14_)))/tmp55_;
  mCompDer[0][73] = ((tmp53_*tmp4_*(tmp8_)+tmp53_*tmp3_*(tmp14_)+tmp2_*(tmp16_))*(tmp45_)-(tmp51_)*(tmp54_*tmp4_*tmp12_*(tmp8_)+tmp54_*tmp3_*tmp12_*(tmp14_)+tmp53_*tmp12_*(tmp16_)))/tmp55_;
  mCompDer[0][74] = -((tmp51_)*((tmp56_*tmp31_+tmp57_*tmp33_)*(tmp8_)+(tmp56_*tmp4_+tmp57_*tmp38_)*(tmp14_)+tmp57_*tmp2_*(tmp16_)))/tmp55_;
  mCompDer[0][75] = (tmp29_*tmp30_*(tmp45_)-(tmp51_)*tmp29_*(tmp35_))/tmp55_;
  mCompDer[0][76] = (tmp29_*tmp47_*(tmp45_)-(tmp51_)*tmp29_*(tmp40_))/tmp55_;
  mCompDer[0][77] = (tmp53_*(tmp45_)-(tmp51_)*tmp29_*tmp43_)/tmp55_;
}


void cEqAppui_X_C2MDPol7::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_C2MDPol7 Has no Der Sec");
}

void cEqAppui_X_C2MDPol7::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_C2MDPol7::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_C2MDPol7::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_X_C2MDPol7::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_C2MDPol7::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_C2MDPol7::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_C2MDPol7::mTheAuto("cEqAppui_X_C2MDPol7",cEqAppui_X_C2MDPol7::Alloc);


cElCompiledFonc *  cEqAppui_X_C2MDPol7::Alloc()
{  return new cEqAppui_X_C2MDPol7();
}


