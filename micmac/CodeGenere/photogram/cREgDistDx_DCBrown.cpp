// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistDx_DCBrown.h"


cREgDistDx_DCBrown::cREgDistDx_DCBrown():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,17));
   Close(false);
}



void cREgDistDx_DCBrown::ComputeVal()
{
   double tmp0_ = mLocRegDistu1_y * mLocRegDistu1_y;
   double tmp1_ = mLocRegDistu1_x * mLocRegDistu1_x;
   double tmp2_ = tmp1_ * tmp0_;
   double tmp3_ = mCompCoord[3];
   double tmp4_ = 1 + tmp3_;
   double tmp5_ = mCompCoord[4];
   double tmp6_ = mCompCoord[5];
   double tmp7_ = mCompCoord[6];
   double tmp8_ = mCompCoord[7];
   double tmp9_ = mCompCoord[8];
   double tmp10_ = mLocRegDistu2_y * mLocRegDistu2_y;
   double tmp11_ = mCompCoord[9];
   double tmp12_ = mLocRegDistu2_x * mLocRegDistu2_x;
   double tmp13_ = mCompCoord[15];
   double tmp14_ = tmp12_ * tmp10_;
   double tmp15_ = mCompCoord[16];
   double tmp16_ = mLocRegDistu1_x * mLocRegDistu1_y;
   double tmp17_ = tmp1_ * mLocRegDistu1_y;
   double tmp18_ = mLocRegDistu1_x * tmp0_;
   double tmp19_ = tmp1_ + tmp0_;
   double tmp20_ = mCompCoord[10];
   double tmp21_ = mLocRegDistu2_x * mLocRegDistu2_y;
   double tmp22_ = mCompCoord[11];
   double tmp23_ = mCompCoord[12];
   double tmp24_ = tmp12_ * mLocRegDistu2_y;
   double tmp25_ = mCompCoord[13];
   double tmp26_ = mLocRegDistu2_x * tmp10_;
   double tmp27_ = mCompCoord[14];
   double tmp28_ = tmp12_ + tmp10_;

  mVal[0] = ((tmp4_) * mLocRegDistu1_x + tmp5_ * mLocRegDistu1_y + tmp6_ * tmp16_ + tmp7_ * tmp0_ + tmp8_ * tmp17_ + tmp9_ * tmp18_ + tmp11_ * tmp2_ + tmp13_ * (mLocRegDistu1_x / mLocDCBrown_State_0_0) * tmp2_ + tmp15_ * mLocRegDistu1_x * (tmp19_)) - ((tmp4_) * mLocRegDistu2_x + tmp5_ * mLocRegDistu2_y + tmp6_ * tmp21_ + tmp7_ * tmp10_ + tmp8_ * tmp24_ + tmp9_ * tmp26_ + tmp11_ * tmp14_ + tmp13_ * (mLocRegDistu2_x / mLocDCBrown_State_0_0) * tmp14_ + tmp15_ * mLocRegDistu2_x * (tmp28_)) - mLocRegDistu3_x;

  mVal[1] = (mLocRegDistu1_y + tmp20_ * tmp16_ + tmp22_ * tmp1_ + tmp23_ * tmp17_ + tmp25_ * tmp18_ + tmp27_ * tmp2_ + tmp13_ * (mLocRegDistu1_y / mLocDCBrown_State_0_0) * tmp2_ + tmp15_ * mLocRegDistu1_y * (tmp19_)) - (mLocRegDistu2_y + tmp20_ * tmp21_ + tmp22_ * tmp12_ + tmp23_ * tmp24_ + tmp25_ * tmp26_ + tmp27_ * tmp14_ + tmp13_ * (mLocRegDistu2_y / mLocDCBrown_State_0_0) * tmp14_ + tmp15_ * mLocRegDistu2_y * (tmp28_)) - mLocRegDistu3_y;

}


void cREgDistDx_DCBrown::ComputeValDeriv()
{
   double tmp0_ = mLocRegDistu1_y * mLocRegDistu1_y;
   double tmp1_ = mLocRegDistu1_x * mLocRegDistu1_x;
   double tmp2_ = tmp1_ * tmp0_;
   double tmp3_ = mCompCoord[3];
   double tmp4_ = 1 + tmp3_;
   double tmp5_ = mCompCoord[4];
   double tmp6_ = mCompCoord[5];
   double tmp7_ = mCompCoord[6];
   double tmp8_ = mCompCoord[7];
   double tmp9_ = mCompCoord[8];
   double tmp10_ = mLocRegDistu2_y * mLocRegDistu2_y;
   double tmp11_ = mCompCoord[9];
   double tmp12_ = mLocRegDistu2_x * mLocRegDistu2_x;
   double tmp13_ = mCompCoord[15];
   double tmp14_ = tmp12_ * tmp10_;
   double tmp15_ = mCompCoord[16];
   double tmp16_ = mLocRegDistu1_x * mLocRegDistu1_y;
   double tmp17_ = mLocRegDistu2_x * mLocRegDistu2_y;
   double tmp18_ = tmp1_ * mLocRegDistu1_y;
   double tmp19_ = tmp12_ * mLocRegDistu2_y;
   double tmp20_ = mLocRegDistu1_x * tmp0_;
   double tmp21_ = mLocRegDistu2_x * tmp10_;
   double tmp22_ = mLocRegDistu1_x / mLocDCBrown_State_0_0;
   double tmp23_ = mLocRegDistu2_x / mLocDCBrown_State_0_0;
   double tmp24_ = tmp1_ + tmp0_;
   double tmp25_ = tmp12_ + tmp10_;
   double tmp26_ = mCompCoord[10];
   double tmp27_ = mCompCoord[11];
   double tmp28_ = mCompCoord[12];
   double tmp29_ = mCompCoord[13];
   double tmp30_ = mCompCoord[14];
   double tmp31_ = tmp16_ - tmp17_;
   double tmp32_ = tmp18_ - tmp19_;
   double tmp33_ = tmp20_ - tmp21_;
   double tmp34_ = tmp2_ - tmp14_;
   double tmp35_ = mLocRegDistu1_y / mLocDCBrown_State_0_0;
   double tmp36_ = mLocRegDistu2_y / mLocDCBrown_State_0_0;

  mVal[0] = ((tmp4_) * mLocRegDistu1_x + tmp5_ * mLocRegDistu1_y + tmp6_ * tmp16_ + tmp7_ * tmp0_ + tmp8_ * tmp18_ + tmp9_ * tmp20_ + tmp11_ * tmp2_ + tmp13_ * (tmp22_) * tmp2_ + tmp15_ * mLocRegDistu1_x * (tmp24_)) - ((tmp4_) * mLocRegDistu2_x + tmp5_ * mLocRegDistu2_y + tmp6_ * tmp17_ + tmp7_ * tmp10_ + tmp8_ * tmp19_ + tmp9_ * tmp21_ + tmp11_ * tmp14_ + tmp13_ * (tmp23_) * tmp14_ + tmp15_ * mLocRegDistu2_x * (tmp25_)) - mLocRegDistu3_x;

  mCompDer[0][0] = 0;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = mLocRegDistu1_x - mLocRegDistu2_x;
  mCompDer[0][4] = mLocRegDistu1_y - mLocRegDistu2_y;
  mCompDer[0][5] = tmp31_;
  mCompDer[0][6] = tmp0_ - tmp10_;
  mCompDer[0][7] = tmp32_;
  mCompDer[0][8] = tmp33_;
  mCompDer[0][9] = tmp34_;
  mCompDer[0][10] = 0;
  mCompDer[0][11] = 0;
  mCompDer[0][12] = 0;
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mCompDer[0][15] = (tmp22_) * tmp2_ - (tmp23_) * tmp14_;
  mCompDer[0][16] = mLocRegDistu1_x * (tmp24_) - mLocRegDistu2_x * (tmp25_);
  mVal[1] = (mLocRegDistu1_y + tmp26_ * tmp16_ + tmp27_ * tmp1_ + tmp28_ * tmp18_ + tmp29_ * tmp20_ + tmp30_ * tmp2_ + tmp13_ * (tmp35_) * tmp2_ + tmp15_ * mLocRegDistu1_y * (tmp24_)) - (mLocRegDistu2_y + tmp26_ * tmp17_ + tmp27_ * tmp12_ + tmp28_ * tmp19_ + tmp29_ * tmp21_ + tmp30_ * tmp14_ + tmp13_ * (tmp36_) * tmp14_ + tmp15_ * mLocRegDistu2_y * (tmp25_)) - mLocRegDistu3_y;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
  mCompDer[1][3] = 0;
  mCompDer[1][4] = 0;
  mCompDer[1][5] = 0;
  mCompDer[1][6] = 0;
  mCompDer[1][7] = 0;
  mCompDer[1][8] = 0;
  mCompDer[1][9] = 0;
  mCompDer[1][10] = tmp31_;
  mCompDer[1][11] = tmp1_ - tmp12_;
  mCompDer[1][12] = tmp32_;
  mCompDer[1][13] = tmp33_;
  mCompDer[1][14] = tmp34_;
  mCompDer[1][15] = (tmp35_) * tmp2_ - (tmp36_) * tmp14_;
  mCompDer[1][16] = mLocRegDistu1_y * (tmp24_) - mLocRegDistu2_y * (tmp25_);
}


void cREgDistDx_DCBrown::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistDx_DCBrown Has no Der Sec");
}

void cREgDistDx_DCBrown::SetDCBrown_State_0_0(double aVal){ mLocDCBrown_State_0_0 = aVal;}
void cREgDistDx_DCBrown::SetRegDistu1_x(double aVal){ mLocRegDistu1_x = aVal;}
void cREgDistDx_DCBrown::SetRegDistu1_y(double aVal){ mLocRegDistu1_y = aVal;}
void cREgDistDx_DCBrown::SetRegDistu2_x(double aVal){ mLocRegDistu2_x = aVal;}
void cREgDistDx_DCBrown::SetRegDistu2_y(double aVal){ mLocRegDistu2_y = aVal;}
void cREgDistDx_DCBrown::SetRegDistu3_x(double aVal){ mLocRegDistu3_x = aVal;}
void cREgDistDx_DCBrown::SetRegDistu3_y(double aVal){ mLocRegDistu3_y = aVal;}



double * cREgDistDx_DCBrown::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "DCBrown_State_0_0") return & mLocDCBrown_State_0_0;
   if (aName == "RegDistu1_x") return & mLocRegDistu1_x;
   if (aName == "RegDistu1_y") return & mLocRegDistu1_y;
   if (aName == "RegDistu2_x") return & mLocRegDistu2_x;
   if (aName == "RegDistu2_y") return & mLocRegDistu2_y;
   if (aName == "RegDistu3_x") return & mLocRegDistu3_x;
   if (aName == "RegDistu3_y") return & mLocRegDistu3_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistDx_DCBrown::mTheAuto("cREgDistDx_DCBrown",cREgDistDx_DCBrown::Alloc);


cElCompiledFonc *  cREgDistDx_DCBrown::Alloc()
{  return new cREgDistDx_DCBrown();
}


