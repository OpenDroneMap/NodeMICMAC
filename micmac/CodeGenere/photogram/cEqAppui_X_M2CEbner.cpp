// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_M2CEbner.h"


cEqAppui_X_M2CEbner::cEqAppui_X_M2CEbner():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,15));
   AddIntRef (cIncIntervale("Orient",15,21));
   Close(false);
}



void cEqAppui_X_M2CEbner::ComputeVal()
{
   double tmp0_ = mCompCoord[15];
   double tmp1_ = mCompCoord[16];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[17];
   double tmp7_ = mCompCoord[18];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[19];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[20];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mCompCoord[0];
   double tmp18_ = -(tmp3_);
   double tmp19_ = tmp4_*tmp11_;
   double tmp20_ = tmp3_*tmp11_;
   double tmp21_ = tmp18_*tmp10_;
   double tmp22_ = tmp19_*tmp12_;
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp8_);
   double tmp25_ = tmp4_*tmp10_;
   double tmp26_ = tmp20_*tmp12_;
   double tmp27_ = tmp25_+tmp26_;
   double tmp28_ = (tmp27_)*(tmp14_);
   double tmp29_ = tmp24_+tmp28_;
   double tmp30_ = tmp2_*tmp12_;
   double tmp31_ = tmp30_*(tmp16_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = mCompCoord[1];
   double tmp34_ = tmp4_*tmp2_;
   double tmp35_ = tmp34_*(tmp8_);
   double tmp36_ = tmp3_*tmp2_;
   double tmp37_ = tmp36_*(tmp14_);
   double tmp38_ = tmp35_+tmp37_;
   double tmp39_ = tmp5_*(tmp16_);
   double tmp40_ = tmp38_+tmp39_;
   double tmp41_ = (tmp40_)/(tmp32_);
   double tmp42_ = tmp17_*(tmp41_);
   double tmp43_ = tmp33_+tmp42_;
   double tmp44_ = mCompCoord[2];
   double tmp45_ = tmp18_*tmp12_;
   double tmp46_ = tmp19_*tmp9_;
   double tmp47_ = tmp45_+tmp46_;
   double tmp48_ = (tmp47_)*(tmp8_);
   double tmp49_ = tmp4_*tmp12_;
   double tmp50_ = tmp20_*tmp9_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)*(tmp14_);
   double tmp53_ = tmp48_+tmp52_;
   double tmp54_ = tmp2_*tmp9_;
   double tmp55_ = tmp54_*(tmp16_);
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = (tmp56_)/(tmp32_);
   double tmp58_ = tmp17_*(tmp57_);
   double tmp59_ = tmp44_+tmp58_;
   double tmp60_ = mLocEbner_State_0_0*mLocEbner_State_0_0;
   double tmp61_ = tmp60_*0.666667;
   double tmp62_ = (tmp59_)*(tmp59_);
   double tmp63_ = tmp62_-tmp61_;
   double tmp64_ = (tmp43_)*(tmp43_);
   double tmp65_ = tmp64_-tmp61_;

  mVal[0] = (((1+mCompCoord[3])*(tmp43_)+mCompCoord[4]*(tmp59_))-mCompCoord[5]*2*(tmp65_)+mCompCoord[6]*(tmp43_)*(tmp59_)+mCompCoord[7]*(tmp63_)+mCompCoord[9]*(tmp43_)*(tmp63_)+mCompCoord[11]*(tmp59_)*(tmp65_)+mCompCoord[13]*(tmp65_)*(tmp63_))-mLocXIm;

}


void cEqAppui_X_M2CEbner::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[15];
   double tmp1_ = mCompCoord[16];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[17];
   double tmp7_ = mCompCoord[18];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[19];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[20];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mCompCoord[0];
   double tmp18_ = -(tmp3_);
   double tmp19_ = tmp4_*tmp11_;
   double tmp20_ = tmp3_*tmp11_;
   double tmp21_ = tmp18_*tmp10_;
   double tmp22_ = tmp19_*tmp12_;
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp8_);
   double tmp25_ = tmp4_*tmp10_;
   double tmp26_ = tmp20_*tmp12_;
   double tmp27_ = tmp25_+tmp26_;
   double tmp28_ = (tmp27_)*(tmp14_);
   double tmp29_ = tmp24_+tmp28_;
   double tmp30_ = tmp2_*tmp12_;
   double tmp31_ = tmp30_*(tmp16_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = mCompCoord[1];
   double tmp34_ = tmp4_*tmp2_;
   double tmp35_ = tmp34_*(tmp8_);
   double tmp36_ = tmp3_*tmp2_;
   double tmp37_ = tmp36_*(tmp14_);
   double tmp38_ = tmp35_+tmp37_;
   double tmp39_ = tmp5_*(tmp16_);
   double tmp40_ = tmp38_+tmp39_;
   double tmp41_ = (tmp40_)/(tmp32_);
   double tmp42_ = tmp17_*(tmp41_);
   double tmp43_ = tmp33_+tmp42_;
   double tmp44_ = mCompCoord[2];
   double tmp45_ = tmp18_*tmp12_;
   double tmp46_ = tmp19_*tmp9_;
   double tmp47_ = tmp45_+tmp46_;
   double tmp48_ = (tmp47_)*(tmp8_);
   double tmp49_ = tmp4_*tmp12_;
   double tmp50_ = tmp20_*tmp9_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)*(tmp14_);
   double tmp53_ = tmp48_+tmp52_;
   double tmp54_ = tmp2_*tmp9_;
   double tmp55_ = tmp54_*(tmp16_);
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = (tmp56_)/(tmp32_);
   double tmp58_ = tmp17_*(tmp57_);
   double tmp59_ = tmp44_+tmp58_;
   double tmp60_ = mLocEbner_State_0_0*mLocEbner_State_0_0;
   double tmp61_ = tmp60_*0.666667;
   double tmp62_ = (tmp59_)*(tmp59_);
   double tmp63_ = tmp62_-tmp61_;
   double tmp64_ = (tmp43_)*(tmp43_);
   double tmp65_ = tmp64_-tmp61_;
   double tmp66_ = mCompCoord[3];
   double tmp67_ = 1+tmp66_;
   double tmp68_ = mCompCoord[4];
   double tmp69_ = (tmp41_)*(tmp43_);
   double tmp70_ = mCompCoord[5];
   double tmp71_ = tmp70_*2;
   double tmp72_ = mCompCoord[6];
   double tmp73_ = (tmp57_)*(tmp59_);
   double tmp74_ = mCompCoord[7];
   double tmp75_ = mCompCoord[9];
   double tmp76_ = tmp73_+tmp73_;
   double tmp77_ = tmp75_*(tmp43_);
   double tmp78_ = mCompCoord[11];
   double tmp79_ = tmp69_+tmp69_;
   double tmp80_ = tmp78_*(tmp59_);
   double tmp81_ = mCompCoord[13];
   double tmp82_ = tmp81_*(tmp65_);
   double tmp83_ = tmp43_+tmp43_;
   double tmp84_ = tmp59_+tmp59_;
   double tmp85_ = (tmp43_)*(tmp59_);
   double tmp86_ = -(1);
   double tmp87_ = tmp86_*tmp3_;
   double tmp88_ = -(tmp4_);
   double tmp89_ = tmp87_*tmp11_;
   double tmp90_ = tmp88_*tmp10_;
   double tmp91_ = tmp89_*tmp12_;
   double tmp92_ = tmp90_+tmp91_;
   double tmp93_ = (tmp92_)*(tmp8_);
   double tmp94_ = tmp87_*tmp10_;
   double tmp95_ = tmp94_+tmp22_;
   double tmp96_ = (tmp95_)*(tmp14_);
   double tmp97_ = tmp93_+tmp96_;
   double tmp98_ = ElSquare(tmp32_);
   double tmp99_ = tmp87_*tmp2_;
   double tmp100_ = tmp99_*(tmp8_);
   double tmp101_ = tmp34_*(tmp14_);
   double tmp102_ = tmp100_+tmp101_;
   double tmp103_ = (tmp102_)*(tmp32_);
   double tmp104_ = (tmp40_)*(tmp97_);
   double tmp105_ = tmp103_-tmp104_;
   double tmp106_ = (tmp105_)/tmp98_;
   double tmp107_ = (tmp106_)*tmp17_;
   double tmp108_ = tmp107_*(tmp43_);
   double tmp109_ = tmp88_*tmp12_;
   double tmp110_ = tmp89_*tmp9_;
   double tmp111_ = tmp109_+tmp110_;
   double tmp112_ = (tmp111_)*(tmp8_);
   double tmp113_ = tmp87_*tmp12_;
   double tmp114_ = tmp113_+tmp46_;
   double tmp115_ = (tmp114_)*(tmp14_);
   double tmp116_ = tmp112_+tmp115_;
   double tmp117_ = (tmp116_)*(tmp32_);
   double tmp118_ = (tmp56_)*(tmp97_);
   double tmp119_ = tmp117_-tmp118_;
   double tmp120_ = (tmp119_)/tmp98_;
   double tmp121_ = (tmp120_)*tmp17_;
   double tmp122_ = tmp121_*(tmp59_);
   double tmp123_ = tmp122_+tmp122_;
   double tmp124_ = tmp108_+tmp108_;
   double tmp125_ = tmp86_*tmp5_;
   double tmp126_ = -(tmp2_);
   double tmp127_ = tmp126_*tmp4_;
   double tmp128_ = tmp126_*tmp3_;
   double tmp129_ = tmp127_*tmp12_;
   double tmp130_ = tmp129_*(tmp8_);
   double tmp131_ = tmp128_*tmp12_;
   double tmp132_ = tmp131_*(tmp14_);
   double tmp133_ = tmp130_+tmp132_;
   double tmp134_ = tmp125_*tmp12_;
   double tmp135_ = tmp134_*(tmp16_);
   double tmp136_ = tmp133_+tmp135_;
   double tmp137_ = tmp125_*tmp4_;
   double tmp138_ = tmp137_*(tmp8_);
   double tmp139_ = tmp125_*tmp3_;
   double tmp140_ = tmp139_*(tmp14_);
   double tmp141_ = tmp138_+tmp140_;
   double tmp142_ = tmp2_*(tmp16_);
   double tmp143_ = tmp141_+tmp142_;
   double tmp144_ = (tmp143_)*(tmp32_);
   double tmp145_ = (tmp40_)*(tmp136_);
   double tmp146_ = tmp144_-tmp145_;
   double tmp147_ = (tmp146_)/tmp98_;
   double tmp148_ = (tmp147_)*tmp17_;
   double tmp149_ = tmp148_*(tmp43_);
   double tmp150_ = tmp127_*tmp9_;
   double tmp151_ = tmp150_*(tmp8_);
   double tmp152_ = tmp128_*tmp9_;
   double tmp153_ = tmp152_*(tmp14_);
   double tmp154_ = tmp151_+tmp153_;
   double tmp155_ = tmp125_*tmp9_;
   double tmp156_ = tmp155_*(tmp16_);
   double tmp157_ = tmp154_+tmp156_;
   double tmp158_ = (tmp157_)*(tmp32_);
   double tmp159_ = (tmp56_)*(tmp136_);
   double tmp160_ = tmp158_-tmp159_;
   double tmp161_ = (tmp160_)/tmp98_;
   double tmp162_ = (tmp161_)*tmp17_;
   double tmp163_ = tmp162_*(tmp59_);
   double tmp164_ = tmp163_+tmp163_;
   double tmp165_ = tmp149_+tmp149_;
   double tmp166_ = -(tmp12_);
   double tmp167_ = tmp86_*tmp9_;
   double tmp168_ = tmp166_*tmp18_;
   double tmp169_ = tmp167_*tmp19_;
   double tmp170_ = tmp168_+tmp169_;
   double tmp171_ = (tmp170_)*(tmp8_);
   double tmp172_ = tmp166_*tmp4_;
   double tmp173_ = tmp167_*tmp20_;
   double tmp174_ = tmp172_+tmp173_;
   double tmp175_ = (tmp174_)*(tmp14_);
   double tmp176_ = tmp171_+tmp175_;
   double tmp177_ = tmp167_*tmp2_;
   double tmp178_ = tmp177_*(tmp16_);
   double tmp179_ = tmp176_+tmp178_;
   double tmp180_ = (tmp40_)*(tmp179_);
   double tmp181_ = -(tmp180_);
   double tmp182_ = tmp181_/tmp98_;
   double tmp183_ = (tmp182_)*tmp17_;
   double tmp184_ = tmp183_*(tmp43_);
   double tmp185_ = tmp167_*tmp18_;
   double tmp186_ = tmp12_*tmp19_;
   double tmp187_ = tmp185_+tmp186_;
   double tmp188_ = (tmp187_)*(tmp8_);
   double tmp189_ = tmp167_*tmp4_;
   double tmp190_ = tmp12_*tmp20_;
   double tmp191_ = tmp189_+tmp190_;
   double tmp192_ = (tmp191_)*(tmp14_);
   double tmp193_ = tmp188_+tmp192_;
   double tmp194_ = tmp12_*tmp2_;
   double tmp195_ = tmp194_*(tmp16_);
   double tmp196_ = tmp193_+tmp195_;
   double tmp197_ = (tmp196_)*(tmp32_);
   double tmp198_ = (tmp56_)*(tmp179_);
   double tmp199_ = tmp197_-tmp198_;
   double tmp200_ = (tmp199_)/tmp98_;
   double tmp201_ = (tmp200_)*tmp17_;
   double tmp202_ = tmp201_*(tmp59_);
   double tmp203_ = tmp202_+tmp202_;
   double tmp204_ = tmp184_+tmp184_;
   double tmp205_ = tmp86_*(tmp23_);
   double tmp206_ = tmp86_*tmp34_;
   double tmp207_ = tmp206_*(tmp32_);
   double tmp208_ = (tmp40_)*tmp205_;
   double tmp209_ = tmp207_-tmp208_;
   double tmp210_ = (tmp209_)/tmp98_;
   double tmp211_ = (tmp210_)*tmp17_;
   double tmp212_ = tmp211_*(tmp43_);
   double tmp213_ = tmp86_*(tmp47_);
   double tmp214_ = tmp213_*(tmp32_);
   double tmp215_ = (tmp56_)*tmp205_;
   double tmp216_ = tmp214_-tmp215_;
   double tmp217_ = (tmp216_)/tmp98_;
   double tmp218_ = (tmp217_)*tmp17_;
   double tmp219_ = tmp218_*(tmp59_);
   double tmp220_ = tmp219_+tmp219_;
   double tmp221_ = tmp212_+tmp212_;
   double tmp222_ = tmp86_*(tmp27_);
   double tmp223_ = tmp86_*tmp36_;
   double tmp224_ = tmp223_*(tmp32_);
   double tmp225_ = (tmp40_)*tmp222_;
   double tmp226_ = tmp224_-tmp225_;
   double tmp227_ = (tmp226_)/tmp98_;
   double tmp228_ = (tmp227_)*tmp17_;
   double tmp229_ = tmp228_*(tmp43_);
   double tmp230_ = tmp86_*(tmp51_);
   double tmp231_ = tmp230_*(tmp32_);
   double tmp232_ = (tmp56_)*tmp222_;
   double tmp233_ = tmp231_-tmp232_;
   double tmp234_ = (tmp233_)/tmp98_;
   double tmp235_ = (tmp234_)*tmp17_;
   double tmp236_ = tmp235_*(tmp59_);
   double tmp237_ = tmp236_+tmp236_;
   double tmp238_ = tmp229_+tmp229_;
   double tmp239_ = tmp86_*tmp30_;
   double tmp240_ = tmp125_*(tmp32_);
   double tmp241_ = (tmp40_)*tmp239_;
   double tmp242_ = tmp240_-tmp241_;
   double tmp243_ = (tmp242_)/tmp98_;
   double tmp244_ = (tmp243_)*tmp17_;
   double tmp245_ = tmp244_*(tmp43_);
   double tmp246_ = tmp86_*tmp54_;
   double tmp247_ = tmp246_*(tmp32_);
   double tmp248_ = (tmp56_)*tmp239_;
   double tmp249_ = tmp247_-tmp248_;
   double tmp250_ = (tmp249_)/tmp98_;
   double tmp251_ = (tmp250_)*tmp17_;
   double tmp252_ = tmp251_*(tmp59_);
   double tmp253_ = tmp252_+tmp252_;
   double tmp254_ = tmp245_+tmp245_;

  mVal[0] = (((tmp67_)*(tmp43_)+tmp68_*(tmp59_))-tmp71_*(tmp65_)+tmp72_*tmp85_+tmp74_*(tmp63_)+tmp77_*(tmp63_)+tmp80_*(tmp65_)+tmp82_*(tmp63_))-mLocXIm;

  mCompDer[0][0] = ((tmp41_)*(tmp67_)+(tmp57_)*tmp68_)-(tmp79_)*tmp71_+((tmp41_)*(tmp59_)+(tmp57_)*(tmp43_))*tmp72_+(tmp76_)*tmp74_+(tmp41_)*tmp75_*(tmp63_)+(tmp76_)*tmp77_+(tmp57_)*tmp78_*(tmp65_)+(tmp79_)*tmp80_+(tmp79_)*tmp81_*(tmp63_)+(tmp76_)*tmp82_;
  mCompDer[0][1] = (tmp67_)-(tmp83_)*tmp71_+(tmp59_)*tmp72_+tmp75_*(tmp63_)+(tmp83_)*tmp80_+(tmp83_)*tmp81_*(tmp63_);
  mCompDer[0][2] = tmp68_+(tmp43_)*tmp72_+(tmp84_)*tmp74_+(tmp84_)*tmp77_+tmp78_*(tmp65_)+(tmp84_)*tmp82_;
  mCompDer[0][3] = tmp43_;
  mCompDer[0][4] = tmp59_;
  mCompDer[0][5] = -(2*(tmp65_));
  mCompDer[0][6] = tmp85_;
  mCompDer[0][7] = tmp63_;
  mCompDer[0][8] = 0;
  mCompDer[0][9] = (tmp43_)*(tmp63_);
  mCompDer[0][10] = 0;
  mCompDer[0][11] = (tmp59_)*(tmp65_);
  mCompDer[0][12] = 0;
  mCompDer[0][13] = (tmp65_)*(tmp63_);
  mCompDer[0][14] = 0;
  mCompDer[0][15] = (tmp107_*(tmp67_)+tmp121_*tmp68_)-(tmp124_)*tmp71_+(tmp107_*(tmp59_)+tmp121_*(tmp43_))*tmp72_+(tmp123_)*tmp74_+tmp107_*tmp75_*(tmp63_)+(tmp123_)*tmp77_+tmp121_*tmp78_*(tmp65_)+(tmp124_)*tmp80_+(tmp124_)*tmp81_*(tmp63_)+(tmp123_)*tmp82_;
  mCompDer[0][16] = (tmp148_*(tmp67_)+tmp162_*tmp68_)-(tmp165_)*tmp71_+(tmp148_*(tmp59_)+tmp162_*(tmp43_))*tmp72_+(tmp164_)*tmp74_+tmp148_*tmp75_*(tmp63_)+(tmp164_)*tmp77_+tmp162_*tmp78_*(tmp65_)+(tmp165_)*tmp80_+(tmp165_)*tmp81_*(tmp63_)+(tmp164_)*tmp82_;
  mCompDer[0][17] = (tmp183_*(tmp67_)+tmp201_*tmp68_)-(tmp204_)*tmp71_+(tmp183_*(tmp59_)+tmp201_*(tmp43_))*tmp72_+(tmp203_)*tmp74_+tmp183_*tmp75_*(tmp63_)+(tmp203_)*tmp77_+tmp201_*tmp78_*(tmp65_)+(tmp204_)*tmp80_+(tmp204_)*tmp81_*(tmp63_)+(tmp203_)*tmp82_;
  mCompDer[0][18] = (tmp211_*(tmp67_)+tmp218_*tmp68_)-(tmp221_)*tmp71_+(tmp211_*(tmp59_)+tmp218_*(tmp43_))*tmp72_+(tmp220_)*tmp74_+tmp211_*tmp75_*(tmp63_)+(tmp220_)*tmp77_+tmp218_*tmp78_*(tmp65_)+(tmp221_)*tmp80_+(tmp221_)*tmp81_*(tmp63_)+(tmp220_)*tmp82_;
  mCompDer[0][19] = (tmp228_*(tmp67_)+tmp235_*tmp68_)-(tmp238_)*tmp71_+(tmp228_*(tmp59_)+tmp235_*(tmp43_))*tmp72_+(tmp237_)*tmp74_+tmp228_*tmp75_*(tmp63_)+(tmp237_)*tmp77_+tmp235_*tmp78_*(tmp65_)+(tmp238_)*tmp80_+(tmp238_)*tmp81_*(tmp63_)+(tmp237_)*tmp82_;
  mCompDer[0][20] = (tmp244_*(tmp67_)+tmp251_*tmp68_)-(tmp254_)*tmp71_+(tmp244_*(tmp59_)+tmp251_*(tmp43_))*tmp72_+(tmp253_)*tmp74_+tmp244_*tmp75_*(tmp63_)+(tmp253_)*tmp77_+tmp251_*tmp78_*(tmp65_)+(tmp254_)*tmp80_+(tmp254_)*tmp81_*(tmp63_)+(tmp253_)*tmp82_;
}


void cEqAppui_X_M2CEbner::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_M2CEbner Has no Der Sec");
}

void cEqAppui_X_M2CEbner::SetEbner_State_0_0(double aVal){ mLocEbner_State_0_0 = aVal;}
void cEqAppui_X_M2CEbner::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_M2CEbner::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_M2CEbner::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_M2CEbner::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_M2CEbner::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Ebner_State_0_0") return & mLocEbner_State_0_0;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_M2CEbner::mTheAuto("cEqAppui_X_M2CEbner",cEqAppui_X_M2CEbner::Alloc);


cElCompiledFonc *  cEqAppui_X_M2CEbner::Alloc()
{  return new cEqAppui_X_M2CEbner();
}


