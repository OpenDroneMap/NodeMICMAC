// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_M2CDPol7.h"


cEqAppui_X_M2CDPol7::cEqAppui_X_M2CDPol7():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,72));
   AddIntRef (cIncIntervale("Orient",72,78));
   Close(false);
}



void cEqAppui_X_M2CDPol7::ComputeVal()
{
   double tmp0_ = mCompCoord[72];
   double tmp1_ = mCompCoord[74];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[73];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[75];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[76];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[77];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = tmp9_*tmp13_;
   double tmp21_ = tmp10_*tmp3_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp12_);
   double tmp24_ = tmp2_*tmp13_;
   double tmp25_ = tmp14_*tmp3_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp16_);
   double tmp28_ = tmp23_+tmp27_;
   double tmp29_ = tmp17_*tmp3_;
   double tmp30_ = tmp29_*(tmp19_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = tmp9_*tmp3_;
   double tmp33_ = tmp10_*tmp8_;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = (tmp34_)*(tmp12_);
   double tmp36_ = tmp2_*tmp3_;
   double tmp37_ = tmp14_*tmp8_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = (tmp38_)*(tmp16_);
   double tmp40_ = tmp35_+tmp39_;
   double tmp41_ = tmp17_*tmp8_;
   double tmp42_ = tmp41_*(tmp19_);
   double tmp43_ = tmp40_+tmp42_;
   double tmp44_ = (tmp43_)/(tmp31_);
   double tmp45_ = tmp2_*tmp17_;
   double tmp46_ = tmp45_*(tmp12_);
   double tmp47_ = tmp4_*tmp17_;
   double tmp48_ = tmp47_*(tmp16_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp6_*(tmp19_);
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)/(tmp31_);
   double tmp53_ = ElSquare(tmp44_);
   double tmp54_ = ElSquare(tmp52_);
   double tmp55_ = VCube(tmp44_);
   double tmp56_ = VCube(tmp52_);
   double tmp57_ = VPow4(tmp44_);
   double tmp58_ = VPow4(tmp52_);
   double tmp59_ = VPow5(tmp44_);
   double tmp60_ = VPow5(tmp52_);
   double tmp61_ = VPow6(tmp44_);
   double tmp62_ = VPow6(tmp52_);

  mVal[0] = (mCompCoord[0]+mCompCoord[1]*(tmp44_)+mCompCoord[2]*(tmp52_)+mCompCoord[3]*tmp53_+mCompCoord[4]*(tmp52_)*(tmp44_)+mCompCoord[5]*tmp54_+mCompCoord[6]*tmp55_+mCompCoord[7]*(tmp52_)*tmp53_+mCompCoord[8]*tmp54_*(tmp44_)+mCompCoord[9]*tmp56_+mCompCoord[10]*tmp57_+mCompCoord[11]*(tmp52_)*tmp55_+mCompCoord[12]*tmp54_*tmp53_+mCompCoord[13]*tmp56_*(tmp44_)+mCompCoord[14]*tmp58_+mCompCoord[15]*tmp59_+mCompCoord[16]*(tmp52_)*tmp57_+mCompCoord[17]*tmp54_*tmp55_+mCompCoord[18]*tmp56_*tmp53_+mCompCoord[19]*tmp58_*(tmp44_)+mCompCoord[20]*tmp60_+mCompCoord[21]*tmp61_+mCompCoord[22]*(tmp52_)*tmp59_+mCompCoord[23]*tmp54_*tmp57_+mCompCoord[24]*tmp56_*tmp55_+mCompCoord[25]*tmp58_*tmp53_+mCompCoord[26]*tmp60_*(tmp44_)+mCompCoord[27]*tmp62_+mCompCoord[28]*VPow7(tmp44_)+mCompCoord[29]*(tmp52_)*tmp61_+mCompCoord[30]*tmp54_*tmp59_+mCompCoord[31]*tmp56_*tmp57_+mCompCoord[32]*tmp58_*tmp55_+mCompCoord[33]*tmp60_*tmp53_+mCompCoord[34]*tmp62_*(tmp44_)+mCompCoord[35]*VPow7(tmp52_))-mLocXIm;

}


void cEqAppui_X_M2CDPol7::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[72];
   double tmp1_ = mCompCoord[74];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[73];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[75];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[76];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[77];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = tmp9_*tmp13_;
   double tmp21_ = tmp10_*tmp3_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = (tmp22_)*(tmp12_);
   double tmp24_ = tmp2_*tmp13_;
   double tmp25_ = tmp14_*tmp3_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp16_);
   double tmp28_ = tmp23_+tmp27_;
   double tmp29_ = tmp17_*tmp3_;
   double tmp30_ = tmp29_*(tmp19_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = tmp9_*tmp3_;
   double tmp33_ = tmp10_*tmp8_;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = (tmp34_)*(tmp12_);
   double tmp36_ = tmp2_*tmp3_;
   double tmp37_ = tmp14_*tmp8_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = (tmp38_)*(tmp16_);
   double tmp40_ = tmp35_+tmp39_;
   double tmp41_ = tmp17_*tmp8_;
   double tmp42_ = tmp41_*(tmp19_);
   double tmp43_ = tmp40_+tmp42_;
   double tmp44_ = (tmp43_)/(tmp31_);
   double tmp45_ = tmp2_*tmp17_;
   double tmp46_ = tmp45_*(tmp12_);
   double tmp47_ = tmp4_*tmp17_;
   double tmp48_ = tmp47_*(tmp16_);
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp6_*(tmp19_);
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)/(tmp31_);
   double tmp53_ = ElSquare(tmp44_);
   double tmp54_ = ElSquare(tmp52_);
   double tmp55_ = VCube(tmp44_);
   double tmp56_ = VCube(tmp52_);
   double tmp57_ = VPow4(tmp44_);
   double tmp58_ = VPow4(tmp52_);
   double tmp59_ = VPow5(tmp44_);
   double tmp60_ = VPow5(tmp52_);
   double tmp61_ = VPow6(tmp44_);
   double tmp62_ = VPow6(tmp52_);
   double tmp63_ = VPow7(tmp44_);
   double tmp64_ = VPow7(tmp52_);
   double tmp65_ = -(1);
   double tmp66_ = tmp65_*tmp4_;
   double tmp67_ = -(tmp2_);
   double tmp68_ = tmp66_*tmp7_;
   double tmp69_ = mCompCoord[1];
   double tmp70_ = tmp67_*tmp13_;
   double tmp71_ = tmp68_*tmp3_;
   double tmp72_ = tmp70_+tmp71_;
   double tmp73_ = (tmp72_)*(tmp12_);
   double tmp74_ = tmp66_*tmp13_;
   double tmp75_ = tmp74_+tmp21_;
   double tmp76_ = (tmp75_)*(tmp16_);
   double tmp77_ = tmp73_+tmp76_;
   double tmp78_ = ElSquare(tmp31_);
   double tmp79_ = mCompCoord[2];
   double tmp80_ = tmp67_*tmp3_;
   double tmp81_ = tmp68_*tmp8_;
   double tmp82_ = tmp80_+tmp81_;
   double tmp83_ = (tmp82_)*(tmp12_);
   double tmp84_ = tmp66_*tmp3_;
   double tmp85_ = tmp84_+tmp33_;
   double tmp86_ = (tmp85_)*(tmp16_);
   double tmp87_ = tmp83_+tmp86_;
   double tmp88_ = (tmp87_)*(tmp31_);
   double tmp89_ = (tmp43_)*(tmp77_);
   double tmp90_ = tmp88_-tmp89_;
   double tmp91_ = (tmp90_)/tmp78_;
   double tmp92_ = mCompCoord[3];
   double tmp93_ = tmp66_*tmp17_;
   double tmp94_ = tmp93_*(tmp12_);
   double tmp95_ = tmp45_*(tmp16_);
   double tmp96_ = tmp94_+tmp95_;
   double tmp97_ = (tmp96_)*(tmp31_);
   double tmp98_ = (tmp51_)*(tmp77_);
   double tmp99_ = tmp97_-tmp98_;
   double tmp100_ = (tmp99_)/tmp78_;
   double tmp101_ = mCompCoord[4];
   double tmp102_ = tmp101_*(tmp52_);
   double tmp103_ = mCompCoord[5];
   double tmp104_ = mCompCoord[6];
   double tmp105_ = mCompCoord[7];
   double tmp106_ = 2*(tmp91_);
   double tmp107_ = tmp106_*(tmp44_);
   double tmp108_ = tmp105_*(tmp52_);
   double tmp109_ = 2*(tmp100_);
   double tmp110_ = tmp109_*(tmp52_);
   double tmp111_ = mCompCoord[8];
   double tmp112_ = tmp111_*tmp54_;
   double tmp113_ = mCompCoord[9];
   double tmp114_ = mCompCoord[10];
   double tmp115_ = mCompCoord[11];
   double tmp116_ = 3*(tmp91_);
   double tmp117_ = tmp116_*tmp53_;
   double tmp118_ = tmp115_*(tmp52_);
   double tmp119_ = mCompCoord[12];
   double tmp120_ = tmp119_*tmp54_;
   double tmp121_ = 3*(tmp100_);
   double tmp122_ = tmp121_*tmp54_;
   double tmp123_ = mCompCoord[13];
   double tmp124_ = tmp123_*tmp56_;
   double tmp125_ = mCompCoord[14];
   double tmp126_ = mCompCoord[15];
   double tmp127_ = mCompCoord[16];
   double tmp128_ = 4*(tmp91_);
   double tmp129_ = tmp128_*tmp55_;
   double tmp130_ = tmp127_*(tmp52_);
   double tmp131_ = mCompCoord[17];
   double tmp132_ = tmp131_*tmp54_;
   double tmp133_ = mCompCoord[18];
   double tmp134_ = tmp133_*tmp56_;
   double tmp135_ = 4*(tmp100_);
   double tmp136_ = tmp135_*tmp56_;
   double tmp137_ = mCompCoord[19];
   double tmp138_ = tmp137_*tmp58_;
   double tmp139_ = mCompCoord[20];
   double tmp140_ = mCompCoord[21];
   double tmp141_ = mCompCoord[22];
   double tmp142_ = 5*(tmp91_);
   double tmp143_ = tmp142_*tmp57_;
   double tmp144_ = tmp141_*(tmp52_);
   double tmp145_ = mCompCoord[23];
   double tmp146_ = tmp145_*tmp54_;
   double tmp147_ = mCompCoord[24];
   double tmp148_ = tmp147_*tmp56_;
   double tmp149_ = mCompCoord[25];
   double tmp150_ = tmp149_*tmp58_;
   double tmp151_ = 5*(tmp100_);
   double tmp152_ = tmp151_*tmp58_;
   double tmp153_ = mCompCoord[26];
   double tmp154_ = tmp153_*tmp60_;
   double tmp155_ = mCompCoord[27];
   double tmp156_ = mCompCoord[28];
   double tmp157_ = mCompCoord[29];
   double tmp158_ = 6*(tmp91_);
   double tmp159_ = tmp158_*tmp59_;
   double tmp160_ = tmp157_*(tmp52_);
   double tmp161_ = mCompCoord[30];
   double tmp162_ = tmp161_*tmp54_;
   double tmp163_ = mCompCoord[31];
   double tmp164_ = tmp163_*tmp56_;
   double tmp165_ = mCompCoord[32];
   double tmp166_ = tmp165_*tmp58_;
   double tmp167_ = mCompCoord[33];
   double tmp168_ = tmp167_*tmp60_;
   double tmp169_ = 6*(tmp100_);
   double tmp170_ = tmp169_*tmp60_;
   double tmp171_ = mCompCoord[34];
   double tmp172_ = tmp171_*tmp62_;
   double tmp173_ = mCompCoord[35];
   double tmp174_ = -(tmp17_);
   double tmp175_ = tmp174_*tmp2_;
   double tmp176_ = tmp174_*tmp4_;
   double tmp177_ = tmp65_*tmp6_;
   double tmp178_ = tmp175_*tmp3_;
   double tmp179_ = tmp178_*(tmp12_);
   double tmp180_ = tmp176_*tmp3_;
   double tmp181_ = tmp180_*(tmp16_);
   double tmp182_ = tmp179_+tmp181_;
   double tmp183_ = tmp177_*tmp3_;
   double tmp184_ = tmp183_*(tmp19_);
   double tmp185_ = tmp182_+tmp184_;
   double tmp186_ = tmp175_*tmp8_;
   double tmp187_ = tmp186_*(tmp12_);
   double tmp188_ = tmp176_*tmp8_;
   double tmp189_ = tmp188_*(tmp16_);
   double tmp190_ = tmp187_+tmp189_;
   double tmp191_ = tmp177_*tmp8_;
   double tmp192_ = tmp191_*(tmp19_);
   double tmp193_ = tmp190_+tmp192_;
   double tmp194_ = (tmp193_)*(tmp31_);
   double tmp195_ = (tmp43_)*(tmp185_);
   double tmp196_ = tmp194_-tmp195_;
   double tmp197_ = (tmp196_)/tmp78_;
   double tmp198_ = tmp177_*tmp2_;
   double tmp199_ = tmp198_*(tmp12_);
   double tmp200_ = tmp177_*tmp4_;
   double tmp201_ = tmp200_*(tmp16_);
   double tmp202_ = tmp199_+tmp201_;
   double tmp203_ = tmp17_*(tmp19_);
   double tmp204_ = tmp202_+tmp203_;
   double tmp205_ = (tmp204_)*(tmp31_);
   double tmp206_ = (tmp51_)*(tmp185_);
   double tmp207_ = tmp205_-tmp206_;
   double tmp208_ = (tmp207_)/tmp78_;
   double tmp209_ = 2*(tmp197_);
   double tmp210_ = tmp209_*(tmp44_);
   double tmp211_ = 2*(tmp208_);
   double tmp212_ = tmp211_*(tmp52_);
   double tmp213_ = 3*(tmp197_);
   double tmp214_ = tmp213_*tmp53_;
   double tmp215_ = 3*(tmp208_);
   double tmp216_ = tmp215_*tmp54_;
   double tmp217_ = 4*(tmp197_);
   double tmp218_ = tmp217_*tmp55_;
   double tmp219_ = 4*(tmp208_);
   double tmp220_ = tmp219_*tmp56_;
   double tmp221_ = 5*(tmp197_);
   double tmp222_ = tmp221_*tmp57_;
   double tmp223_ = 5*(tmp208_);
   double tmp224_ = tmp223_*tmp58_;
   double tmp225_ = 6*(tmp197_);
   double tmp226_ = tmp225_*tmp59_;
   double tmp227_ = 6*(tmp208_);
   double tmp228_ = tmp227_*tmp60_;
   double tmp229_ = tmp65_*tmp8_;
   double tmp230_ = -(tmp3_);
   double tmp231_ = tmp230_*tmp9_;
   double tmp232_ = tmp229_*tmp10_;
   double tmp233_ = tmp231_+tmp232_;
   double tmp234_ = (tmp233_)*(tmp12_);
   double tmp235_ = tmp230_*tmp2_;
   double tmp236_ = tmp229_*tmp14_;
   double tmp237_ = tmp235_+tmp236_;
   double tmp238_ = (tmp237_)*(tmp16_);
   double tmp239_ = tmp234_+tmp238_;
   double tmp240_ = tmp229_*tmp17_;
   double tmp241_ = tmp240_*(tmp19_);
   double tmp242_ = tmp239_+tmp241_;
   double tmp243_ = tmp229_*tmp9_;
   double tmp244_ = tmp3_*tmp10_;
   double tmp245_ = tmp243_+tmp244_;
   double tmp246_ = (tmp245_)*(tmp12_);
   double tmp247_ = tmp229_*tmp2_;
   double tmp248_ = tmp3_*tmp14_;
   double tmp249_ = tmp247_+tmp248_;
   double tmp250_ = (tmp249_)*(tmp16_);
   double tmp251_ = tmp246_+tmp250_;
   double tmp252_ = tmp3_*tmp17_;
   double tmp253_ = tmp252_*(tmp19_);
   double tmp254_ = tmp251_+tmp253_;
   double tmp255_ = (tmp254_)*(tmp31_);
   double tmp256_ = (tmp43_)*(tmp242_);
   double tmp257_ = tmp255_-tmp256_;
   double tmp258_ = (tmp257_)/tmp78_;
   double tmp259_ = (tmp51_)*(tmp242_);
   double tmp260_ = -(tmp259_);
   double tmp261_ = tmp260_/tmp78_;
   double tmp262_ = 2*(tmp258_);
   double tmp263_ = tmp262_*(tmp44_);
   double tmp264_ = 2*(tmp261_);
   double tmp265_ = tmp264_*(tmp52_);
   double tmp266_ = 3*(tmp258_);
   double tmp267_ = tmp266_*tmp53_;
   double tmp268_ = 3*(tmp261_);
   double tmp269_ = tmp268_*tmp54_;
   double tmp270_ = 4*(tmp258_);
   double tmp271_ = tmp270_*tmp55_;
   double tmp272_ = 4*(tmp261_);
   double tmp273_ = tmp272_*tmp56_;
   double tmp274_ = 5*(tmp258_);
   double tmp275_ = tmp274_*tmp57_;
   double tmp276_ = 5*(tmp261_);
   double tmp277_ = tmp276_*tmp58_;
   double tmp278_ = 6*(tmp258_);
   double tmp279_ = tmp278_*tmp59_;
   double tmp280_ = 6*(tmp261_);
   double tmp281_ = tmp280_*tmp60_;
   double tmp282_ = tmp65_*(tmp22_);
   double tmp283_ = tmp65_*(tmp34_);
   double tmp284_ = tmp283_*(tmp31_);
   double tmp285_ = (tmp43_)*tmp282_;
   double tmp286_ = tmp284_-tmp285_;
   double tmp287_ = (tmp286_)/tmp78_;
   double tmp288_ = tmp65_*tmp45_;
   double tmp289_ = tmp288_*(tmp31_);
   double tmp290_ = (tmp51_)*tmp282_;
   double tmp291_ = tmp289_-tmp290_;
   double tmp292_ = (tmp291_)/tmp78_;
   double tmp293_ = 2*(tmp287_);
   double tmp294_ = tmp293_*(tmp44_);
   double tmp295_ = 2*(tmp292_);
   double tmp296_ = tmp295_*(tmp52_);
   double tmp297_ = 3*(tmp287_);
   double tmp298_ = tmp297_*tmp53_;
   double tmp299_ = 3*(tmp292_);
   double tmp300_ = tmp299_*tmp54_;
   double tmp301_ = 4*(tmp287_);
   double tmp302_ = tmp301_*tmp55_;
   double tmp303_ = 4*(tmp292_);
   double tmp304_ = tmp303_*tmp56_;
   double tmp305_ = 5*(tmp287_);
   double tmp306_ = tmp305_*tmp57_;
   double tmp307_ = 5*(tmp292_);
   double tmp308_ = tmp307_*tmp58_;
   double tmp309_ = 6*(tmp287_);
   double tmp310_ = tmp309_*tmp59_;
   double tmp311_ = 6*(tmp292_);
   double tmp312_ = tmp311_*tmp60_;
   double tmp313_ = tmp65_*(tmp26_);
   double tmp314_ = tmp65_*(tmp38_);
   double tmp315_ = tmp314_*(tmp31_);
   double tmp316_ = (tmp43_)*tmp313_;
   double tmp317_ = tmp315_-tmp316_;
   double tmp318_ = (tmp317_)/tmp78_;
   double tmp319_ = tmp65_*tmp47_;
   double tmp320_ = tmp319_*(tmp31_);
   double tmp321_ = (tmp51_)*tmp313_;
   double tmp322_ = tmp320_-tmp321_;
   double tmp323_ = (tmp322_)/tmp78_;
   double tmp324_ = 2*(tmp318_);
   double tmp325_ = tmp324_*(tmp44_);
   double tmp326_ = 2*(tmp323_);
   double tmp327_ = tmp326_*(tmp52_);
   double tmp328_ = 3*(tmp318_);
   double tmp329_ = tmp328_*tmp53_;
   double tmp330_ = 3*(tmp323_);
   double tmp331_ = tmp330_*tmp54_;
   double tmp332_ = 4*(tmp318_);
   double tmp333_ = tmp332_*tmp55_;
   double tmp334_ = 4*(tmp323_);
   double tmp335_ = tmp334_*tmp56_;
   double tmp336_ = 5*(tmp318_);
   double tmp337_ = tmp336_*tmp57_;
   double tmp338_ = 5*(tmp323_);
   double tmp339_ = tmp338_*tmp58_;
   double tmp340_ = 6*(tmp318_);
   double tmp341_ = tmp340_*tmp59_;
   double tmp342_ = 6*(tmp323_);
   double tmp343_ = tmp342_*tmp60_;
   double tmp344_ = tmp65_*tmp29_;
   double tmp345_ = tmp65_*tmp41_;
   double tmp346_ = tmp345_*(tmp31_);
   double tmp347_ = (tmp43_)*tmp344_;
   double tmp348_ = tmp346_-tmp347_;
   double tmp349_ = (tmp348_)/tmp78_;
   double tmp350_ = tmp177_*(tmp31_);
   double tmp351_ = (tmp51_)*tmp344_;
   double tmp352_ = tmp350_-tmp351_;
   double tmp353_ = (tmp352_)/tmp78_;
   double tmp354_ = 2*(tmp349_);
   double tmp355_ = tmp354_*(tmp44_);
   double tmp356_ = 2*(tmp353_);
   double tmp357_ = tmp356_*(tmp52_);
   double tmp358_ = 3*(tmp349_);
   double tmp359_ = tmp358_*tmp53_;
   double tmp360_ = 3*(tmp353_);
   double tmp361_ = tmp360_*tmp54_;
   double tmp362_ = 4*(tmp349_);
   double tmp363_ = tmp362_*tmp55_;
   double tmp364_ = 4*(tmp353_);
   double tmp365_ = tmp364_*tmp56_;
   double tmp366_ = 5*(tmp349_);
   double tmp367_ = tmp366_*tmp57_;
   double tmp368_ = 5*(tmp353_);
   double tmp369_ = tmp368_*tmp58_;
   double tmp370_ = 6*(tmp349_);
   double tmp371_ = tmp370_*tmp59_;
   double tmp372_ = 6*(tmp353_);
   double tmp373_ = tmp372_*tmp60_;

  mVal[0] = (mCompCoord[0]+tmp69_*(tmp44_)+tmp79_*(tmp52_)+tmp92_*tmp53_+tmp102_*(tmp44_)+tmp103_*tmp54_+tmp104_*tmp55_+tmp108_*tmp53_+tmp112_*(tmp44_)+tmp113_*tmp56_+tmp114_*tmp57_+tmp118_*tmp55_+tmp120_*tmp53_+tmp124_*(tmp44_)+tmp125_*tmp58_+tmp126_*tmp59_+tmp130_*tmp57_+tmp132_*tmp55_+tmp134_*tmp53_+tmp138_*(tmp44_)+tmp139_*tmp60_+tmp140_*tmp61_+tmp144_*tmp59_+tmp146_*tmp57_+tmp148_*tmp55_+tmp150_*tmp53_+tmp154_*(tmp44_)+tmp155_*tmp62_+tmp156_*tmp63_+tmp160_*tmp61_+tmp162_*tmp59_+tmp164_*tmp57_+tmp166_*tmp55_+tmp168_*tmp53_+tmp172_*(tmp44_)+tmp173_*tmp64_)-mLocXIm;

  mCompDer[0][0] = 1;
  mCompDer[0][1] = tmp44_;
  mCompDer[0][2] = tmp52_;
  mCompDer[0][3] = tmp53_;
  mCompDer[0][4] = (tmp52_)*(tmp44_);
  mCompDer[0][5] = tmp54_;
  mCompDer[0][6] = tmp55_;
  mCompDer[0][7] = (tmp52_)*tmp53_;
  mCompDer[0][8] = tmp54_*(tmp44_);
  mCompDer[0][9] = tmp56_;
  mCompDer[0][10] = tmp57_;
  mCompDer[0][11] = (tmp52_)*tmp55_;
  mCompDer[0][12] = tmp54_*tmp53_;
  mCompDer[0][13] = tmp56_*(tmp44_);
  mCompDer[0][14] = tmp58_;
  mCompDer[0][15] = tmp59_;
  mCompDer[0][16] = (tmp52_)*tmp57_;
  mCompDer[0][17] = tmp54_*tmp55_;
  mCompDer[0][18] = tmp56_*tmp53_;
  mCompDer[0][19] = tmp58_*(tmp44_);
  mCompDer[0][20] = tmp60_;
  mCompDer[0][21] = tmp61_;
  mCompDer[0][22] = (tmp52_)*tmp59_;
  mCompDer[0][23] = tmp54_*tmp57_;
  mCompDer[0][24] = tmp56_*tmp55_;
  mCompDer[0][25] = tmp58_*tmp53_;
  mCompDer[0][26] = tmp60_*(tmp44_);
  mCompDer[0][27] = tmp62_;
  mCompDer[0][28] = tmp63_;
  mCompDer[0][29] = (tmp52_)*tmp61_;
  mCompDer[0][30] = tmp54_*tmp59_;
  mCompDer[0][31] = tmp56_*tmp57_;
  mCompDer[0][32] = tmp58_*tmp55_;
  mCompDer[0][33] = tmp60_*tmp53_;
  mCompDer[0][34] = tmp62_*(tmp44_);
  mCompDer[0][35] = tmp64_;
  mCompDer[0][36] = 0;
  mCompDer[0][37] = 0;
  mCompDer[0][38] = 0;
  mCompDer[0][39] = 0;
  mCompDer[0][40] = 0;
  mCompDer[0][41] = 0;
  mCompDer[0][42] = 0;
  mCompDer[0][43] = 0;
  mCompDer[0][44] = 0;
  mCompDer[0][45] = 0;
  mCompDer[0][46] = 0;
  mCompDer[0][47] = 0;
  mCompDer[0][48] = 0;
  mCompDer[0][49] = 0;
  mCompDer[0][50] = 0;
  mCompDer[0][51] = 0;
  mCompDer[0][52] = 0;
  mCompDer[0][53] = 0;
  mCompDer[0][54] = 0;
  mCompDer[0][55] = 0;
  mCompDer[0][56] = 0;
  mCompDer[0][57] = 0;
  mCompDer[0][58] = 0;
  mCompDer[0][59] = 0;
  mCompDer[0][60] = 0;
  mCompDer[0][61] = 0;
  mCompDer[0][62] = 0;
  mCompDer[0][63] = 0;
  mCompDer[0][64] = 0;
  mCompDer[0][65] = 0;
  mCompDer[0][66] = 0;
  mCompDer[0][67] = 0;
  mCompDer[0][68] = 0;
  mCompDer[0][69] = 0;
  mCompDer[0][70] = 0;
  mCompDer[0][71] = 0;
  mCompDer[0][72] = (tmp91_)*tmp69_+(tmp100_)*tmp79_+tmp107_*tmp92_+(tmp100_)*tmp101_*(tmp44_)+(tmp91_)*tmp102_+tmp110_*tmp103_+tmp117_*tmp104_+(tmp100_)*tmp105_*tmp53_+tmp107_*tmp108_+tmp110_*tmp111_*(tmp44_)+(tmp91_)*tmp112_+tmp122_*tmp113_+tmp129_*tmp114_+(tmp100_)*tmp115_*tmp55_+tmp117_*tmp118_+tmp110_*tmp119_*tmp53_+tmp107_*tmp120_+tmp122_*tmp123_*(tmp44_)+(tmp91_)*tmp124_+tmp136_*tmp125_+tmp143_*tmp126_+(tmp100_)*tmp127_*tmp57_+tmp129_*tmp130_+tmp110_*tmp131_*tmp55_+tmp117_*tmp132_+tmp122_*tmp133_*tmp53_+tmp107_*tmp134_+tmp136_*tmp137_*(tmp44_)+(tmp91_)*tmp138_+tmp152_*tmp139_+tmp159_*tmp140_+(tmp100_)*tmp141_*tmp59_+tmp143_*tmp144_+tmp110_*tmp145_*tmp57_+tmp129_*tmp146_+tmp122_*tmp147_*tmp55_+tmp117_*tmp148_+tmp136_*tmp149_*tmp53_+tmp107_*tmp150_+tmp152_*tmp153_*(tmp44_)+(tmp91_)*tmp154_+tmp170_*tmp155_+7*(tmp91_)*tmp61_*tmp156_+(tmp100_)*tmp157_*tmp61_+tmp159_*tmp160_+tmp110_*tmp161_*tmp59_+tmp143_*tmp162_+tmp122_*tmp163_*tmp57_+tmp129_*tmp164_+tmp136_*tmp165_*tmp55_+tmp117_*tmp166_+tmp152_*tmp167_*tmp53_+tmp107_*tmp168_+tmp170_*tmp171_*(tmp44_)+(tmp91_)*tmp172_+7*(tmp100_)*tmp62_*tmp173_;
  mCompDer[0][73] = (tmp197_)*tmp69_+(tmp208_)*tmp79_+tmp210_*tmp92_+(tmp208_)*tmp101_*(tmp44_)+(tmp197_)*tmp102_+tmp212_*tmp103_+tmp214_*tmp104_+(tmp208_)*tmp105_*tmp53_+tmp210_*tmp108_+tmp212_*tmp111_*(tmp44_)+(tmp197_)*tmp112_+tmp216_*tmp113_+tmp218_*tmp114_+(tmp208_)*tmp115_*tmp55_+tmp214_*tmp118_+tmp212_*tmp119_*tmp53_+tmp210_*tmp120_+tmp216_*tmp123_*(tmp44_)+(tmp197_)*tmp124_+tmp220_*tmp125_+tmp222_*tmp126_+(tmp208_)*tmp127_*tmp57_+tmp218_*tmp130_+tmp212_*tmp131_*tmp55_+tmp214_*tmp132_+tmp216_*tmp133_*tmp53_+tmp210_*tmp134_+tmp220_*tmp137_*(tmp44_)+(tmp197_)*tmp138_+tmp224_*tmp139_+tmp226_*tmp140_+(tmp208_)*tmp141_*tmp59_+tmp222_*tmp144_+tmp212_*tmp145_*tmp57_+tmp218_*tmp146_+tmp216_*tmp147_*tmp55_+tmp214_*tmp148_+tmp220_*tmp149_*tmp53_+tmp210_*tmp150_+tmp224_*tmp153_*(tmp44_)+(tmp197_)*tmp154_+tmp228_*tmp155_+7*(tmp197_)*tmp61_*tmp156_+(tmp208_)*tmp157_*tmp61_+tmp226_*tmp160_+tmp212_*tmp161_*tmp59_+tmp222_*tmp162_+tmp216_*tmp163_*tmp57_+tmp218_*tmp164_+tmp220_*tmp165_*tmp55_+tmp214_*tmp166_+tmp224_*tmp167_*tmp53_+tmp210_*tmp168_+tmp228_*tmp171_*(tmp44_)+(tmp197_)*tmp172_+7*(tmp208_)*tmp62_*tmp173_;
  mCompDer[0][74] = (tmp258_)*tmp69_+(tmp261_)*tmp79_+tmp263_*tmp92_+(tmp261_)*tmp101_*(tmp44_)+(tmp258_)*tmp102_+tmp265_*tmp103_+tmp267_*tmp104_+(tmp261_)*tmp105_*tmp53_+tmp263_*tmp108_+tmp265_*tmp111_*(tmp44_)+(tmp258_)*tmp112_+tmp269_*tmp113_+tmp271_*tmp114_+(tmp261_)*tmp115_*tmp55_+tmp267_*tmp118_+tmp265_*tmp119_*tmp53_+tmp263_*tmp120_+tmp269_*tmp123_*(tmp44_)+(tmp258_)*tmp124_+tmp273_*tmp125_+tmp275_*tmp126_+(tmp261_)*tmp127_*tmp57_+tmp271_*tmp130_+tmp265_*tmp131_*tmp55_+tmp267_*tmp132_+tmp269_*tmp133_*tmp53_+tmp263_*tmp134_+tmp273_*tmp137_*(tmp44_)+(tmp258_)*tmp138_+tmp277_*tmp139_+tmp279_*tmp140_+(tmp261_)*tmp141_*tmp59_+tmp275_*tmp144_+tmp265_*tmp145_*tmp57_+tmp271_*tmp146_+tmp269_*tmp147_*tmp55_+tmp267_*tmp148_+tmp273_*tmp149_*tmp53_+tmp263_*tmp150_+tmp277_*tmp153_*(tmp44_)+(tmp258_)*tmp154_+tmp281_*tmp155_+7*(tmp258_)*tmp61_*tmp156_+(tmp261_)*tmp157_*tmp61_+tmp279_*tmp160_+tmp265_*tmp161_*tmp59_+tmp275_*tmp162_+tmp269_*tmp163_*tmp57_+tmp271_*tmp164_+tmp273_*tmp165_*tmp55_+tmp267_*tmp166_+tmp277_*tmp167_*tmp53_+tmp263_*tmp168_+tmp281_*tmp171_*(tmp44_)+(tmp258_)*tmp172_+7*(tmp261_)*tmp62_*tmp173_;
  mCompDer[0][75] = (tmp287_)*tmp69_+(tmp292_)*tmp79_+tmp294_*tmp92_+(tmp292_)*tmp101_*(tmp44_)+(tmp287_)*tmp102_+tmp296_*tmp103_+tmp298_*tmp104_+(tmp292_)*tmp105_*tmp53_+tmp294_*tmp108_+tmp296_*tmp111_*(tmp44_)+(tmp287_)*tmp112_+tmp300_*tmp113_+tmp302_*tmp114_+(tmp292_)*tmp115_*tmp55_+tmp298_*tmp118_+tmp296_*tmp119_*tmp53_+tmp294_*tmp120_+tmp300_*tmp123_*(tmp44_)+(tmp287_)*tmp124_+tmp304_*tmp125_+tmp306_*tmp126_+(tmp292_)*tmp127_*tmp57_+tmp302_*tmp130_+tmp296_*tmp131_*tmp55_+tmp298_*tmp132_+tmp300_*tmp133_*tmp53_+tmp294_*tmp134_+tmp304_*tmp137_*(tmp44_)+(tmp287_)*tmp138_+tmp308_*tmp139_+tmp310_*tmp140_+(tmp292_)*tmp141_*tmp59_+tmp306_*tmp144_+tmp296_*tmp145_*tmp57_+tmp302_*tmp146_+tmp300_*tmp147_*tmp55_+tmp298_*tmp148_+tmp304_*tmp149_*tmp53_+tmp294_*tmp150_+tmp308_*tmp153_*(tmp44_)+(tmp287_)*tmp154_+tmp312_*tmp155_+7*(tmp287_)*tmp61_*tmp156_+(tmp292_)*tmp157_*tmp61_+tmp310_*tmp160_+tmp296_*tmp161_*tmp59_+tmp306_*tmp162_+tmp300_*tmp163_*tmp57_+tmp302_*tmp164_+tmp304_*tmp165_*tmp55_+tmp298_*tmp166_+tmp308_*tmp167_*tmp53_+tmp294_*tmp168_+tmp312_*tmp171_*(tmp44_)+(tmp287_)*tmp172_+7*(tmp292_)*tmp62_*tmp173_;
  mCompDer[0][76] = (tmp318_)*tmp69_+(tmp323_)*tmp79_+tmp325_*tmp92_+(tmp323_)*tmp101_*(tmp44_)+(tmp318_)*tmp102_+tmp327_*tmp103_+tmp329_*tmp104_+(tmp323_)*tmp105_*tmp53_+tmp325_*tmp108_+tmp327_*tmp111_*(tmp44_)+(tmp318_)*tmp112_+tmp331_*tmp113_+tmp333_*tmp114_+(tmp323_)*tmp115_*tmp55_+tmp329_*tmp118_+tmp327_*tmp119_*tmp53_+tmp325_*tmp120_+tmp331_*tmp123_*(tmp44_)+(tmp318_)*tmp124_+tmp335_*tmp125_+tmp337_*tmp126_+(tmp323_)*tmp127_*tmp57_+tmp333_*tmp130_+tmp327_*tmp131_*tmp55_+tmp329_*tmp132_+tmp331_*tmp133_*tmp53_+tmp325_*tmp134_+tmp335_*tmp137_*(tmp44_)+(tmp318_)*tmp138_+tmp339_*tmp139_+tmp341_*tmp140_+(tmp323_)*tmp141_*tmp59_+tmp337_*tmp144_+tmp327_*tmp145_*tmp57_+tmp333_*tmp146_+tmp331_*tmp147_*tmp55_+tmp329_*tmp148_+tmp335_*tmp149_*tmp53_+tmp325_*tmp150_+tmp339_*tmp153_*(tmp44_)+(tmp318_)*tmp154_+tmp343_*tmp155_+7*(tmp318_)*tmp61_*tmp156_+(tmp323_)*tmp157_*tmp61_+tmp341_*tmp160_+tmp327_*tmp161_*tmp59_+tmp337_*tmp162_+tmp331_*tmp163_*tmp57_+tmp333_*tmp164_+tmp335_*tmp165_*tmp55_+tmp329_*tmp166_+tmp339_*tmp167_*tmp53_+tmp325_*tmp168_+tmp343_*tmp171_*(tmp44_)+(tmp318_)*tmp172_+7*(tmp323_)*tmp62_*tmp173_;
  mCompDer[0][77] = (tmp349_)*tmp69_+(tmp353_)*tmp79_+tmp355_*tmp92_+(tmp353_)*tmp101_*(tmp44_)+(tmp349_)*tmp102_+tmp357_*tmp103_+tmp359_*tmp104_+(tmp353_)*tmp105_*tmp53_+tmp355_*tmp108_+tmp357_*tmp111_*(tmp44_)+(tmp349_)*tmp112_+tmp361_*tmp113_+tmp363_*tmp114_+(tmp353_)*tmp115_*tmp55_+tmp359_*tmp118_+tmp357_*tmp119_*tmp53_+tmp355_*tmp120_+tmp361_*tmp123_*(tmp44_)+(tmp349_)*tmp124_+tmp365_*tmp125_+tmp367_*tmp126_+(tmp353_)*tmp127_*tmp57_+tmp363_*tmp130_+tmp357_*tmp131_*tmp55_+tmp359_*tmp132_+tmp361_*tmp133_*tmp53_+tmp355_*tmp134_+tmp365_*tmp137_*(tmp44_)+(tmp349_)*tmp138_+tmp369_*tmp139_+tmp371_*tmp140_+(tmp353_)*tmp141_*tmp59_+tmp367_*tmp144_+tmp357_*tmp145_*tmp57_+tmp363_*tmp146_+tmp361_*tmp147_*tmp55_+tmp359_*tmp148_+tmp365_*tmp149_*tmp53_+tmp355_*tmp150_+tmp369_*tmp153_*(tmp44_)+(tmp349_)*tmp154_+tmp373_*tmp155_+7*(tmp349_)*tmp61_*tmp156_+(tmp353_)*tmp157_*tmp61_+tmp371_*tmp160_+tmp357_*tmp161_*tmp59_+tmp367_*tmp162_+tmp361_*tmp163_*tmp57_+tmp363_*tmp164_+tmp365_*tmp165_*tmp55_+tmp359_*tmp166_+tmp369_*tmp167_*tmp53_+tmp355_*tmp168_+tmp373_*tmp171_*(tmp44_)+(tmp349_)*tmp172_+7*(tmp353_)*tmp62_*tmp173_;
}


void cEqAppui_X_M2CDPol7::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_M2CDPol7 Has no Der Sec");
}

void cEqAppui_X_M2CDPol7::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_M2CDPol7::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_M2CDPol7::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_M2CDPol7::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_M2CDPol7::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_M2CDPol7::mTheAuto("cEqAppui_X_M2CDPol7",cEqAppui_X_M2CDPol7::Alloc);


cElCompiledFonc *  cEqAppui_X_M2CDPol7::Alloc()
{  return new cEqAppui_X_M2CDPol7();
}


