// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_Y_C2MPolyn3.h"


cEqAppui_Y_C2MPolyn3::cEqAppui_Y_C2MPolyn3():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,17));
   AddIntRef (cIncIntervale("Orient",17,23));
   Close(false);
}



void cEqAppui_Y_C2MPolyn3::ComputeVal()
{
   double tmp0_ = mCompCoord[17];
   double tmp1_ = mCompCoord[19];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[18];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[20];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[21];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[22];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mLocXIm/mLocPolyn3_State_0_0;
   double tmp21_ = mLocYIm/mLocPolyn3_State_0_0;
   double tmp22_ = (tmp20_)*(tmp20_);
   double tmp23_ = (tmp21_)*(tmp21_);

  mVal[0] = (mCompCoord[2]+mCompCoord[0]*(((tmp9_*tmp3_+tmp10_*tmp8_)*(tmp12_)+(tmp2_*tmp3_+tmp14_*tmp8_)*(tmp16_)+tmp17_*tmp8_*(tmp19_))/((tmp9_*tmp13_+tmp10_*tmp3_)*(tmp12_)+(tmp2_*tmp13_+tmp14_*tmp3_)*(tmp16_)+tmp17_*tmp3_*(tmp19_))))-((((1-mCompCoord[3])*(tmp21_)+mCompCoord[4]*(tmp20_)+mCompCoord[5]*(tmp20_)*(tmp21_))-mCompCoord[6]*2*tmp23_+mCompCoord[8]*tmp22_)*mLocPolyn3_State_0_0+(mCompCoord[13]*tmp22_*(tmp20_)+mCompCoord[14]*(tmp21_)*(tmp20_)*(tmp20_)+mCompCoord[15]*tmp23_*(tmp20_)+mCompCoord[16]*(tmp21_)*tmp23_)*mLocPolyn3_State_0_0);

}


void cEqAppui_Y_C2MPolyn3::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[17];
   double tmp1_ = mCompCoord[19];
   double tmp2_ = cos(tmp0_);
   double tmp3_ = cos(tmp1_);
   double tmp4_ = sin(tmp0_);
   double tmp5_ = mCompCoord[18];
   double tmp6_ = sin(tmp5_);
   double tmp7_ = -(tmp6_);
   double tmp8_ = sin(tmp1_);
   double tmp9_ = -(tmp4_);
   double tmp10_ = tmp2_*tmp7_;
   double tmp11_ = mCompCoord[20];
   double tmp12_ = mLocXTer-tmp11_;
   double tmp13_ = -(tmp8_);
   double tmp14_ = tmp4_*tmp7_;
   double tmp15_ = mCompCoord[21];
   double tmp16_ = mLocYTer-tmp15_;
   double tmp17_ = cos(tmp5_);
   double tmp18_ = mCompCoord[22];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mLocXIm/mLocPolyn3_State_0_0;
   double tmp21_ = mLocYIm/mLocPolyn3_State_0_0;
   double tmp22_ = (tmp20_)*(tmp20_);
   double tmp23_ = (tmp21_)*(tmp21_);
   double tmp24_ = tmp9_*tmp3_;
   double tmp25_ = tmp10_*tmp8_;
   double tmp26_ = tmp24_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp12_);
   double tmp28_ = tmp2_*tmp3_;
   double tmp29_ = tmp14_*tmp8_;
   double tmp30_ = tmp28_+tmp29_;
   double tmp31_ = (tmp30_)*(tmp16_);
   double tmp32_ = tmp27_+tmp31_;
   double tmp33_ = tmp17_*tmp8_;
   double tmp34_ = tmp33_*(tmp19_);
   double tmp35_ = tmp32_+tmp34_;
   double tmp36_ = tmp9_*tmp13_;
   double tmp37_ = tmp10_*tmp3_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = (tmp38_)*(tmp12_);
   double tmp40_ = tmp2_*tmp13_;
   double tmp41_ = tmp14_*tmp3_;
   double tmp42_ = tmp40_+tmp41_;
   double tmp43_ = (tmp42_)*(tmp16_);
   double tmp44_ = tmp39_+tmp43_;
   double tmp45_ = tmp17_*tmp3_;
   double tmp46_ = tmp45_*(tmp19_);
   double tmp47_ = tmp44_+tmp46_;
   double tmp48_ = (tmp35_)/(tmp47_);
   double tmp49_ = (tmp20_)*(tmp21_);
   double tmp50_ = tmp22_*(tmp20_);
   double tmp51_ = (tmp21_)*(tmp20_);
   double tmp52_ = tmp51_*(tmp20_);
   double tmp53_ = tmp23_*(tmp20_);
   double tmp54_ = (tmp21_)*tmp23_;
   double tmp55_ = -(1);
   double tmp56_ = tmp55_*tmp4_;
   double tmp57_ = -(tmp2_);
   double tmp58_ = tmp56_*tmp7_;
   double tmp59_ = mCompCoord[0];
   double tmp60_ = -(tmp17_);
   double tmp61_ = tmp60_*tmp2_;
   double tmp62_ = tmp60_*tmp4_;
   double tmp63_ = tmp55_*tmp6_;
   double tmp64_ = ElSquare(tmp47_);
   double tmp65_ = tmp55_*tmp8_;
   double tmp66_ = -(tmp3_);

  mVal[0] = (mCompCoord[2]+tmp59_*(tmp48_))-((((1-mCompCoord[3])*(tmp21_)+mCompCoord[4]*(tmp20_)+mCompCoord[5]*tmp49_)-mCompCoord[6]*2*tmp23_+mCompCoord[8]*tmp22_)*mLocPolyn3_State_0_0+(mCompCoord[13]*tmp50_+mCompCoord[14]*tmp52_+mCompCoord[15]*tmp53_+mCompCoord[16]*tmp54_)*mLocPolyn3_State_0_0);

  mCompDer[0][0] = tmp48_;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 1;
  mCompDer[0][3] = -(tmp55_*(tmp21_)*mLocPolyn3_State_0_0);
  mCompDer[0][4] = -((tmp20_)*mLocPolyn3_State_0_0);
  mCompDer[0][5] = -(tmp49_*mLocPolyn3_State_0_0);
  mCompDer[0][6] = -(-(2*tmp23_)*mLocPolyn3_State_0_0);
  mCompDer[0][7] = 0;
  mCompDer[0][8] = -(tmp22_*mLocPolyn3_State_0_0);
  mCompDer[0][9] = 0;
  mCompDer[0][10] = 0;
  mCompDer[0][11] = 0;
  mCompDer[0][12] = 0;
  mCompDer[0][13] = -(tmp50_*mLocPolyn3_State_0_0);
  mCompDer[0][14] = -(tmp52_*mLocPolyn3_State_0_0);
  mCompDer[0][15] = -(tmp53_*mLocPolyn3_State_0_0);
  mCompDer[0][16] = -(tmp54_*mLocPolyn3_State_0_0);
  mCompDer[0][17] = ((((tmp57_*tmp3_+tmp58_*tmp8_)*(tmp12_)+(tmp56_*tmp3_+tmp25_)*(tmp16_))*(tmp47_)-(tmp35_)*((tmp57_*tmp13_+tmp58_*tmp3_)*(tmp12_)+(tmp56_*tmp13_+tmp37_)*(tmp16_)))/tmp64_)*tmp59_;
  mCompDer[0][18] = (((tmp61_*tmp8_*(tmp12_)+tmp62_*tmp8_*(tmp16_)+tmp63_*tmp8_*(tmp19_))*(tmp47_)-(tmp35_)*(tmp61_*tmp3_*(tmp12_)+tmp62_*tmp3_*(tmp16_)+tmp63_*tmp3_*(tmp19_)))/tmp64_)*tmp59_;
  mCompDer[0][19] = ((((tmp65_*tmp9_+tmp3_*tmp10_)*(tmp12_)+(tmp65_*tmp2_+tmp3_*tmp14_)*(tmp16_)+tmp3_*tmp17_*(tmp19_))*(tmp47_)-(tmp35_)*((tmp66_*tmp9_+tmp65_*tmp10_)*(tmp12_)+(tmp66_*tmp2_+tmp65_*tmp14_)*(tmp16_)+tmp65_*tmp17_*(tmp19_)))/tmp64_)*tmp59_;
  mCompDer[0][20] = ((tmp55_*(tmp26_)*(tmp47_)-(tmp35_)*tmp55_*(tmp38_))/tmp64_)*tmp59_;
  mCompDer[0][21] = ((tmp55_*(tmp30_)*(tmp47_)-(tmp35_)*tmp55_*(tmp42_))/tmp64_)*tmp59_;
  mCompDer[0][22] = ((tmp55_*tmp33_*(tmp47_)-(tmp35_)*tmp55_*tmp45_)/tmp64_)*tmp59_;
}


void cEqAppui_Y_C2MPolyn3::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_Y_C2MPolyn3 Has no Der Sec");
}

void cEqAppui_Y_C2MPolyn3::SetPolyn3_State_0_0(double aVal){ mLocPolyn3_State_0_0 = aVal;}
void cEqAppui_Y_C2MPolyn3::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_Y_C2MPolyn3::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_Y_C2MPolyn3::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_Y_C2MPolyn3::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_Y_C2MPolyn3::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_Y_C2MPolyn3::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Polyn3_State_0_0") return & mLocPolyn3_State_0_0;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_Y_C2MPolyn3::mTheAuto("cEqAppui_Y_C2MPolyn3",cEqAppui_Y_C2MPolyn3::Alloc);


cElCompiledFonc *  cEqAppui_Y_C2MPolyn3::Alloc()
{  return new cEqAppui_Y_C2MPolyn3();
}


