// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqCoplanNoDistId.h"


cEqCoplanNoDistId::cEqCoplanNoDistId():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr1",0,3));
   AddIntRef (cIncIntervale("Or1",3,9));
   AddIntRef (cIncIntervale("Or2",9,15));
   Close(false);
}



void cEqCoplanNoDistId::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = sin(tmp0_);
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mCompCoord[5];
   double tmp4_ = mCompCoord[0];
   double tmp5_ = cos(tmp0_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = sin(tmp2_);
   double tmp8_ = -(tmp7_);
   double tmp9_ = tmp1_*tmp8_;
   double tmp10_ = cos(tmp3_);
   double tmp11_ = mCompCoord[1];
   double tmp12_ = mCompCoord[10];
   double tmp13_ = mCompCoord[2];
   double tmp14_ = cos(tmp12_);
   double tmp15_ = mCompCoord[11];
   double tmp16_ = mLocXL1-tmp11_;
   double tmp17_ = (tmp16_)/tmp4_;
   double tmp18_ = cos(tmp2_);
   double tmp19_ = mLocYL1-tmp13_;
   double tmp20_ = (tmp19_)/tmp4_;
   double tmp21_ = mLocXL2-tmp11_;
   double tmp22_ = (tmp21_)/tmp4_;
   double tmp23_ = mCompCoord[9];
   double tmp24_ = cos(tmp15_);
   double tmp25_ = sin(tmp23_);
   double tmp26_ = sin(tmp12_);
   double tmp27_ = sin(tmp15_);
   double tmp28_ = mLocYL2-tmp13_;
   double tmp29_ = (tmp28_)/tmp4_;
   double tmp30_ = cos(tmp23_);
   double tmp31_ = -(tmp26_);
   double tmp32_ = tmp25_*tmp31_;
   double tmp33_ = tmp7_*(tmp17_);
   double tmp34_ = tmp18_*tmp6_;
   double tmp35_ = tmp34_*(tmp20_);
   double tmp36_ = tmp33_+tmp35_;
   double tmp37_ = tmp18_*tmp10_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = -(tmp25_);
   double tmp40_ = -(tmp27_);
   double tmp41_ = tmp30_*tmp31_;
   double tmp42_ = -(tmp1_);
   double tmp43_ = -(tmp6_);
   double tmp44_ = tmp5_*tmp8_;
   double tmp45_ = tmp26_*(tmp22_);
   double tmp46_ = tmp14_*tmp27_;
   double tmp47_ = tmp46_*(tmp29_);
   double tmp48_ = tmp45_+tmp47_;
   double tmp49_ = tmp14_*tmp24_;
   double tmp50_ = tmp48_+tmp49_;
   double tmp51_ = tmp5_*tmp18_;
   double tmp52_ = tmp51_*(tmp17_);
   double tmp53_ = tmp42_*tmp10_;
   double tmp54_ = tmp44_*tmp6_;
   double tmp55_ = tmp53_+tmp54_;
   double tmp56_ = (tmp55_)*(tmp20_);
   double tmp57_ = tmp52_+tmp56_;
   double tmp58_ = tmp42_*tmp43_;
   double tmp59_ = tmp44_*tmp10_;
   double tmp60_ = tmp58_+tmp59_;
   double tmp61_ = tmp57_+tmp60_;
   double tmp62_ = tmp25_*tmp14_;
   double tmp63_ = tmp62_*(tmp22_);
   double tmp64_ = tmp30_*tmp24_;
   double tmp65_ = tmp32_*tmp27_;
   double tmp66_ = tmp64_+tmp65_;
   double tmp67_ = (tmp66_)*(tmp29_);
   double tmp68_ = tmp63_+tmp67_;
   double tmp69_ = tmp30_*tmp40_;
   double tmp70_ = tmp32_*tmp24_;
   double tmp71_ = tmp69_+tmp70_;
   double tmp72_ = tmp68_+tmp71_;
   double tmp73_ = tmp1_*tmp18_;
   double tmp74_ = tmp73_*(tmp17_);
   double tmp75_ = tmp5_*tmp10_;
   double tmp76_ = tmp9_*tmp6_;
   double tmp77_ = tmp75_+tmp76_;
   double tmp78_ = (tmp77_)*(tmp20_);
   double tmp79_ = tmp74_+tmp78_;
   double tmp80_ = tmp5_*tmp43_;
   double tmp81_ = tmp9_*tmp10_;
   double tmp82_ = tmp80_+tmp81_;
   double tmp83_ = tmp79_+tmp82_;
   double tmp84_ = tmp30_*tmp14_;
   double tmp85_ = tmp84_*(tmp22_);
   double tmp86_ = tmp39_*tmp24_;
   double tmp87_ = tmp41_*tmp27_;
   double tmp88_ = tmp86_+tmp87_;
   double tmp89_ = (tmp88_)*(tmp29_);
   double tmp90_ = tmp85_+tmp89_;
   double tmp91_ = tmp39_*tmp40_;
   double tmp92_ = tmp41_*tmp24_;
   double tmp93_ = tmp91_+tmp92_;
   double tmp94_ = tmp90_+tmp93_;
   double tmp95_ = mCompCoord[12];
   double tmp96_ = mCompCoord[6];
   double tmp97_ = tmp95_-tmp96_;
   double tmp98_ = mCompCoord[13];
   double tmp99_ = mCompCoord[7];
   double tmp100_ = tmp98_-tmp99_;
   double tmp101_ = mCompCoord[14];
   double tmp102_ = mCompCoord[8];
   double tmp103_ = tmp101_-tmp102_;

  mVal[0] = (((tmp83_)*(tmp50_)-(tmp38_)*(tmp72_))*(tmp97_)+((tmp38_)*(tmp94_)-(tmp61_)*(tmp50_))*(tmp100_)+((tmp61_)*(tmp72_)-(tmp83_)*(tmp94_))*(tmp103_))/sqrt((tmp97_)*(tmp97_)+(tmp100_)*(tmp100_)+(tmp103_)*(tmp103_));

}


void cEqCoplanNoDistId::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = sin(tmp0_);
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mCompCoord[5];
   double tmp4_ = mCompCoord[0];
   double tmp5_ = cos(tmp0_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = sin(tmp2_);
   double tmp8_ = -(tmp7_);
   double tmp9_ = tmp1_*tmp8_;
   double tmp10_ = cos(tmp3_);
   double tmp11_ = mCompCoord[1];
   double tmp12_ = mCompCoord[10];
   double tmp13_ = mCompCoord[2];
   double tmp14_ = cos(tmp12_);
   double tmp15_ = mCompCoord[11];
   double tmp16_ = mLocXL1-tmp11_;
   double tmp17_ = (tmp16_)/tmp4_;
   double tmp18_ = cos(tmp2_);
   double tmp19_ = mLocYL1-tmp13_;
   double tmp20_ = (tmp19_)/tmp4_;
   double tmp21_ = mLocXL2-tmp11_;
   double tmp22_ = (tmp21_)/tmp4_;
   double tmp23_ = mCompCoord[9];
   double tmp24_ = cos(tmp15_);
   double tmp25_ = sin(tmp23_);
   double tmp26_ = sin(tmp12_);
   double tmp27_ = sin(tmp15_);
   double tmp28_ = mLocYL2-tmp13_;
   double tmp29_ = (tmp28_)/tmp4_;
   double tmp30_ = cos(tmp23_);
   double tmp31_ = -(tmp26_);
   double tmp32_ = tmp25_*tmp31_;
   double tmp33_ = tmp7_*(tmp17_);
   double tmp34_ = tmp18_*tmp6_;
   double tmp35_ = tmp34_*(tmp20_);
   double tmp36_ = tmp33_+tmp35_;
   double tmp37_ = tmp18_*tmp10_;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = -(tmp25_);
   double tmp40_ = -(tmp27_);
   double tmp41_ = tmp30_*tmp31_;
   double tmp42_ = -(tmp1_);
   double tmp43_ = -(tmp6_);
   double tmp44_ = tmp5_*tmp8_;
   double tmp45_ = tmp26_*(tmp22_);
   double tmp46_ = tmp14_*tmp27_;
   double tmp47_ = tmp46_*(tmp29_);
   double tmp48_ = tmp45_+tmp47_;
   double tmp49_ = tmp14_*tmp24_;
   double tmp50_ = tmp48_+tmp49_;
   double tmp51_ = tmp5_*tmp18_;
   double tmp52_ = tmp51_*(tmp17_);
   double tmp53_ = tmp42_*tmp10_;
   double tmp54_ = tmp44_*tmp6_;
   double tmp55_ = tmp53_+tmp54_;
   double tmp56_ = (tmp55_)*(tmp20_);
   double tmp57_ = tmp52_+tmp56_;
   double tmp58_ = tmp42_*tmp43_;
   double tmp59_ = tmp44_*tmp10_;
   double tmp60_ = tmp58_+tmp59_;
   double tmp61_ = tmp57_+tmp60_;
   double tmp62_ = tmp25_*tmp14_;
   double tmp63_ = tmp62_*(tmp22_);
   double tmp64_ = tmp30_*tmp24_;
   double tmp65_ = tmp32_*tmp27_;
   double tmp66_ = tmp64_+tmp65_;
   double tmp67_ = (tmp66_)*(tmp29_);
   double tmp68_ = tmp63_+tmp67_;
   double tmp69_ = tmp30_*tmp40_;
   double tmp70_ = tmp32_*tmp24_;
   double tmp71_ = tmp69_+tmp70_;
   double tmp72_ = tmp68_+tmp71_;
   double tmp73_ = tmp1_*tmp18_;
   double tmp74_ = tmp73_*(tmp17_);
   double tmp75_ = tmp5_*tmp10_;
   double tmp76_ = tmp9_*tmp6_;
   double tmp77_ = tmp75_+tmp76_;
   double tmp78_ = (tmp77_)*(tmp20_);
   double tmp79_ = tmp74_+tmp78_;
   double tmp80_ = tmp5_*tmp43_;
   double tmp81_ = tmp9_*tmp10_;
   double tmp82_ = tmp80_+tmp81_;
   double tmp83_ = tmp79_+tmp82_;
   double tmp84_ = tmp30_*tmp14_;
   double tmp85_ = tmp84_*(tmp22_);
   double tmp86_ = tmp39_*tmp24_;
   double tmp87_ = tmp41_*tmp27_;
   double tmp88_ = tmp86_+tmp87_;
   double tmp89_ = (tmp88_)*(tmp29_);
   double tmp90_ = tmp85_+tmp89_;
   double tmp91_ = tmp39_*tmp40_;
   double tmp92_ = tmp41_*tmp24_;
   double tmp93_ = tmp91_+tmp92_;
   double tmp94_ = tmp90_+tmp93_;
   double tmp95_ = mCompCoord[12];
   double tmp96_ = mCompCoord[6];
   double tmp97_ = tmp95_-tmp96_;
   double tmp98_ = mCompCoord[13];
   double tmp99_ = mCompCoord[7];
   double tmp100_ = tmp98_-tmp99_;
   double tmp101_ = mCompCoord[14];
   double tmp102_ = mCompCoord[8];
   double tmp103_ = tmp101_-tmp102_;
   double tmp104_ = ElSquare(tmp4_);
   double tmp105_ = -(tmp16_);
   double tmp106_ = tmp105_/tmp104_;
   double tmp107_ = -(tmp19_);
   double tmp108_ = tmp107_/tmp104_;
   double tmp109_ = -(tmp21_);
   double tmp110_ = tmp109_/tmp104_;
   double tmp111_ = -(tmp28_);
   double tmp112_ = tmp111_/tmp104_;
   double tmp113_ = (tmp106_)*tmp7_;
   double tmp114_ = (tmp108_)*tmp34_;
   double tmp115_ = tmp113_+tmp114_;
   double tmp116_ = (tmp110_)*tmp26_;
   double tmp117_ = (tmp112_)*tmp46_;
   double tmp118_ = tmp116_+tmp117_;
   double tmp119_ = (tmp106_)*tmp51_;
   double tmp120_ = (tmp108_)*(tmp55_);
   double tmp121_ = tmp119_+tmp120_;
   double tmp122_ = (tmp110_)*tmp62_;
   double tmp123_ = (tmp112_)*(tmp66_);
   double tmp124_ = tmp122_+tmp123_;
   double tmp125_ = (tmp106_)*tmp73_;
   double tmp126_ = (tmp108_)*(tmp77_);
   double tmp127_ = tmp125_+tmp126_;
   double tmp128_ = (tmp110_)*tmp84_;
   double tmp129_ = (tmp112_)*(tmp88_);
   double tmp130_ = tmp128_+tmp129_;
   double tmp131_ = (tmp97_)*(tmp97_);
   double tmp132_ = (tmp100_)*(tmp100_);
   double tmp133_ = tmp131_+tmp132_;
   double tmp134_ = (tmp103_)*(tmp103_);
   double tmp135_ = tmp133_+tmp134_;
   double tmp136_ = sqrt(tmp135_);
   double tmp137_ = -(1);
   double tmp138_ = tmp137_*tmp4_;
   double tmp139_ = (tmp138_)/tmp104_;
   double tmp140_ = (tmp139_)*tmp7_;
   double tmp141_ = (tmp139_)*tmp26_;
   double tmp142_ = (tmp139_)*tmp51_;
   double tmp143_ = (tmp139_)*tmp62_;
   double tmp144_ = (tmp139_)*tmp73_;
   double tmp145_ = (tmp139_)*tmp84_;
   double tmp146_ = ElSquare(tmp136_);
   double tmp147_ = (tmp139_)*tmp34_;
   double tmp148_ = (tmp139_)*tmp46_;
   double tmp149_ = (tmp139_)*(tmp55_);
   double tmp150_ = (tmp139_)*(tmp66_);
   double tmp151_ = (tmp139_)*(tmp77_);
   double tmp152_ = (tmp139_)*(tmp88_);
   double tmp153_ = tmp137_*tmp1_;
   double tmp154_ = -(tmp5_);
   double tmp155_ = tmp153_*tmp8_;
   double tmp156_ = tmp153_*tmp18_;
   double tmp157_ = tmp156_*(tmp17_);
   double tmp158_ = tmp154_*tmp10_;
   double tmp159_ = tmp155_*tmp6_;
   double tmp160_ = tmp158_+tmp159_;
   double tmp161_ = (tmp160_)*(tmp20_);
   double tmp162_ = tmp157_+tmp161_;
   double tmp163_ = tmp154_*tmp43_;
   double tmp164_ = tmp155_*tmp10_;
   double tmp165_ = tmp163_+tmp164_;
   double tmp166_ = tmp162_+tmp165_;
   double tmp167_ = tmp153_*tmp10_;
   double tmp168_ = tmp167_+tmp54_;
   double tmp169_ = (tmp168_)*(tmp20_);
   double tmp170_ = tmp52_+tmp169_;
   double tmp171_ = tmp153_*tmp43_;
   double tmp172_ = tmp171_+tmp59_;
   double tmp173_ = tmp170_+tmp172_;
   double tmp174_ = -(tmp18_);
   double tmp175_ = tmp174_*tmp1_;
   double tmp176_ = tmp137_*tmp7_;
   double tmp177_ = tmp18_*(tmp17_);
   double tmp178_ = tmp176_*tmp6_;
   double tmp179_ = tmp178_*(tmp20_);
   double tmp180_ = tmp177_+tmp179_;
   double tmp181_ = tmp176_*tmp10_;
   double tmp182_ = tmp180_+tmp181_;
   double tmp183_ = tmp174_*tmp5_;
   double tmp184_ = tmp176_*tmp5_;
   double tmp185_ = tmp184_*(tmp17_);
   double tmp186_ = tmp183_*tmp6_;
   double tmp187_ = tmp186_*(tmp20_);
   double tmp188_ = tmp185_+tmp187_;
   double tmp189_ = tmp183_*tmp10_;
   double tmp190_ = tmp188_+tmp189_;
   double tmp191_ = tmp176_*tmp1_;
   double tmp192_ = tmp191_*(tmp17_);
   double tmp193_ = tmp175_*tmp6_;
   double tmp194_ = tmp193_*(tmp20_);
   double tmp195_ = tmp192_+tmp194_;
   double tmp196_ = tmp175_*tmp10_;
   double tmp197_ = tmp195_+tmp196_;
   double tmp198_ = tmp137_*tmp6_;
   double tmp199_ = tmp10_*tmp18_;
   double tmp200_ = tmp199_*(tmp20_);
   double tmp201_ = tmp198_*tmp18_;
   double tmp202_ = tmp200_+tmp201_;
   double tmp203_ = -(tmp10_);
   double tmp204_ = tmp198_*tmp42_;
   double tmp205_ = tmp10_*tmp44_;
   double tmp206_ = tmp204_+tmp205_;
   double tmp207_ = (tmp206_)*(tmp20_);
   double tmp208_ = tmp203_*tmp42_;
   double tmp209_ = tmp198_*tmp44_;
   double tmp210_ = tmp208_+tmp209_;
   double tmp211_ = tmp207_+tmp210_;
   double tmp212_ = tmp198_*tmp5_;
   double tmp213_ = tmp10_*tmp9_;
   double tmp214_ = tmp212_+tmp213_;
   double tmp215_ = (tmp214_)*(tmp20_);
   double tmp216_ = tmp203_*tmp5_;
   double tmp217_ = tmp198_*tmp9_;
   double tmp218_ = tmp216_+tmp217_;
   double tmp219_ = tmp215_+tmp218_;
   double tmp220_ = (tmp83_)*(tmp50_);
   double tmp221_ = (tmp38_)*(tmp72_);
   double tmp222_ = tmp220_-tmp221_;
   double tmp223_ = (tmp222_)*(tmp97_);
   double tmp224_ = (tmp38_)*(tmp94_);
   double tmp225_ = (tmp61_)*(tmp50_);
   double tmp226_ = tmp224_-tmp225_;
   double tmp227_ = (tmp226_)*(tmp100_);
   double tmp228_ = tmp223_+tmp227_;
   double tmp229_ = (tmp61_)*(tmp72_);
   double tmp230_ = (tmp83_)*(tmp94_);
   double tmp231_ = tmp229_-tmp230_;
   double tmp232_ = (tmp231_)*(tmp103_);
   double tmp233_ = tmp228_+tmp232_;
   double tmp234_ = tmp137_*(tmp97_);
   double tmp235_ = tmp137_*(tmp100_);
   double tmp236_ = tmp137_*(tmp103_);
   double tmp237_ = tmp137_*tmp25_;
   double tmp238_ = -(tmp30_);
   double tmp239_ = tmp237_*tmp31_;
   double tmp240_ = tmp237_*tmp24_;
   double tmp241_ = tmp240_+tmp87_;
   double tmp242_ = (tmp241_)*(tmp29_);
   double tmp243_ = tmp85_+tmp242_;
   double tmp244_ = tmp237_*tmp40_;
   double tmp245_ = tmp244_+tmp92_;
   double tmp246_ = tmp243_+tmp245_;
   double tmp247_ = tmp237_*tmp14_;
   double tmp248_ = tmp247_*(tmp22_);
   double tmp249_ = tmp238_*tmp24_;
   double tmp250_ = tmp239_*tmp27_;
   double tmp251_ = tmp249_+tmp250_;
   double tmp252_ = (tmp251_)*(tmp29_);
   double tmp253_ = tmp248_+tmp252_;
   double tmp254_ = tmp238_*tmp40_;
   double tmp255_ = tmp239_*tmp24_;
   double tmp256_ = tmp254_+tmp255_;
   double tmp257_ = tmp253_+tmp256_;
   double tmp258_ = tmp137_*tmp26_;
   double tmp259_ = -(tmp14_);
   double tmp260_ = tmp259_*tmp25_;
   double tmp261_ = tmp259_*tmp30_;
   double tmp262_ = tmp14_*(tmp22_);
   double tmp263_ = tmp258_*tmp27_;
   double tmp264_ = tmp263_*(tmp29_);
   double tmp265_ = tmp262_+tmp264_;
   double tmp266_ = tmp258_*tmp24_;
   double tmp267_ = tmp265_+tmp266_;
   double tmp268_ = tmp258_*tmp25_;
   double tmp269_ = tmp268_*(tmp22_);
   double tmp270_ = tmp260_*tmp27_;
   double tmp271_ = tmp270_*(tmp29_);
   double tmp272_ = tmp269_+tmp271_;
   double tmp273_ = tmp260_*tmp24_;
   double tmp274_ = tmp272_+tmp273_;
   double tmp275_ = tmp258_*tmp30_;
   double tmp276_ = tmp275_*(tmp22_);
   double tmp277_ = tmp261_*tmp27_;
   double tmp278_ = tmp277_*(tmp29_);
   double tmp279_ = tmp276_+tmp278_;
   double tmp280_ = tmp261_*tmp24_;
   double tmp281_ = tmp279_+tmp280_;
   double tmp282_ = tmp137_*tmp27_;
   double tmp283_ = -(tmp24_);
   double tmp284_ = tmp24_*tmp14_;
   double tmp285_ = tmp284_*(tmp29_);
   double tmp286_ = tmp282_*tmp14_;
   double tmp287_ = tmp285_+tmp286_;
   double tmp288_ = tmp282_*tmp30_;
   double tmp289_ = tmp24_*tmp32_;
   double tmp290_ = tmp288_+tmp289_;
   double tmp291_ = (tmp290_)*(tmp29_);
   double tmp292_ = tmp283_*tmp30_;
   double tmp293_ = tmp282_*tmp32_;
   double tmp294_ = tmp292_+tmp293_;
   double tmp295_ = tmp291_+tmp294_;
   double tmp296_ = tmp282_*tmp39_;
   double tmp297_ = tmp24_*tmp41_;
   double tmp298_ = tmp296_+tmp297_;
   double tmp299_ = (tmp298_)*(tmp29_);
   double tmp300_ = tmp283_*tmp39_;
   double tmp301_ = tmp282_*tmp41_;
   double tmp302_ = tmp300_+tmp301_;
   double tmp303_ = tmp299_+tmp302_;

  mVal[0] = (tmp233_)/tmp136_;

  mCompDer[0][0] = (((((tmp127_)*(tmp50_)+(tmp118_)*(tmp83_))-((tmp115_)*(tmp72_)+(tmp124_)*(tmp38_)))*(tmp97_)+(((tmp115_)*(tmp94_)+(tmp130_)*(tmp38_))-((tmp121_)*(tmp50_)+(tmp118_)*(tmp61_)))*(tmp100_)+(((tmp121_)*(tmp72_)+(tmp124_)*(tmp61_))-((tmp127_)*(tmp94_)+(tmp130_)*(tmp83_)))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][1] = ((((tmp144_*(tmp50_)+tmp141_*(tmp83_))-(tmp140_*(tmp72_)+tmp143_*(tmp38_)))*(tmp97_)+((tmp140_*(tmp94_)+tmp145_*(tmp38_))-(tmp142_*(tmp50_)+tmp141_*(tmp61_)))*(tmp100_)+((tmp142_*(tmp72_)+tmp143_*(tmp61_))-(tmp144_*(tmp94_)+tmp145_*(tmp83_)))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][2] = ((((tmp151_*(tmp50_)+tmp148_*(tmp83_))-(tmp147_*(tmp72_)+tmp150_*(tmp38_)))*(tmp97_)+((tmp147_*(tmp94_)+tmp152_*(tmp38_))-(tmp149_*(tmp50_)+tmp148_*(tmp61_)))*(tmp100_)+((tmp149_*(tmp72_)+tmp150_*(tmp61_))-(tmp151_*(tmp94_)+tmp152_*(tmp83_)))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][3] = (((tmp173_)*(tmp50_)*(tmp97_)+-((tmp166_)*(tmp50_))*(tmp100_)+((tmp166_)*(tmp72_)-(tmp173_)*(tmp94_))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][4] = ((((tmp197_)*(tmp50_)-(tmp182_)*(tmp72_))*(tmp97_)+((tmp182_)*(tmp94_)-(tmp190_)*(tmp50_))*(tmp100_)+((tmp190_)*(tmp72_)-(tmp197_)*(tmp94_))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][5] = ((((tmp219_)*(tmp50_)-(tmp202_)*(tmp72_))*(tmp97_)+((tmp202_)*(tmp94_)-(tmp211_)*(tmp50_))*(tmp100_)+((tmp211_)*(tmp72_)-(tmp219_)*(tmp94_))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][6] = (tmp137_*(tmp222_)*tmp136_-(tmp233_)*((0.500000*(tmp234_+tmp234_))/tmp136_))/tmp146_;
  mCompDer[0][7] = (tmp137_*(tmp226_)*tmp136_-(tmp233_)*((0.500000*(tmp235_+tmp235_))/tmp136_))/tmp146_;
  mCompDer[0][8] = (tmp137_*(tmp231_)*tmp136_-(tmp233_)*((0.500000*(tmp236_+tmp236_))/tmp136_))/tmp146_;
  mCompDer[0][9] = ((-((tmp246_)*(tmp38_))*(tmp97_)+(tmp257_)*(tmp38_)*(tmp100_)+((tmp246_)*(tmp61_)-(tmp257_)*(tmp83_))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][10] = ((((tmp267_)*(tmp83_)-(tmp274_)*(tmp38_))*(tmp97_)+((tmp281_)*(tmp38_)-(tmp267_)*(tmp61_))*(tmp100_)+((tmp274_)*(tmp61_)-(tmp281_)*(tmp83_))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][11] = ((((tmp287_)*(tmp83_)-(tmp295_)*(tmp38_))*(tmp97_)+((tmp303_)*(tmp38_)-(tmp287_)*(tmp61_))*(tmp100_)+((tmp295_)*(tmp61_)-(tmp303_)*(tmp83_))*(tmp103_))*tmp136_)/tmp146_;
  mCompDer[0][12] = ((tmp222_)*tmp136_-(tmp233_)*((0.500000*(tmp97_+tmp97_))/tmp136_))/tmp146_;
  mCompDer[0][13] = ((tmp226_)*tmp136_-(tmp233_)*((0.500000*(tmp100_+tmp100_))/tmp136_))/tmp146_;
  mCompDer[0][14] = ((tmp231_)*tmp136_-(tmp233_)*((0.500000*(tmp103_+tmp103_))/tmp136_))/tmp146_;
}


void cEqCoplanNoDistId::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqCoplanNoDistId Has no Der Sec");
}

void cEqCoplanNoDistId::SetXL1(double aVal){ mLocXL1 = aVal;}
void cEqCoplanNoDistId::SetXL2(double aVal){ mLocXL2 = aVal;}
void cEqCoplanNoDistId::SetYL1(double aVal){ mLocYL1 = aVal;}
void cEqCoplanNoDistId::SetYL2(double aVal){ mLocYL2 = aVal;}



double * cEqCoplanNoDistId::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XL1") return & mLocXL1;
   if (aName == "XL2") return & mLocXL2;
   if (aName == "YL1") return & mLocYL1;
   if (aName == "YL2") return & mLocYL2;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqCoplanNoDistId::mTheAuto("cEqCoplanNoDistId",cEqCoplanNoDistId::Alloc);


cElCompiledFonc *  cEqCoplanNoDistId::Alloc()
{  return new cEqCoplanNoDistId();
}


