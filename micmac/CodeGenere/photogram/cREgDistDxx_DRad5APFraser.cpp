// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistDxx_DRad5APFraser.h"


cREgDistDxx_DRad5APFraser::cREgDistDxx_DRad5APFraser():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,14));
   Close(false);
}



void cREgDistDxx_DRad5APFraser::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocRegDistuu1_x - tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocRegDistuu1_y - tmp2_;
   double tmp4_ = (tmp1_) * (tmp1_);
   double tmp5_ = (tmp3_) * (tmp3_);
   double tmp6_ = tmp4_ + tmp5_;
   double tmp7_ = (tmp6_) * (tmp6_);
   double tmp8_ = tmp7_ * (tmp6_);
   double tmp9_ = tmp8_ * (tmp6_);
   double tmp10_ = ElSquare(tmp1_);
   double tmp11_ = mLocRegDistuu2_x - tmp0_;
   double tmp12_ = mLocRegDistuu2_y - tmp2_;
   double tmp13_ = mCompCoord[5];
   double tmp14_ = (tmp11_) * (tmp11_);
   double tmp15_ = (tmp12_) * (tmp12_);
   double tmp16_ = tmp14_ + tmp15_;
   double tmp17_ = mCompCoord[6];
   double tmp18_ = (tmp16_) * (tmp16_);
   double tmp19_ = mCompCoord[7];
   double tmp20_ = tmp18_ * (tmp16_);
   double tmp21_ = mCompCoord[8];
   double tmp22_ = tmp20_ * (tmp16_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = ElSquare(tmp11_);
   double tmp25_ = mCompCoord[10];
   double tmp26_ = mCompCoord[11];
   double tmp27_ = mCompCoord[12];
   double tmp28_ = mCompCoord[13];
   double tmp29_ = mLocRegDistuu3_x - tmp0_;
   double tmp30_ = mLocRegDistuu3_y - tmp2_;
   double tmp31_ = (tmp29_) * (tmp29_);
   double tmp32_ = (tmp30_) * (tmp30_);
   double tmp33_ = tmp31_ + tmp32_;
   double tmp34_ = (tmp33_) * (tmp33_);
   double tmp35_ = tmp34_ * (tmp33_);
   double tmp36_ = tmp35_ * (tmp33_);
   double tmp37_ = ElSquare(tmp29_);
   double tmp38_ = (tmp6_) * tmp13_;
   double tmp39_ = 1 + tmp38_;
   double tmp40_ = tmp7_ * tmp17_;
   double tmp41_ = tmp39_ + tmp40_;
   double tmp42_ = tmp8_ * tmp19_;
   double tmp43_ = tmp41_ + tmp42_;
   double tmp44_ = tmp9_ * tmp21_;
   double tmp45_ = tmp43_ + tmp44_;
   double tmp46_ = tmp9_ * (tmp6_);
   double tmp47_ = tmp46_ * tmp23_;
   double tmp48_ = tmp45_ + tmp47_;
   double tmp49_ = ElSquare(tmp3_);
   double tmp50_ = tmp10_ + tmp49_;
   double tmp51_ = 2 * (tmp1_);
   double tmp52_ = tmp51_ * (tmp3_);
   double tmp53_ = (tmp16_) * tmp13_;
   double tmp54_ = 1 + tmp53_;
   double tmp55_ = tmp18_ * tmp17_;
   double tmp56_ = tmp54_ + tmp55_;
   double tmp57_ = tmp20_ * tmp19_;
   double tmp58_ = tmp56_ + tmp57_;
   double tmp59_ = tmp22_ * tmp21_;
   double tmp60_ = tmp58_ + tmp59_;
   double tmp61_ = tmp22_ * (tmp16_);
   double tmp62_ = tmp61_ * tmp23_;
   double tmp63_ = tmp60_ + tmp62_;
   double tmp64_ = ElSquare(tmp12_);
   double tmp65_ = tmp24_ + tmp64_;
   double tmp66_ = 2 * (tmp11_);
   double tmp67_ = tmp66_ * (tmp12_);
   double tmp68_ = (tmp33_) * tmp13_;
   double tmp69_ = 1 + tmp68_;
   double tmp70_ = tmp34_ * tmp17_;
   double tmp71_ = tmp69_ + tmp70_;
   double tmp72_ = tmp35_ * tmp19_;
   double tmp73_ = tmp71_ + tmp72_;
   double tmp74_ = tmp36_ * tmp21_;
   double tmp75_ = tmp73_ + tmp74_;
   double tmp76_ = tmp36_ * (tmp33_);
   double tmp77_ = tmp76_ * tmp23_;
   double tmp78_ = tmp75_ + tmp77_;
   double tmp79_ = ElSquare(tmp30_);
   double tmp80_ = tmp37_ + tmp79_;
   double tmp81_ = 2 * (tmp29_);
   double tmp82_ = tmp81_ * (tmp30_);

  mVal[0] = (tmp0_ + (tmp1_) * (tmp48_) + (2 * tmp10_ + tmp50_) * tmp25_ + tmp52_ * tmp26_ + tmp27_ * (tmp1_) + tmp28_ * (tmp3_) + tmp0_ + (tmp11_) * (tmp63_) + (2 * tmp24_ + tmp65_) * tmp25_ + tmp67_ * tmp26_ + tmp27_ * (tmp11_) + tmp28_ * (tmp12_)) - (tmp0_ + (tmp29_) * (tmp78_) + (2 * tmp37_ + tmp80_) * tmp25_ + tmp82_ * tmp26_ + tmp27_ * (tmp29_) + tmp28_ * (tmp30_)) * 2.000000;

  mVal[1] = (tmp2_ + (tmp3_) * (tmp48_) + (2 * tmp49_ + tmp50_) * tmp26_ + tmp52_ * tmp25_ + tmp2_ + (tmp12_) * (tmp63_) + (2 * tmp64_ + tmp65_) * tmp26_ + tmp67_ * tmp25_) - (tmp2_ + (tmp30_) * (tmp78_) + (2 * tmp79_ + tmp80_) * tmp26_ + tmp82_ * tmp25_) * 2.000000;

}


void cREgDistDxx_DRad5APFraser::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocRegDistuu1_x - tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocRegDistuu1_y - tmp2_;
   double tmp4_ = (tmp1_) * (tmp1_);
   double tmp5_ = (tmp3_) * (tmp3_);
   double tmp6_ = tmp4_ + tmp5_;
   double tmp7_ = (tmp6_) * (tmp6_);
   double tmp8_ = tmp7_ * (tmp6_);
   double tmp9_ = tmp8_ * (tmp6_);
   double tmp10_ = ElSquare(tmp1_);
   double tmp11_ = mLocRegDistuu2_x - tmp0_;
   double tmp12_ = mLocRegDistuu2_y - tmp2_;
   double tmp13_ = mCompCoord[5];
   double tmp14_ = (tmp11_) * (tmp11_);
   double tmp15_ = (tmp12_) * (tmp12_);
   double tmp16_ = tmp14_ + tmp15_;
   double tmp17_ = mCompCoord[6];
   double tmp18_ = (tmp16_) * (tmp16_);
   double tmp19_ = mCompCoord[7];
   double tmp20_ = tmp18_ * (tmp16_);
   double tmp21_ = mCompCoord[8];
   double tmp22_ = tmp20_ * (tmp16_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = ElSquare(tmp11_);
   double tmp25_ = mCompCoord[10];
   double tmp26_ = mCompCoord[11];
   double tmp27_ = mCompCoord[12];
   double tmp28_ = mCompCoord[13];
   double tmp29_ = mLocRegDistuu3_x - tmp0_;
   double tmp30_ = mLocRegDistuu3_y - tmp2_;
   double tmp31_ = (tmp29_) * (tmp29_);
   double tmp32_ = (tmp30_) * (tmp30_);
   double tmp33_ = tmp31_ + tmp32_;
   double tmp34_ = (tmp33_) * (tmp33_);
   double tmp35_ = tmp34_ * (tmp33_);
   double tmp36_ = tmp35_ * (tmp33_);
   double tmp37_ = ElSquare(tmp29_);
   double tmp38_ = (tmp6_) * tmp13_;
   double tmp39_ = 1 + tmp38_;
   double tmp40_ = tmp7_ * tmp17_;
   double tmp41_ = tmp39_ + tmp40_;
   double tmp42_ = tmp8_ * tmp19_;
   double tmp43_ = tmp41_ + tmp42_;
   double tmp44_ = tmp9_ * tmp21_;
   double tmp45_ = tmp43_ + tmp44_;
   double tmp46_ = tmp9_ * (tmp6_);
   double tmp47_ = tmp46_ * tmp23_;
   double tmp48_ = tmp45_ + tmp47_;
   double tmp49_ = -(1);
   double tmp50_ = tmp49_ * (tmp1_);
   double tmp51_ = tmp50_ + tmp50_;
   double tmp52_ = (tmp51_) * (tmp6_);
   double tmp53_ = tmp52_ + tmp52_;
   double tmp54_ = (tmp53_) * (tmp6_);
   double tmp55_ = (tmp51_) * tmp7_;
   double tmp56_ = tmp54_ + tmp55_;
   double tmp57_ = (tmp56_) * (tmp6_);
   double tmp58_ = (tmp51_) * tmp8_;
   double tmp59_ = tmp57_ + tmp58_;
   double tmp60_ = 2 * tmp49_;
   double tmp61_ = tmp60_ * (tmp1_);
   double tmp62_ = (tmp16_) * tmp13_;
   double tmp63_ = 1 + tmp62_;
   double tmp64_ = tmp18_ * tmp17_;
   double tmp65_ = tmp63_ + tmp64_;
   double tmp66_ = tmp20_ * tmp19_;
   double tmp67_ = tmp65_ + tmp66_;
   double tmp68_ = tmp22_ * tmp21_;
   double tmp69_ = tmp67_ + tmp68_;
   double tmp70_ = tmp22_ * (tmp16_);
   double tmp71_ = tmp70_ * tmp23_;
   double tmp72_ = tmp69_ + tmp71_;
   double tmp73_ = tmp49_ * (tmp11_);
   double tmp74_ = tmp73_ + tmp73_;
   double tmp75_ = (tmp74_) * (tmp16_);
   double tmp76_ = tmp75_ + tmp75_;
   double tmp77_ = (tmp76_) * (tmp16_);
   double tmp78_ = (tmp74_) * tmp18_;
   double tmp79_ = tmp77_ + tmp78_;
   double tmp80_ = (tmp79_) * (tmp16_);
   double tmp81_ = (tmp74_) * tmp20_;
   double tmp82_ = tmp80_ + tmp81_;
   double tmp83_ = tmp60_ * (tmp11_);
   double tmp84_ = tmp49_ * 2;
   double tmp85_ = tmp49_ * tmp27_;
   double tmp86_ = (tmp33_) * tmp13_;
   double tmp87_ = 1 + tmp86_;
   double tmp88_ = tmp34_ * tmp17_;
   double tmp89_ = tmp87_ + tmp88_;
   double tmp90_ = tmp35_ * tmp19_;
   double tmp91_ = tmp89_ + tmp90_;
   double tmp92_ = tmp36_ * tmp21_;
   double tmp93_ = tmp91_ + tmp92_;
   double tmp94_ = tmp36_ * (tmp33_);
   double tmp95_ = tmp94_ * tmp23_;
   double tmp96_ = tmp93_ + tmp95_;
   double tmp97_ = tmp49_ * (tmp29_);
   double tmp98_ = tmp97_ + tmp97_;
   double tmp99_ = (tmp98_) * (tmp33_);
   double tmp100_ = tmp99_ + tmp99_;
   double tmp101_ = (tmp100_) * (tmp33_);
   double tmp102_ = (tmp98_) * tmp34_;
   double tmp103_ = tmp101_ + tmp102_;
   double tmp104_ = (tmp103_) * (tmp33_);
   double tmp105_ = (tmp98_) * tmp35_;
   double tmp106_ = tmp104_ + tmp105_;
   double tmp107_ = tmp60_ * (tmp29_);
   double tmp108_ = tmp49_ * (tmp3_);
   double tmp109_ = tmp108_ + tmp108_;
   double tmp110_ = (tmp109_) * (tmp6_);
   double tmp111_ = tmp110_ + tmp110_;
   double tmp112_ = (tmp111_) * (tmp6_);
   double tmp113_ = (tmp109_) * tmp7_;
   double tmp114_ = tmp112_ + tmp113_;
   double tmp115_ = (tmp114_) * (tmp6_);
   double tmp116_ = (tmp109_) * tmp8_;
   double tmp117_ = tmp115_ + tmp116_;
   double tmp118_ = 2 * (tmp1_);
   double tmp119_ = tmp49_ * (tmp12_);
   double tmp120_ = tmp119_ + tmp119_;
   double tmp121_ = (tmp120_) * (tmp16_);
   double tmp122_ = tmp121_ + tmp121_;
   double tmp123_ = (tmp122_) * (tmp16_);
   double tmp124_ = (tmp120_) * tmp18_;
   double tmp125_ = tmp123_ + tmp124_;
   double tmp126_ = (tmp125_) * (tmp16_);
   double tmp127_ = (tmp120_) * tmp20_;
   double tmp128_ = tmp126_ + tmp127_;
   double tmp129_ = 2 * (tmp11_);
   double tmp130_ = tmp49_ * tmp28_;
   double tmp131_ = tmp49_ * (tmp30_);
   double tmp132_ = tmp131_ + tmp131_;
   double tmp133_ = (tmp132_) * (tmp33_);
   double tmp134_ = tmp133_ + tmp133_;
   double tmp135_ = (tmp134_) * (tmp33_);
   double tmp136_ = (tmp132_) * tmp34_;
   double tmp137_ = tmp135_ + tmp136_;
   double tmp138_ = (tmp137_) * (tmp33_);
   double tmp139_ = (tmp132_) * tmp35_;
   double tmp140_ = tmp138_ + tmp139_;
   double tmp141_ = 2 * (tmp29_);
   double tmp142_ = 2 * tmp10_;
   double tmp143_ = ElSquare(tmp3_);
   double tmp144_ = tmp10_ + tmp143_;
   double tmp145_ = tmp142_ + tmp144_;
   double tmp146_ = 2 * tmp24_;
   double tmp147_ = ElSquare(tmp12_);
   double tmp148_ = tmp24_ + tmp147_;
   double tmp149_ = tmp146_ + tmp148_;
   double tmp150_ = 2 * tmp37_;
   double tmp151_ = ElSquare(tmp30_);
   double tmp152_ = tmp37_ + tmp151_;
   double tmp153_ = tmp150_ + tmp152_;
   double tmp154_ = tmp118_ * (tmp3_);
   double tmp155_ = tmp129_ * (tmp12_);
   double tmp156_ = tmp141_ * (tmp30_);
   double tmp157_ = (tmp51_) * tmp13_;
   double tmp158_ = (tmp53_) * tmp17_;
   double tmp159_ = tmp157_ + tmp158_;
   double tmp160_ = (tmp56_) * tmp19_;
   double tmp161_ = tmp159_ + tmp160_;
   double tmp162_ = (tmp59_) * tmp21_;
   double tmp163_ = tmp161_ + tmp162_;
   double tmp164_ = (tmp59_) * (tmp6_);
   double tmp165_ = (tmp51_) * tmp9_;
   double tmp166_ = tmp164_ + tmp165_;
   double tmp167_ = (tmp166_) * tmp23_;
   double tmp168_ = tmp163_ + tmp167_;
   double tmp169_ = tmp84_ * (tmp3_);
   double tmp170_ = (tmp74_) * tmp13_;
   double tmp171_ = (tmp76_) * tmp17_;
   double tmp172_ = tmp170_ + tmp171_;
   double tmp173_ = (tmp79_) * tmp19_;
   double tmp174_ = tmp172_ + tmp173_;
   double tmp175_ = (tmp82_) * tmp21_;
   double tmp176_ = tmp174_ + tmp175_;
   double tmp177_ = (tmp82_) * (tmp16_);
   double tmp178_ = (tmp74_) * tmp22_;
   double tmp179_ = tmp177_ + tmp178_;
   double tmp180_ = (tmp179_) * tmp23_;
   double tmp181_ = tmp176_ + tmp180_;
   double tmp182_ = tmp84_ * (tmp12_);
   double tmp183_ = (tmp98_) * tmp13_;
   double tmp184_ = (tmp100_) * tmp17_;
   double tmp185_ = tmp183_ + tmp184_;
   double tmp186_ = (tmp103_) * tmp19_;
   double tmp187_ = tmp185_ + tmp186_;
   double tmp188_ = (tmp106_) * tmp21_;
   double tmp189_ = tmp187_ + tmp188_;
   double tmp190_ = (tmp106_) * (tmp33_);
   double tmp191_ = (tmp98_) * tmp36_;
   double tmp192_ = tmp190_ + tmp191_;
   double tmp193_ = (tmp192_) * tmp23_;
   double tmp194_ = tmp189_ + tmp193_;
   double tmp195_ = tmp84_ * (tmp30_);
   double tmp196_ = tmp49_ * (tmp48_);
   double tmp197_ = (tmp109_) * tmp13_;
   double tmp198_ = (tmp111_) * tmp17_;
   double tmp199_ = tmp197_ + tmp198_;
   double tmp200_ = (tmp114_) * tmp19_;
   double tmp201_ = tmp199_ + tmp200_;
   double tmp202_ = (tmp117_) * tmp21_;
   double tmp203_ = tmp201_ + tmp202_;
   double tmp204_ = (tmp117_) * (tmp6_);
   double tmp205_ = (tmp109_) * tmp9_;
   double tmp206_ = tmp204_ + tmp205_;
   double tmp207_ = (tmp206_) * tmp23_;
   double tmp208_ = tmp203_ + tmp207_;
   double tmp209_ = tmp60_ * (tmp3_);
   double tmp210_ = tmp49_ * tmp118_;
   double tmp211_ = tmp49_ * (tmp72_);
   double tmp212_ = (tmp120_) * tmp13_;
   double tmp213_ = (tmp122_) * tmp17_;
   double tmp214_ = tmp212_ + tmp213_;
   double tmp215_ = (tmp125_) * tmp19_;
   double tmp216_ = tmp214_ + tmp215_;
   double tmp217_ = (tmp128_) * tmp21_;
   double tmp218_ = tmp216_ + tmp217_;
   double tmp219_ = (tmp128_) * (tmp16_);
   double tmp220_ = (tmp120_) * tmp22_;
   double tmp221_ = tmp219_ + tmp220_;
   double tmp222_ = (tmp221_) * tmp23_;
   double tmp223_ = tmp218_ + tmp222_;
   double tmp224_ = tmp60_ * (tmp12_);
   double tmp225_ = tmp49_ * tmp129_;
   double tmp226_ = tmp49_ * (tmp96_);
   double tmp227_ = (tmp132_) * tmp13_;
   double tmp228_ = (tmp134_) * tmp17_;
   double tmp229_ = tmp227_ + tmp228_;
   double tmp230_ = (tmp137_) * tmp19_;
   double tmp231_ = tmp229_ + tmp230_;
   double tmp232_ = (tmp140_) * tmp21_;
   double tmp233_ = tmp231_ + tmp232_;
   double tmp234_ = (tmp140_) * (tmp33_);
   double tmp235_ = (tmp132_) * tmp36_;
   double tmp236_ = tmp234_ + tmp235_;
   double tmp237_ = (tmp236_) * tmp23_;
   double tmp238_ = tmp233_ + tmp237_;
   double tmp239_ = tmp60_ * (tmp30_);
   double tmp240_ = tmp49_ * tmp141_;
   double tmp241_ = tmp154_ + tmp155_;
   double tmp242_ = tmp156_ * 2.000000;
   double tmp243_ = (tmp241_) - tmp242_;
   double tmp244_ = 2 * tmp143_;
   double tmp245_ = tmp244_ + tmp144_;
   double tmp246_ = 2 * tmp147_;
   double tmp247_ = tmp246_ + tmp148_;
   double tmp248_ = 2 * tmp151_;
   double tmp249_ = tmp248_ + tmp152_;

  mVal[0] = (tmp0_ + (tmp1_) * (tmp48_) + (tmp145_) * tmp25_ + tmp154_ * tmp26_ + tmp27_ * (tmp1_) + tmp28_ * (tmp3_) + tmp0_ + (tmp11_) * (tmp72_) + (tmp149_) * tmp25_ + tmp155_ * tmp26_ + tmp27_ * (tmp11_) + tmp28_ * (tmp12_)) - (tmp0_ + (tmp29_) * (tmp96_) + (tmp153_) * tmp25_ + tmp156_ * tmp26_ + tmp27_ * (tmp29_) + tmp28_ * (tmp30_)) * 2.000000;

  mCompDer[0][0] = 0;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = (1 + tmp196_ + (tmp168_) * (tmp1_) + (tmp61_ * 2 + tmp61_) * tmp25_ + tmp169_ * tmp26_ + tmp85_ + 1 + tmp211_ + (tmp181_) * (tmp11_) + (tmp83_ * 2 + tmp83_) * tmp25_ + tmp182_ * tmp26_ + tmp85_) - (1 + tmp226_ + (tmp194_) * (tmp29_) + (tmp107_ * 2 + tmp107_) * tmp25_ + tmp195_ * tmp26_ + tmp85_) * 2.000000;
  mCompDer[0][4] = ((tmp208_) * (tmp1_) + tmp209_ * tmp25_ + tmp210_ * tmp26_ + tmp130_ + (tmp223_) * (tmp11_) + tmp224_ * tmp25_ + tmp225_ * tmp26_ + tmp130_) - ((tmp238_) * (tmp29_) + tmp239_ * tmp25_ + tmp240_ * tmp26_ + tmp130_) * 2.000000;
  mCompDer[0][5] = ((tmp6_) * (tmp1_) + (tmp16_) * (tmp11_)) - (tmp33_) * (tmp29_) * 2.000000;
  mCompDer[0][6] = (tmp7_ * (tmp1_) + tmp18_ * (tmp11_)) - tmp34_ * (tmp29_) * 2.000000;
  mCompDer[0][7] = (tmp8_ * (tmp1_) + tmp20_ * (tmp11_)) - tmp35_ * (tmp29_) * 2.000000;
  mCompDer[0][8] = (tmp9_ * (tmp1_) + tmp22_ * (tmp11_)) - tmp36_ * (tmp29_) * 2.000000;
  mCompDer[0][9] = (tmp46_ * (tmp1_) + tmp70_ * (tmp11_)) - tmp94_ * (tmp29_) * 2.000000;
  mCompDer[0][10] = (tmp145_ + tmp149_) - (tmp153_) * 2.000000;
  mCompDer[0][11] = tmp243_;
  mCompDer[0][12] = (tmp1_ + tmp11_) - (tmp29_) * 2.000000;
  mCompDer[0][13] = (tmp3_ + tmp12_) - (tmp30_) * 2.000000;
  mVal[1] = (tmp2_ + (tmp3_) * (tmp48_) + (tmp245_) * tmp26_ + tmp154_ * tmp25_ + tmp2_ + (tmp12_) * (tmp72_) + (tmp247_) * tmp26_ + tmp155_ * tmp25_) - (tmp2_ + (tmp30_) * (tmp96_) + (tmp249_) * tmp26_ + tmp156_ * tmp25_) * 2.000000;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
  mCompDer[1][3] = ((tmp168_) * (tmp3_) + tmp61_ * tmp26_ + tmp169_ * tmp25_ + (tmp181_) * (tmp12_) + tmp83_ * tmp26_ + tmp182_ * tmp25_) - ((tmp194_) * (tmp30_) + tmp107_ * tmp26_ + tmp195_ * tmp25_) * 2.000000;
  mCompDer[1][4] = (1 + tmp196_ + (tmp208_) * (tmp3_) + (tmp209_ * 2 + tmp209_) * tmp26_ + tmp210_ * tmp25_ + 1 + tmp211_ + (tmp223_) * (tmp12_) + (tmp224_ * 2 + tmp224_) * tmp26_ + tmp225_ * tmp25_) - (1 + tmp226_ + (tmp238_) * (tmp30_) + (tmp239_ * 2 + tmp239_) * tmp26_ + tmp240_ * tmp25_) * 2.000000;
  mCompDer[1][5] = ((tmp6_) * (tmp3_) + (tmp16_) * (tmp12_)) - (tmp33_) * (tmp30_) * 2.000000;
  mCompDer[1][6] = (tmp7_ * (tmp3_) + tmp18_ * (tmp12_)) - tmp34_ * (tmp30_) * 2.000000;
  mCompDer[1][7] = (tmp8_ * (tmp3_) + tmp20_ * (tmp12_)) - tmp35_ * (tmp30_) * 2.000000;
  mCompDer[1][8] = (tmp9_ * (tmp3_) + tmp22_ * (tmp12_)) - tmp36_ * (tmp30_) * 2.000000;
  mCompDer[1][9] = (tmp46_ * (tmp3_) + tmp70_ * (tmp12_)) - tmp94_ * (tmp30_) * 2.000000;
  mCompDer[1][10] = tmp243_;
  mCompDer[1][11] = (tmp245_ + tmp247_) - (tmp249_) * 2.000000;
  mCompDer[1][12] = 0;
  mCompDer[1][13] = 0;
}


void cREgDistDxx_DRad5APFraser::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistDxx_DRad5APFraser Has no Der Sec");
}

void cREgDistDxx_DRad5APFraser::SetRegDistuu1_x(double aVal){ mLocRegDistuu1_x = aVal;}
void cREgDistDxx_DRad5APFraser::SetRegDistuu1_y(double aVal){ mLocRegDistuu1_y = aVal;}
void cREgDistDxx_DRad5APFraser::SetRegDistuu2_x(double aVal){ mLocRegDistuu2_x = aVal;}
void cREgDistDxx_DRad5APFraser::SetRegDistuu2_y(double aVal){ mLocRegDistuu2_y = aVal;}
void cREgDistDxx_DRad5APFraser::SetRegDistuu3_x(double aVal){ mLocRegDistuu3_x = aVal;}
void cREgDistDxx_DRad5APFraser::SetRegDistuu3_y(double aVal){ mLocRegDistuu3_y = aVal;}



double * cREgDistDxx_DRad5APFraser::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "RegDistuu1_x") return & mLocRegDistuu1_x;
   if (aName == "RegDistuu1_y") return & mLocRegDistuu1_y;
   if (aName == "RegDistuu2_x") return & mLocRegDistuu2_x;
   if (aName == "RegDistuu2_y") return & mLocRegDistuu2_y;
   if (aName == "RegDistuu3_x") return & mLocRegDistuu3_x;
   if (aName == "RegDistuu3_y") return & mLocRegDistuu3_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistDxx_DRad5APFraser::mTheAuto("cREgDistDxx_DRad5APFraser",cREgDistDxx_DRad5APFraser::Alloc);


cElCompiledFonc *  cREgDistDxx_DRad5APFraser::Alloc()
{  return new cREgDistDxx_DRad5APFraser();
}


