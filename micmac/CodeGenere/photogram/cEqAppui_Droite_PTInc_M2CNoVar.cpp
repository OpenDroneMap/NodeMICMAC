// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cEqAppui_Droite_PTInc_M2CNoVar.h"


cEqAppui_Droite_PTInc_M2CNoVar::cEqAppui_Droite_PTInc_M2CNoVar():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Orient",0,6));
   AddIntRef (cIncIntervale("Tmp_PTer",6,9));
   Close(false);
}



void cEqAppui_Droite_PTInc_M2CNoVar::ComputeVal()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = mCompCoord[6];
   double tmp8_ = mCompCoord[3];
   double tmp9_ = tmp7_-tmp8_;
   double tmp10_ = sin(tmp6_);
   double tmp11_ = -(tmp10_);
   double tmp12_ = -(tmp5_);
   double tmp13_ = cos(tmp6_);
   double tmp14_ = mCompCoord[7];
   double tmp15_ = mCompCoord[4];
   double tmp16_ = tmp14_-tmp15_;
   double tmp17_ = mCompCoord[8];
   double tmp18_ = mCompCoord[5];
   double tmp19_ = tmp17_-tmp18_;
   double tmp20_ = -(tmp3_);
   double tmp21_ = tmp4_*tmp12_;
   double tmp22_ = tmp3_*tmp12_;
   double tmp23_ = tmp20_*tmp11_;
   double tmp24_ = tmp21_*tmp13_;
   double tmp25_ = tmp23_+tmp24_;
   double tmp26_ = (tmp25_)*(tmp9_);
   double tmp27_ = tmp4_*tmp11_;
   double tmp28_ = tmp22_*tmp13_;
   double tmp29_ = tmp27_+tmp28_;
   double tmp30_ = (tmp29_)*(tmp16_);
   double tmp31_ = tmp26_+tmp30_;
   double tmp32_ = tmp2_*tmp13_;
   double tmp33_ = tmp32_*(tmp19_);
   double tmp34_ = tmp31_+tmp33_;
   double tmp35_ = 1.000000/(tmp34_);

  mVal[0] = (mLocXIm-cos(mLocYIm)*(tmp4_*tmp2_*(tmp9_)+tmp3_*tmp2_*(tmp16_)+tmp5_*(tmp19_))*(tmp35_)-sin(mLocYIm)*((tmp20_*tmp13_+tmp21_*tmp10_)*(tmp9_)+(tmp4_*tmp13_+tmp22_*tmp10_)*(tmp16_)+tmp2_*tmp10_*(tmp19_))*(tmp35_))*mLocScNorm;

}


void cEqAppui_Droite_PTInc_M2CNoVar::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = mCompCoord[6];
   double tmp8_ = mCompCoord[3];
   double tmp9_ = tmp7_-tmp8_;
   double tmp10_ = sin(tmp6_);
   double tmp11_ = -(tmp10_);
   double tmp12_ = -(tmp5_);
   double tmp13_ = cos(tmp6_);
   double tmp14_ = mCompCoord[7];
   double tmp15_ = mCompCoord[4];
   double tmp16_ = tmp14_-tmp15_;
   double tmp17_ = mCompCoord[8];
   double tmp18_ = mCompCoord[5];
   double tmp19_ = tmp17_-tmp18_;
   double tmp20_ = -(tmp3_);
   double tmp21_ = tmp4_*tmp12_;
   double tmp22_ = tmp3_*tmp12_;
   double tmp23_ = tmp20_*tmp11_;
   double tmp24_ = tmp21_*tmp13_;
   double tmp25_ = tmp23_+tmp24_;
   double tmp26_ = (tmp25_)*(tmp9_);
   double tmp27_ = tmp4_*tmp11_;
   double tmp28_ = tmp22_*tmp13_;
   double tmp29_ = tmp27_+tmp28_;
   double tmp30_ = (tmp29_)*(tmp16_);
   double tmp31_ = tmp26_+tmp30_;
   double tmp32_ = tmp2_*tmp13_;
   double tmp33_ = tmp32_*(tmp19_);
   double tmp34_ = tmp31_+tmp33_;
   double tmp35_ = 1.000000/(tmp34_);
   double tmp36_ = tmp4_*tmp2_;
   double tmp37_ = -(1);
   double tmp38_ = tmp37_*tmp3_;
   double tmp39_ = tmp36_*(tmp9_);
   double tmp40_ = tmp3_*tmp2_;
   double tmp41_ = tmp40_*(tmp16_);
   double tmp42_ = tmp39_+tmp41_;
   double tmp43_ = tmp5_*(tmp19_);
   double tmp44_ = tmp42_+tmp43_;
   double tmp45_ = cos(mLocYIm);
   double tmp46_ = -(tmp4_);
   double tmp47_ = tmp38_*tmp12_;
   double tmp48_ = tmp21_*tmp10_;
   double tmp49_ = tmp46_*tmp11_;
   double tmp50_ = tmp47_*tmp13_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)*(tmp9_);
   double tmp53_ = tmp38_*tmp11_;
   double tmp54_ = tmp53_+tmp24_;
   double tmp55_ = (tmp54_)*(tmp16_);
   double tmp56_ = tmp52_+tmp55_;
   double tmp57_ = -(tmp56_);
   double tmp58_ = ElSquare(tmp34_);
   double tmp59_ = tmp57_/tmp58_;
   double tmp60_ = tmp20_*tmp13_;
   double tmp61_ = tmp60_+tmp48_;
   double tmp62_ = (tmp61_)*(tmp9_);
   double tmp63_ = tmp4_*tmp13_;
   double tmp64_ = tmp22_*tmp10_;
   double tmp65_ = tmp63_+tmp64_;
   double tmp66_ = (tmp65_)*(tmp16_);
   double tmp67_ = tmp62_+tmp66_;
   double tmp68_ = tmp2_*tmp10_;
   double tmp69_ = tmp68_*(tmp19_);
   double tmp70_ = tmp67_+tmp69_;
   double tmp71_ = sin(mLocYIm);
   double tmp72_ = tmp37_*tmp5_;
   double tmp73_ = -(tmp2_);
   double tmp74_ = tmp73_*tmp4_;
   double tmp75_ = tmp73_*tmp3_;
   double tmp76_ = tmp74_*tmp13_;
   double tmp77_ = tmp76_*(tmp9_);
   double tmp78_ = tmp75_*tmp13_;
   double tmp79_ = tmp78_*(tmp16_);
   double tmp80_ = tmp77_+tmp79_;
   double tmp81_ = tmp72_*tmp13_;
   double tmp82_ = tmp81_*(tmp19_);
   double tmp83_ = tmp80_+tmp82_;
   double tmp84_ = -(tmp83_);
   double tmp85_ = tmp84_/tmp58_;
   double tmp86_ = -(tmp13_);
   double tmp87_ = tmp37_*tmp10_;
   double tmp88_ = tmp86_*tmp20_;
   double tmp89_ = tmp87_*tmp21_;
   double tmp90_ = tmp88_+tmp89_;
   double tmp91_ = (tmp90_)*(tmp9_);
   double tmp92_ = tmp86_*tmp4_;
   double tmp93_ = tmp87_*tmp22_;
   double tmp94_ = tmp92_+tmp93_;
   double tmp95_ = (tmp94_)*(tmp16_);
   double tmp96_ = tmp91_+tmp95_;
   double tmp97_ = tmp87_*tmp2_;
   double tmp98_ = tmp97_*(tmp19_);
   double tmp99_ = tmp96_+tmp98_;
   double tmp100_ = -(tmp99_);
   double tmp101_ = tmp100_/tmp58_;
   double tmp102_ = tmp37_*(tmp25_);
   double tmp103_ = -(tmp102_);
   double tmp104_ = tmp103_/tmp58_;
   double tmp105_ = tmp37_*(tmp29_);
   double tmp106_ = -(tmp105_);
   double tmp107_ = tmp106_/tmp58_;
   double tmp108_ = tmp37_*tmp32_;
   double tmp109_ = -(tmp108_);
   double tmp110_ = tmp109_/tmp58_;
   double tmp111_ = -(tmp25_);
   double tmp112_ = tmp111_/tmp58_;
   double tmp113_ = -(tmp29_);
   double tmp114_ = tmp113_/tmp58_;
   double tmp115_ = -(tmp32_);
   double tmp116_ = tmp115_/tmp58_;

  mVal[0] = (mLocXIm-tmp45_*(tmp44_)*(tmp35_)-tmp71_*(tmp70_)*(tmp35_))*mLocScNorm;

  mCompDer[0][0] = (-(((tmp38_*tmp2_*(tmp9_)+tmp36_*(tmp16_))*(tmp35_)+(tmp59_)*(tmp44_))*tmp45_)-(((tmp46_*tmp13_+tmp47_*tmp10_)*(tmp9_)+(tmp38_*tmp13_+tmp48_)*(tmp16_))*(tmp35_)+(tmp59_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][1] = (-(((tmp72_*tmp4_*(tmp9_)+tmp72_*tmp3_*(tmp16_)+tmp2_*(tmp19_))*(tmp35_)+(tmp85_)*(tmp44_))*tmp45_)-((tmp74_*tmp10_*(tmp9_)+tmp75_*tmp10_*(tmp16_)+tmp72_*tmp10_*(tmp19_))*(tmp35_)+(tmp85_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][2] = (-((tmp101_)*(tmp44_)*tmp45_)-(((tmp87_*tmp20_+tmp13_*tmp21_)*(tmp9_)+(tmp87_*tmp4_+tmp13_*tmp22_)*(tmp16_)+tmp13_*tmp2_*(tmp19_))*(tmp35_)+(tmp101_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][3] = (-((tmp37_*tmp36_*(tmp35_)+(tmp104_)*(tmp44_))*tmp45_)-(tmp37_*(tmp61_)*(tmp35_)+(tmp104_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][4] = (-((tmp37_*tmp40_*(tmp35_)+(tmp107_)*(tmp44_))*tmp45_)-(tmp37_*(tmp65_)*(tmp35_)+(tmp107_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][5] = (-((tmp72_*(tmp35_)+(tmp110_)*(tmp44_))*tmp45_)-(tmp37_*tmp68_*(tmp35_)+(tmp110_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][6] = (-((tmp36_*(tmp35_)+(tmp112_)*(tmp44_))*tmp45_)-((tmp61_)*(tmp35_)+(tmp112_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][7] = (-((tmp40_*(tmp35_)+(tmp114_)*(tmp44_))*tmp45_)-((tmp65_)*(tmp35_)+(tmp114_)*(tmp70_))*tmp71_)*mLocScNorm;
  mCompDer[0][8] = (-((tmp5_*(tmp35_)+(tmp116_)*(tmp44_))*tmp45_)-(tmp68_*(tmp35_)+(tmp116_)*(tmp70_))*tmp71_)*mLocScNorm;
}


void cEqAppui_Droite_PTInc_M2CNoVar::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_Droite_PTInc_M2CNoVar Has no Der Sec");
}

void cEqAppui_Droite_PTInc_M2CNoVar::SetScNorm(double aVal){ mLocScNorm = aVal;}
void cEqAppui_Droite_PTInc_M2CNoVar::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_Droite_PTInc_M2CNoVar::SetYIm(double aVal){ mLocYIm = aVal;}



double * cEqAppui_Droite_PTInc_M2CNoVar::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "ScNorm") return & mLocScNorm;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "YIm") return & mLocYIm;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_Droite_PTInc_M2CNoVar::mTheAuto("cEqAppui_Droite_PTInc_M2CNoVar",cEqAppui_Droite_PTInc_M2CNoVar::Alloc);


cElCompiledFonc *  cEqAppui_Droite_PTInc_M2CNoVar::Alloc()
{  return new cEqAppui_Droite_PTInc_M2CNoVar();
}


