// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cGen2DBundleAtRot_Deg2.h"


cGen2DBundleAtRot_Deg2::cGen2DBundleAtRot_Deg2():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("CX",3,9));
   AddIntRef (cIncIntervale("CY",9,15));
   AddIntRef (cIncIntervale("Tmp_PTer",0,3));
   Close(false);
}



void cGen2DBundleAtRot_Deg2::ComputeVal()
{
   double tmp0_ = mLocRotPt_y-mLocCentrAttR_y;
   double tmp1_ = (tmp0_)/mLocAmplAttR;
   double tmp2_ = mLocRotPt_x-mLocCentrAttR_x;
   double tmp3_ = (tmp2_)/mLocAmplAttR;
   double tmp4_ = ElSquare(tmp1_);
   double tmp5_ = ElSquare(tmp3_);
   double tmp6_ = mCompCoord[0];
   double tmp7_ = mCompCoord[1];
   double tmp8_ = mCompCoord[2];

  mVal[0] = (mCompCoord[3]+mCompCoord[4]*(tmp1_)+mCompCoord[5]*(tmp3_)+mCompCoord[6]*tmp4_+mCompCoord[7]*(tmp3_)*(tmp1_)+mCompCoord[8]*tmp5_)-mLocDepR1_x*tmp6_-mLocDepR2_x*tmp7_-mLocDepR3_x*tmp8_;

  mVal[1] = (mCompCoord[9]+mCompCoord[10]*(tmp1_)+mCompCoord[11]*(tmp3_)+mCompCoord[12]*tmp4_+mCompCoord[13]*(tmp3_)*(tmp1_)+mCompCoord[14]*tmp5_)-mLocDepR1_y*tmp6_-mLocDepR2_y*tmp7_-mLocDepR3_y*tmp8_;

}


void cGen2DBundleAtRot_Deg2::ComputeValDeriv()
{
   double tmp0_ = mLocRotPt_y-mLocCentrAttR_y;
   double tmp1_ = (tmp0_)/mLocAmplAttR;
   double tmp2_ = mLocRotPt_x-mLocCentrAttR_x;
   double tmp3_ = (tmp2_)/mLocAmplAttR;
   double tmp4_ = ElSquare(tmp1_);
   double tmp5_ = ElSquare(tmp3_);
   double tmp6_ = mCompCoord[0];
   double tmp7_ = mCompCoord[1];
   double tmp8_ = mCompCoord[2];
   double tmp9_ = (tmp3_)*(tmp1_);

  mVal[0] = (mCompCoord[3]+mCompCoord[4]*(tmp1_)+mCompCoord[5]*(tmp3_)+mCompCoord[6]*tmp4_+mCompCoord[7]*(tmp3_)*(tmp1_)+mCompCoord[8]*tmp5_)-mLocDepR1_x*tmp6_-mLocDepR2_x*tmp7_-mLocDepR3_x*tmp8_;

  mCompDer[0][0] = -(mLocDepR1_x);
  mCompDer[0][1] = -(mLocDepR2_x);
  mCompDer[0][2] = -(mLocDepR3_x);
  mCompDer[0][3] = 1;
  mCompDer[0][4] = tmp1_;
  mCompDer[0][5] = tmp3_;
  mCompDer[0][6] = tmp4_;
  mCompDer[0][7] = tmp9_;
  mCompDer[0][8] = tmp5_;
  mCompDer[0][9] = 0;
  mCompDer[0][10] = 0;
  mCompDer[0][11] = 0;
  mCompDer[0][12] = 0;
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mVal[1] = (mCompCoord[9]+mCompCoord[10]*(tmp1_)+mCompCoord[11]*(tmp3_)+mCompCoord[12]*tmp4_+mCompCoord[13]*(tmp3_)*(tmp1_)+mCompCoord[14]*tmp5_)-mLocDepR1_y*tmp6_-mLocDepR2_y*tmp7_-mLocDepR3_y*tmp8_;

  mCompDer[1][0] = -(mLocDepR1_y);
  mCompDer[1][1] = -(mLocDepR2_y);
  mCompDer[1][2] = -(mLocDepR3_y);
  mCompDer[1][3] = 0;
  mCompDer[1][4] = 0;
  mCompDer[1][5] = 0;
  mCompDer[1][6] = 0;
  mCompDer[1][7] = 0;
  mCompDer[1][8] = 0;
  mCompDer[1][9] = 1;
  mCompDer[1][10] = tmp1_;
  mCompDer[1][11] = tmp3_;
  mCompDer[1][12] = tmp4_;
  mCompDer[1][13] = tmp9_;
  mCompDer[1][14] = tmp5_;
}


void cGen2DBundleAtRot_Deg2::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cGen2DBundleAtRot_Deg2 Has no Der Sec");
}

void cGen2DBundleAtRot_Deg2::SetAmplAttR(double aVal){ mLocAmplAttR = aVal;}
void cGen2DBundleAtRot_Deg2::SetCentrAttR_x(double aVal){ mLocCentrAttR_x = aVal;}
void cGen2DBundleAtRot_Deg2::SetCentrAttR_y(double aVal){ mLocCentrAttR_y = aVal;}
void cGen2DBundleAtRot_Deg2::SetDepR1_x(double aVal){ mLocDepR1_x = aVal;}
void cGen2DBundleAtRot_Deg2::SetDepR1_y(double aVal){ mLocDepR1_y = aVal;}
void cGen2DBundleAtRot_Deg2::SetDepR2_x(double aVal){ mLocDepR2_x = aVal;}
void cGen2DBundleAtRot_Deg2::SetDepR2_y(double aVal){ mLocDepR2_y = aVal;}
void cGen2DBundleAtRot_Deg2::SetDepR3_x(double aVal){ mLocDepR3_x = aVal;}
void cGen2DBundleAtRot_Deg2::SetDepR3_y(double aVal){ mLocDepR3_y = aVal;}
void cGen2DBundleAtRot_Deg2::SetRotPt_x(double aVal){ mLocRotPt_x = aVal;}
void cGen2DBundleAtRot_Deg2::SetRotPt_y(double aVal){ mLocRotPt_y = aVal;}



double * cGen2DBundleAtRot_Deg2::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "AmplAttR") return & mLocAmplAttR;
   if (aName == "CentrAttR_x") return & mLocCentrAttR_x;
   if (aName == "CentrAttR_y") return & mLocCentrAttR_y;
   if (aName == "DepR1_x") return & mLocDepR1_x;
   if (aName == "DepR1_y") return & mLocDepR1_y;
   if (aName == "DepR2_x") return & mLocDepR2_x;
   if (aName == "DepR2_y") return & mLocDepR2_y;
   if (aName == "DepR3_x") return & mLocDepR3_x;
   if (aName == "DepR3_y") return & mLocDepR3_y;
   if (aName == "RotPt_x") return & mLocRotPt_x;
   if (aName == "RotPt_y") return & mLocRotPt_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cGen2DBundleAtRot_Deg2::mTheAuto("cGen2DBundleAtRot_Deg2",cGen2DBundleAtRot_Deg2::Alloc);


cElCompiledFonc *  cGen2DBundleAtRot_Deg2::Alloc()
{  return new cGen2DBundleAtRot_Deg2();
}


