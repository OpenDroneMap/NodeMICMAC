// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cEqAppui_PTInc_M2CPolyn1.h"


cEqAppui_PTInc_M2CPolyn1::cEqAppui_PTInc_M2CPolyn1():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,5));
   AddIntRef (cIncIntervale("Orient",5,11));
   AddIntRef (cIncIntervale("Tmp_PTer",11,14));
   Close(false);
}



void cEqAppui_PTInc_M2CPolyn1::ComputeVal()
{
   double tmp0_ = mCompCoord[5];
   double tmp1_ = mCompCoord[6];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[7];
   double tmp7_ = mCompCoord[11];
   double tmp8_ = mCompCoord[8];
   double tmp9_ = tmp7_ - tmp8_;
   double tmp10_ = sin(tmp6_);
   double tmp11_ = -(tmp10_);
   double tmp12_ = -(tmp5_);
   double tmp13_ = cos(tmp6_);
   double tmp14_ = mCompCoord[12];
   double tmp15_ = mCompCoord[9];
   double tmp16_ = tmp14_ - tmp15_;
   double tmp17_ = mCompCoord[13];
   double tmp18_ = mCompCoord[10];
   double tmp19_ = tmp17_ - tmp18_;
   double tmp20_ = -(tmp3_);
   double tmp21_ = tmp4_ * tmp12_;
   double tmp22_ = tmp3_ * tmp12_;
   double tmp23_ = mCompCoord[0];
   double tmp24_ = tmp20_ * tmp11_;
   double tmp25_ = tmp21_ * tmp13_;
   double tmp26_ = tmp24_ + tmp25_;
   double tmp27_ = (tmp26_) * (tmp9_);
   double tmp28_ = tmp4_ * tmp11_;
   double tmp29_ = tmp22_ * tmp13_;
   double tmp30_ = tmp28_ + tmp29_;
   double tmp31_ = (tmp30_) * (tmp16_);
   double tmp32_ = tmp27_ + tmp31_;
   double tmp33_ = tmp2_ * tmp13_;
   double tmp34_ = tmp33_ * (tmp19_);
   double tmp35_ = tmp32_ + tmp34_;
   double tmp36_ = tmp23_ / (tmp35_);
   double tmp37_ = mCompCoord[3];
   double tmp38_ = tmp20_ * tmp13_;
   double tmp39_ = tmp21_ * tmp10_;
   double tmp40_ = tmp38_ + tmp39_;
   double tmp41_ = (tmp40_) * (tmp9_);
   double tmp42_ = tmp4_ * tmp13_;
   double tmp43_ = tmp22_ * tmp10_;
   double tmp44_ = tmp42_ + tmp43_;
   double tmp45_ = (tmp44_) * (tmp16_);
   double tmp46_ = tmp41_ + tmp45_;
   double tmp47_ = tmp2_ * tmp10_;
   double tmp48_ = tmp47_ * (tmp19_);
   double tmp49_ = tmp46_ + tmp48_;
   double tmp50_ = (tmp49_) * (tmp36_);
   double tmp51_ = mCompCoord[2];
   double tmp52_ = tmp50_ + tmp51_;
   double tmp53_ = mCompCoord[4];
   double tmp54_ = tmp4_ * tmp2_;
   double tmp55_ = tmp54_ * (tmp9_);
   double tmp56_ = tmp3_ * tmp2_;
   double tmp57_ = tmp56_ * (tmp16_);
   double tmp58_ = tmp55_ + tmp57_;
   double tmp59_ = tmp5_ * (tmp19_);
   double tmp60_ = tmp58_ + tmp59_;
   double tmp61_ = (tmp60_) * (tmp36_);
   double tmp62_ = mCompCoord[1];
   double tmp63_ = tmp61_ + tmp62_;

  mVal[0] = (((1 + tmp37_) * (tmp63_) + tmp53_ * (tmp52_)) - mLocXIm) * mLocScNorm;

  mVal[1] = (((1 - tmp37_) * (tmp52_) + tmp53_ * (tmp63_)) - mLocYIm) * mLocScNorm;

}


void cEqAppui_PTInc_M2CPolyn1::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[5];
   double tmp1_ = mCompCoord[6];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[7];
   double tmp7_ = mCompCoord[11];
   double tmp8_ = mCompCoord[8];
   double tmp9_ = tmp7_ - tmp8_;
   double tmp10_ = sin(tmp6_);
   double tmp11_ = -(tmp10_);
   double tmp12_ = -(tmp5_);
   double tmp13_ = cos(tmp6_);
   double tmp14_ = mCompCoord[12];
   double tmp15_ = mCompCoord[9];
   double tmp16_ = tmp14_ - tmp15_;
   double tmp17_ = mCompCoord[13];
   double tmp18_ = mCompCoord[10];
   double tmp19_ = tmp17_ - tmp18_;
   double tmp20_ = -(tmp3_);
   double tmp21_ = tmp4_ * tmp12_;
   double tmp22_ = tmp3_ * tmp12_;
   double tmp23_ = mCompCoord[0];
   double tmp24_ = tmp20_ * tmp11_;
   double tmp25_ = tmp21_ * tmp13_;
   double tmp26_ = tmp24_ + tmp25_;
   double tmp27_ = (tmp26_) * (tmp9_);
   double tmp28_ = tmp4_ * tmp11_;
   double tmp29_ = tmp22_ * tmp13_;
   double tmp30_ = tmp28_ + tmp29_;
   double tmp31_ = (tmp30_) * (tmp16_);
   double tmp32_ = tmp27_ + tmp31_;
   double tmp33_ = tmp2_ * tmp13_;
   double tmp34_ = tmp33_ * (tmp19_);
   double tmp35_ = tmp32_ + tmp34_;
   double tmp36_ = tmp23_ / (tmp35_);
   double tmp37_ = tmp4_ * tmp2_;
   double tmp38_ = tmp37_ * (tmp9_);
   double tmp39_ = tmp3_ * tmp2_;
   double tmp40_ = tmp39_ * (tmp16_);
   double tmp41_ = tmp38_ + tmp40_;
   double tmp42_ = tmp5_ * (tmp19_);
   double tmp43_ = tmp41_ + tmp42_;
   double tmp44_ = mCompCoord[3];
   double tmp45_ = 1 + tmp44_;
   double tmp46_ = ElSquare(tmp35_);
   double tmp47_ = (tmp35_) / tmp46_;
   double tmp48_ = tmp20_ * tmp13_;
   double tmp49_ = tmp21_ * tmp10_;
   double tmp50_ = tmp48_ + tmp49_;
   double tmp51_ = (tmp50_) * (tmp9_);
   double tmp52_ = tmp4_ * tmp13_;
   double tmp53_ = tmp22_ * tmp10_;
   double tmp54_ = tmp52_ + tmp53_;
   double tmp55_ = (tmp54_) * (tmp16_);
   double tmp56_ = tmp51_ + tmp55_;
   double tmp57_ = tmp2_ * tmp10_;
   double tmp58_ = tmp57_ * (tmp19_);
   double tmp59_ = tmp56_ + tmp58_;
   double tmp60_ = mCompCoord[4];
   double tmp61_ = (tmp43_) * (tmp36_);
   double tmp62_ = mCompCoord[1];
   double tmp63_ = tmp61_ + tmp62_;
   double tmp64_ = (tmp59_) * (tmp36_);
   double tmp65_ = mCompCoord[2];
   double tmp66_ = tmp64_ + tmp65_;
   double tmp67_ = -(1);
   double tmp68_ = tmp67_ * tmp3_;
   double tmp69_ = -(tmp4_);
   double tmp70_ = tmp68_ * tmp12_;
   double tmp71_ = tmp69_ * tmp11_;
   double tmp72_ = tmp70_ * tmp13_;
   double tmp73_ = tmp71_ + tmp72_;
   double tmp74_ = (tmp73_) * (tmp9_);
   double tmp75_ = tmp68_ * tmp11_;
   double tmp76_ = tmp75_ + tmp25_;
   double tmp77_ = (tmp76_) * (tmp16_);
   double tmp78_ = tmp74_ + tmp77_;
   double tmp79_ = tmp23_ * (tmp78_);
   double tmp80_ = -(tmp79_);
   double tmp81_ = tmp80_ / tmp46_;
   double tmp82_ = tmp67_ * tmp5_;
   double tmp83_ = -(tmp2_);
   double tmp84_ = tmp83_ * tmp4_;
   double tmp85_ = tmp83_ * tmp3_;
   double tmp86_ = tmp84_ * tmp13_;
   double tmp87_ = tmp86_ * (tmp9_);
   double tmp88_ = tmp85_ * tmp13_;
   double tmp89_ = tmp88_ * (tmp16_);
   double tmp90_ = tmp87_ + tmp89_;
   double tmp91_ = tmp82_ * tmp13_;
   double tmp92_ = tmp91_ * (tmp19_);
   double tmp93_ = tmp90_ + tmp92_;
   double tmp94_ = tmp23_ * (tmp93_);
   double tmp95_ = -(tmp94_);
   double tmp96_ = tmp95_ / tmp46_;
   double tmp97_ = -(tmp13_);
   double tmp98_ = tmp67_ * tmp10_;
   double tmp99_ = tmp97_ * tmp20_;
   double tmp100_ = tmp98_ * tmp21_;
   double tmp101_ = tmp99_ + tmp100_;
   double tmp102_ = (tmp101_) * (tmp9_);
   double tmp103_ = tmp97_ * tmp4_;
   double tmp104_ = tmp98_ * tmp22_;
   double tmp105_ = tmp103_ + tmp104_;
   double tmp106_ = (tmp105_) * (tmp16_);
   double tmp107_ = tmp102_ + tmp106_;
   double tmp108_ = tmp98_ * tmp2_;
   double tmp109_ = tmp108_ * (tmp19_);
   double tmp110_ = tmp107_ + tmp109_;
   double tmp111_ = tmp23_ * (tmp110_);
   double tmp112_ = -(tmp111_);
   double tmp113_ = tmp112_ / tmp46_;
   double tmp114_ = tmp67_ * (tmp26_);
   double tmp115_ = tmp23_ * tmp114_;
   double tmp116_ = -(tmp115_);
   double tmp117_ = tmp116_ / tmp46_;
   double tmp118_ = tmp67_ * (tmp30_);
   double tmp119_ = tmp23_ * tmp118_;
   double tmp120_ = -(tmp119_);
   double tmp121_ = tmp120_ / tmp46_;
   double tmp122_ = tmp67_ * tmp33_;
   double tmp123_ = tmp23_ * tmp122_;
   double tmp124_ = -(tmp123_);
   double tmp125_ = tmp124_ / tmp46_;
   double tmp126_ = tmp23_ * (tmp26_);
   double tmp127_ = -(tmp126_);
   double tmp128_ = tmp127_ / tmp46_;
   double tmp129_ = tmp23_ * (tmp30_);
   double tmp130_ = -(tmp129_);
   double tmp131_ = tmp130_ / tmp46_;
   double tmp132_ = tmp23_ * tmp33_;
   double tmp133_ = -(tmp132_);
   double tmp134_ = tmp133_ / tmp46_;
   double tmp135_ = (tmp47_) * (tmp59_);
   double tmp136_ = 1 - tmp44_;
   double tmp137_ = (tmp47_) * (tmp43_);
   double tmp138_ = tmp60_ * mLocScNorm;
   double tmp139_ = (tmp63_) * mLocScNorm;
   double tmp140_ = tmp69_ * tmp13_;
   double tmp141_ = tmp70_ * tmp10_;
   double tmp142_ = tmp140_ + tmp141_;
   double tmp143_ = (tmp142_) * (tmp9_);
   double tmp144_ = tmp68_ * tmp13_;
   double tmp145_ = tmp144_ + tmp49_;
   double tmp146_ = (tmp145_) * (tmp16_);
   double tmp147_ = tmp143_ + tmp146_;
   double tmp148_ = (tmp147_) * (tmp36_);
   double tmp149_ = (tmp81_) * (tmp59_);
   double tmp150_ = tmp148_ + tmp149_;
   double tmp151_ = tmp68_ * tmp2_;
   double tmp152_ = tmp151_ * (tmp9_);
   double tmp153_ = tmp37_ * (tmp16_);
   double tmp154_ = tmp152_ + tmp153_;
   double tmp155_ = (tmp154_) * (tmp36_);
   double tmp156_ = (tmp81_) * (tmp43_);
   double tmp157_ = tmp155_ + tmp156_;
   double tmp158_ = tmp84_ * tmp10_;
   double tmp159_ = tmp158_ * (tmp9_);
   double tmp160_ = tmp85_ * tmp10_;
   double tmp161_ = tmp160_ * (tmp16_);
   double tmp162_ = tmp159_ + tmp161_;
   double tmp163_ = tmp82_ * tmp10_;
   double tmp164_ = tmp163_ * (tmp19_);
   double tmp165_ = tmp162_ + tmp164_;
   double tmp166_ = (tmp165_) * (tmp36_);
   double tmp167_ = (tmp96_) * (tmp59_);
   double tmp168_ = tmp166_ + tmp167_;
   double tmp169_ = tmp82_ * tmp4_;
   double tmp170_ = tmp169_ * (tmp9_);
   double tmp171_ = tmp82_ * tmp3_;
   double tmp172_ = tmp171_ * (tmp16_);
   double tmp173_ = tmp170_ + tmp172_;
   double tmp174_ = tmp2_ * (tmp19_);
   double tmp175_ = tmp173_ + tmp174_;
   double tmp176_ = (tmp175_) * (tmp36_);
   double tmp177_ = (tmp96_) * (tmp43_);
   double tmp178_ = tmp176_ + tmp177_;
   double tmp179_ = tmp98_ * tmp20_;
   double tmp180_ = tmp13_ * tmp21_;
   double tmp181_ = tmp179_ + tmp180_;
   double tmp182_ = (tmp181_) * (tmp9_);
   double tmp183_ = tmp98_ * tmp4_;
   double tmp184_ = tmp13_ * tmp22_;
   double tmp185_ = tmp183_ + tmp184_;
   double tmp186_ = (tmp185_) * (tmp16_);
   double tmp187_ = tmp182_ + tmp186_;
   double tmp188_ = tmp13_ * tmp2_;
   double tmp189_ = tmp188_ * (tmp19_);
   double tmp190_ = tmp187_ + tmp189_;
   double tmp191_ = (tmp190_) * (tmp36_);
   double tmp192_ = (tmp113_) * (tmp59_);
   double tmp193_ = tmp191_ + tmp192_;
   double tmp194_ = (tmp113_) * (tmp43_);
   double tmp195_ = tmp67_ * (tmp50_);
   double tmp196_ = tmp195_ * (tmp36_);
   double tmp197_ = (tmp117_) * (tmp59_);
   double tmp198_ = tmp196_ + tmp197_;
   double tmp199_ = tmp67_ * tmp37_;
   double tmp200_ = tmp199_ * (tmp36_);
   double tmp201_ = (tmp117_) * (tmp43_);
   double tmp202_ = tmp200_ + tmp201_;
   double tmp203_ = tmp67_ * (tmp54_);
   double tmp204_ = tmp203_ * (tmp36_);
   double tmp205_ = (tmp121_) * (tmp59_);
   double tmp206_ = tmp204_ + tmp205_;
   double tmp207_ = tmp67_ * tmp39_;
   double tmp208_ = tmp207_ * (tmp36_);
   double tmp209_ = (tmp121_) * (tmp43_);
   double tmp210_ = tmp208_ + tmp209_;
   double tmp211_ = tmp67_ * tmp57_;
   double tmp212_ = tmp211_ * (tmp36_);
   double tmp213_ = (tmp125_) * (tmp59_);
   double tmp214_ = tmp212_ + tmp213_;
   double tmp215_ = tmp82_ * (tmp36_);
   double tmp216_ = (tmp125_) * (tmp43_);
   double tmp217_ = tmp215_ + tmp216_;
   double tmp218_ = (tmp50_) * (tmp36_);
   double tmp219_ = (tmp128_) * (tmp59_);
   double tmp220_ = tmp218_ + tmp219_;
   double tmp221_ = tmp37_ * (tmp36_);
   double tmp222_ = (tmp128_) * (tmp43_);
   double tmp223_ = tmp221_ + tmp222_;
   double tmp224_ = (tmp54_) * (tmp36_);
   double tmp225_ = (tmp131_) * (tmp59_);
   double tmp226_ = tmp224_ + tmp225_;
   double tmp227_ = tmp39_ * (tmp36_);
   double tmp228_ = (tmp131_) * (tmp43_);
   double tmp229_ = tmp227_ + tmp228_;
   double tmp230_ = tmp57_ * (tmp36_);
   double tmp231_ = (tmp134_) * (tmp59_);
   double tmp232_ = tmp230_ + tmp231_;
   double tmp233_ = tmp5_ * (tmp36_);
   double tmp234_ = (tmp134_) * (tmp43_);
   double tmp235_ = tmp233_ + tmp234_;

  mVal[0] = (((tmp45_) * (tmp63_) + tmp60_ * (tmp66_)) - mLocXIm) * mLocScNorm;

  mCompDer[0][0] = (tmp137_ * (tmp45_) + tmp135_ * tmp60_) * mLocScNorm;
  mCompDer[0][1] = (tmp45_) * mLocScNorm;
  mCompDer[0][2] = tmp138_;
  mCompDer[0][3] = tmp139_;
  mCompDer[0][4] = (tmp66_) * mLocScNorm;
  mCompDer[0][5] = ((tmp157_) * (tmp45_) + (tmp150_) * tmp60_) * mLocScNorm;
  mCompDer[0][6] = ((tmp178_) * (tmp45_) + (tmp168_) * tmp60_) * mLocScNorm;
  mCompDer[0][7] = (tmp194_ * (tmp45_) + (tmp193_) * tmp60_) * mLocScNorm;
  mCompDer[0][8] = ((tmp202_) * (tmp45_) + (tmp198_) * tmp60_) * mLocScNorm;
  mCompDer[0][9] = ((tmp210_) * (tmp45_) + (tmp206_) * tmp60_) * mLocScNorm;
  mCompDer[0][10] = ((tmp217_) * (tmp45_) + (tmp214_) * tmp60_) * mLocScNorm;
  mCompDer[0][11] = ((tmp223_) * (tmp45_) + (tmp220_) * tmp60_) * mLocScNorm;
  mCompDer[0][12] = ((tmp229_) * (tmp45_) + (tmp226_) * tmp60_) * mLocScNorm;
  mCompDer[0][13] = ((tmp235_) * (tmp45_) + (tmp232_) * tmp60_) * mLocScNorm;
  mVal[1] = (((tmp136_) * (tmp66_) + tmp60_ * (tmp63_)) - mLocYIm) * mLocScNorm;

  mCompDer[1][0] = (tmp135_ * (tmp136_) + tmp137_ * tmp60_) * mLocScNorm;
  mCompDer[1][1] = tmp138_;
  mCompDer[1][2] = (tmp136_) * mLocScNorm;
  mCompDer[1][3] = tmp67_ * (tmp66_) * mLocScNorm;
  mCompDer[1][4] = tmp139_;
  mCompDer[1][5] = ((tmp150_) * (tmp136_) + (tmp157_) * tmp60_) * mLocScNorm;
  mCompDer[1][6] = ((tmp168_) * (tmp136_) + (tmp178_) * tmp60_) * mLocScNorm;
  mCompDer[1][7] = ((tmp193_) * (tmp136_) + tmp194_ * tmp60_) * mLocScNorm;
  mCompDer[1][8] = ((tmp198_) * (tmp136_) + (tmp202_) * tmp60_) * mLocScNorm;
  mCompDer[1][9] = ((tmp206_) * (tmp136_) + (tmp210_) * tmp60_) * mLocScNorm;
  mCompDer[1][10] = ((tmp214_) * (tmp136_) + (tmp217_) * tmp60_) * mLocScNorm;
  mCompDer[1][11] = ((tmp220_) * (tmp136_) + (tmp223_) * tmp60_) * mLocScNorm;
  mCompDer[1][12] = ((tmp226_) * (tmp136_) + (tmp229_) * tmp60_) * mLocScNorm;
  mCompDer[1][13] = ((tmp232_) * (tmp136_) + (tmp235_) * tmp60_) * mLocScNorm;
}


void cEqAppui_PTInc_M2CPolyn1::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_PTInc_M2CPolyn1 Has no Der Sec");
}

void cEqAppui_PTInc_M2CPolyn1::SetScNorm(double aVal){ mLocScNorm = aVal;}
void cEqAppui_PTInc_M2CPolyn1::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_PTInc_M2CPolyn1::SetYIm(double aVal){ mLocYIm = aVal;}



double * cEqAppui_PTInc_M2CPolyn1::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "ScNorm") return & mLocScNorm;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "YIm") return & mLocYIm;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_PTInc_M2CPolyn1::mTheAuto("cEqAppui_PTInc_M2CPolyn1",cEqAppui_PTInc_M2CPolyn1::Alloc);


cElCompiledFonc *  cEqAppui_PTInc_M2CPolyn1::Alloc()
{  return new cEqAppui_PTInc_M2CPolyn1();
}


