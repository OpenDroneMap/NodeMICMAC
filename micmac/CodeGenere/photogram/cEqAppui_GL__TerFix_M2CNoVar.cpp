// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_GL__TerFix_M2CNoVar.h"


cEqAppui_GL__TerFix_M2CNoVar::cEqAppui_GL__TerFix_M2CNoVar():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Orient",0,6));
   Close(false);
}



void cEqAppui_GL__TerFix_M2CNoVar::ComputeVal()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = cos(tmp0_);
   double tmp4_ = tmp3_*tmp2_;
   double tmp5_ = sin(tmp0_);
   double tmp6_ = tmp5_*tmp2_;
   double tmp7_ = sin(tmp1_);
   double tmp8_ = mCompCoord[2];
   double tmp9_ = sin(tmp8_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp7_);
   double tmp12_ = cos(tmp8_);
   double tmp13_ = mCompCoord[3];
   double tmp14_ = mLocXTer-tmp13_;
   double tmp15_ = -(tmp5_);
   double tmp16_ = tmp15_*tmp10_;
   double tmp17_ = tmp3_*tmp11_;
   double tmp18_ = tmp17_*tmp12_;
   double tmp19_ = tmp16_+tmp18_;
   double tmp20_ = tmp3_*tmp10_;
   double tmp21_ = tmp5_*tmp11_;
   double tmp22_ = tmp21_*tmp12_;
   double tmp23_ = tmp20_+tmp22_;
   double tmp24_ = tmp2_*tmp12_;
   double tmp25_ = mCompCoord[4];
   double tmp26_ = mLocYTer-tmp25_;
   double tmp27_ = mCompCoord[5];
   double tmp28_ = mLocZTer-tmp27_;
   double tmp29_ = tmp15_*tmp12_;
   double tmp30_ = tmp17_*tmp9_;
   double tmp31_ = tmp29_+tmp30_;
   double tmp32_ = tmp3_*tmp12_;
   double tmp33_ = tmp21_*tmp9_;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = tmp2_*tmp9_;
   double tmp36_ = (tmp19_)*mLocGL_0_0;
   double tmp37_ = (tmp23_)*mLocGL_1_0;
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = tmp24_*mLocGL_2_0;
   double tmp40_ = tmp38_+tmp39_;
   double tmp41_ = (tmp40_)*(tmp14_);
   double tmp42_ = (tmp19_)*mLocGL_0_1;
   double tmp43_ = (tmp23_)*mLocGL_1_1;
   double tmp44_ = tmp42_+tmp43_;
   double tmp45_ = tmp24_*mLocGL_2_1;
   double tmp46_ = tmp44_+tmp45_;
   double tmp47_ = (tmp46_)*(tmp26_);
   double tmp48_ = tmp41_+tmp47_;
   double tmp49_ = (tmp19_)*mLocGL_0_2;
   double tmp50_ = (tmp23_)*mLocGL_1_2;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = tmp24_*mLocGL_2_2;
   double tmp53_ = tmp51_+tmp52_;
   double tmp54_ = (tmp53_)*(tmp28_);
   double tmp55_ = tmp48_+tmp54_;
   double tmp56_ = 1.000000/(tmp55_);

  mVal[0] = (((tmp4_*mLocGL_0_0+tmp6_*mLocGL_1_0+tmp7_*mLocGL_2_0)*(tmp14_)+(tmp4_*mLocGL_0_1+tmp6_*mLocGL_1_1+tmp7_*mLocGL_2_1)*(tmp26_)+(tmp4_*mLocGL_0_2+tmp6_*mLocGL_1_2+tmp7_*mLocGL_2_2)*(tmp28_))*(tmp56_)-mLocXIm)*mLocScNorm;

  mVal[1] = ((((tmp31_)*mLocGL_0_0+(tmp34_)*mLocGL_1_0+tmp35_*mLocGL_2_0)*(tmp14_)+((tmp31_)*mLocGL_0_1+(tmp34_)*mLocGL_1_1+tmp35_*mLocGL_2_1)*(tmp26_)+((tmp31_)*mLocGL_0_2+(tmp34_)*mLocGL_1_2+tmp35_*mLocGL_2_2)*(tmp28_))*(tmp56_)-mLocYIm)*mLocScNorm;

}


void cEqAppui_GL__TerFix_M2CNoVar::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = cos(tmp0_);
   double tmp4_ = tmp3_*tmp2_;
   double tmp5_ = sin(tmp0_);
   double tmp6_ = tmp5_*tmp2_;
   double tmp7_ = sin(tmp1_);
   double tmp8_ = mCompCoord[2];
   double tmp9_ = sin(tmp8_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp7_);
   double tmp12_ = cos(tmp8_);
   double tmp13_ = mCompCoord[3];
   double tmp14_ = mLocXTer-tmp13_;
   double tmp15_ = -(tmp5_);
   double tmp16_ = tmp15_*tmp10_;
   double tmp17_ = tmp3_*tmp11_;
   double tmp18_ = tmp17_*tmp12_;
   double tmp19_ = tmp16_+tmp18_;
   double tmp20_ = tmp3_*tmp10_;
   double tmp21_ = tmp5_*tmp11_;
   double tmp22_ = tmp21_*tmp12_;
   double tmp23_ = tmp20_+tmp22_;
   double tmp24_ = tmp2_*tmp12_;
   double tmp25_ = mCompCoord[4];
   double tmp26_ = mLocYTer-tmp25_;
   double tmp27_ = mCompCoord[5];
   double tmp28_ = mLocZTer-tmp27_;
   double tmp29_ = -(1);
   double tmp30_ = tmp29_*tmp5_;
   double tmp31_ = tmp30_*tmp2_;
   double tmp32_ = (tmp19_)*mLocGL_0_0;
   double tmp33_ = (tmp23_)*mLocGL_1_0;
   double tmp34_ = tmp32_+tmp33_;
   double tmp35_ = tmp24_*mLocGL_2_0;
   double tmp36_ = tmp34_+tmp35_;
   double tmp37_ = (tmp36_)*(tmp14_);
   double tmp38_ = (tmp19_)*mLocGL_0_1;
   double tmp39_ = (tmp23_)*mLocGL_1_1;
   double tmp40_ = tmp38_+tmp39_;
   double tmp41_ = tmp24_*mLocGL_2_1;
   double tmp42_ = tmp40_+tmp41_;
   double tmp43_ = (tmp42_)*(tmp26_);
   double tmp44_ = tmp37_+tmp43_;
   double tmp45_ = (tmp19_)*mLocGL_0_2;
   double tmp46_ = (tmp23_)*mLocGL_1_2;
   double tmp47_ = tmp45_+tmp46_;
   double tmp48_ = tmp24_*mLocGL_2_2;
   double tmp49_ = tmp47_+tmp48_;
   double tmp50_ = (tmp49_)*(tmp28_);
   double tmp51_ = tmp44_+tmp50_;
   double tmp52_ = 1.000000/(tmp51_);
   double tmp53_ = -(tmp3_);
   double tmp54_ = tmp53_*tmp10_;
   double tmp55_ = tmp30_*tmp11_;
   double tmp56_ = tmp55_*tmp12_;
   double tmp57_ = tmp54_+tmp56_;
   double tmp58_ = tmp30_*tmp10_;
   double tmp59_ = tmp58_+tmp18_;
   double tmp60_ = tmp4_*mLocGL_0_0;
   double tmp61_ = tmp6_*mLocGL_1_0;
   double tmp62_ = tmp60_+tmp61_;
   double tmp63_ = tmp7_*mLocGL_2_0;
   double tmp64_ = tmp62_+tmp63_;
   double tmp65_ = (tmp64_)*(tmp14_);
   double tmp66_ = tmp4_*mLocGL_0_1;
   double tmp67_ = tmp6_*mLocGL_1_1;
   double tmp68_ = tmp66_+tmp67_;
   double tmp69_ = tmp7_*mLocGL_2_1;
   double tmp70_ = tmp68_+tmp69_;
   double tmp71_ = (tmp70_)*(tmp26_);
   double tmp72_ = tmp65_+tmp71_;
   double tmp73_ = tmp4_*mLocGL_0_2;
   double tmp74_ = tmp6_*mLocGL_1_2;
   double tmp75_ = tmp73_+tmp74_;
   double tmp76_ = tmp7_*mLocGL_2_2;
   double tmp77_ = tmp75_+tmp76_;
   double tmp78_ = (tmp77_)*(tmp28_);
   double tmp79_ = tmp72_+tmp78_;
   double tmp80_ = tmp29_*tmp7_;
   double tmp81_ = tmp80_*tmp3_;
   double tmp82_ = tmp80_*tmp5_;
   double tmp83_ = -(tmp2_);
   double tmp84_ = tmp83_*tmp3_;
   double tmp85_ = tmp84_*tmp12_;
   double tmp86_ = tmp83_*tmp5_;
   double tmp87_ = tmp86_*tmp12_;
   double tmp88_ = tmp80_*tmp12_;
   double tmp89_ = ElSquare(tmp51_);
   double tmp90_ = -(tmp12_);
   double tmp91_ = tmp29_*tmp9_;
   double tmp92_ = tmp90_*tmp15_;
   double tmp93_ = tmp91_*tmp17_;
   double tmp94_ = tmp92_+tmp93_;
   double tmp95_ = tmp90_*tmp3_;
   double tmp96_ = tmp91_*tmp21_;
   double tmp97_ = tmp95_+tmp96_;
   double tmp98_ = tmp91_*tmp2_;
   double tmp99_ = tmp15_*tmp12_;
   double tmp100_ = tmp17_*tmp9_;
   double tmp101_ = tmp99_+tmp100_;
   double tmp102_ = tmp3_*tmp12_;
   double tmp103_ = tmp21_*tmp9_;
   double tmp104_ = tmp102_+tmp103_;
   double tmp105_ = tmp2_*tmp9_;
   double tmp106_ = tmp53_*tmp12_;
   double tmp107_ = tmp55_*tmp9_;
   double tmp108_ = tmp106_+tmp107_;
   double tmp109_ = tmp30_*tmp12_;
   double tmp110_ = tmp109_+tmp100_;
   double tmp111_ = (tmp57_)*mLocGL_0_0;
   double tmp112_ = (tmp59_)*mLocGL_1_0;
   double tmp113_ = tmp111_+tmp112_;
   double tmp114_ = (tmp113_)*(tmp14_);
   double tmp115_ = (tmp57_)*mLocGL_0_1;
   double tmp116_ = (tmp59_)*mLocGL_1_1;
   double tmp117_ = tmp115_+tmp116_;
   double tmp118_ = (tmp117_)*(tmp26_);
   double tmp119_ = tmp114_+tmp118_;
   double tmp120_ = (tmp57_)*mLocGL_0_2;
   double tmp121_ = (tmp59_)*mLocGL_1_2;
   double tmp122_ = tmp120_+tmp121_;
   double tmp123_ = (tmp122_)*(tmp28_);
   double tmp124_ = tmp119_+tmp123_;
   double tmp125_ = -(tmp124_);
   double tmp126_ = tmp125_/tmp89_;
   double tmp127_ = (tmp101_)*mLocGL_0_0;
   double tmp128_ = (tmp104_)*mLocGL_1_0;
   double tmp129_ = tmp127_+tmp128_;
   double tmp130_ = tmp105_*mLocGL_2_0;
   double tmp131_ = tmp129_+tmp130_;
   double tmp132_ = (tmp131_)*(tmp14_);
   double tmp133_ = (tmp101_)*mLocGL_0_1;
   double tmp134_ = (tmp104_)*mLocGL_1_1;
   double tmp135_ = tmp133_+tmp134_;
   double tmp136_ = tmp105_*mLocGL_2_1;
   double tmp137_ = tmp135_+tmp136_;
   double tmp138_ = (tmp137_)*(tmp26_);
   double tmp139_ = tmp132_+tmp138_;
   double tmp140_ = (tmp101_)*mLocGL_0_2;
   double tmp141_ = (tmp104_)*mLocGL_1_2;
   double tmp142_ = tmp140_+tmp141_;
   double tmp143_ = tmp105_*mLocGL_2_2;
   double tmp144_ = tmp142_+tmp143_;
   double tmp145_ = (tmp144_)*(tmp28_);
   double tmp146_ = tmp139_+tmp145_;
   double tmp147_ = tmp84_*tmp9_;
   double tmp148_ = tmp86_*tmp9_;
   double tmp149_ = tmp80_*tmp9_;
   double tmp150_ = tmp85_*mLocGL_0_0;
   double tmp151_ = tmp87_*mLocGL_1_0;
   double tmp152_ = tmp150_+tmp151_;
   double tmp153_ = tmp88_*mLocGL_2_0;
   double tmp154_ = tmp152_+tmp153_;
   double tmp155_ = (tmp154_)*(tmp14_);
   double tmp156_ = tmp85_*mLocGL_0_1;
   double tmp157_ = tmp87_*mLocGL_1_1;
   double tmp158_ = tmp156_+tmp157_;
   double tmp159_ = tmp88_*mLocGL_2_1;
   double tmp160_ = tmp158_+tmp159_;
   double tmp161_ = (tmp160_)*(tmp26_);
   double tmp162_ = tmp155_+tmp161_;
   double tmp163_ = tmp85_*mLocGL_0_2;
   double tmp164_ = tmp87_*mLocGL_1_2;
   double tmp165_ = tmp163_+tmp164_;
   double tmp166_ = tmp88_*mLocGL_2_2;
   double tmp167_ = tmp165_+tmp166_;
   double tmp168_ = (tmp167_)*(tmp28_);
   double tmp169_ = tmp162_+tmp168_;
   double tmp170_ = -(tmp169_);
   double tmp171_ = tmp170_/tmp89_;
   double tmp172_ = tmp91_*tmp15_;
   double tmp173_ = tmp12_*tmp17_;
   double tmp174_ = tmp172_+tmp173_;
   double tmp175_ = tmp91_*tmp3_;
   double tmp176_ = tmp12_*tmp21_;
   double tmp177_ = tmp175_+tmp176_;
   double tmp178_ = tmp12_*tmp2_;
   double tmp179_ = (tmp94_)*mLocGL_0_0;
   double tmp180_ = (tmp97_)*mLocGL_1_0;
   double tmp181_ = tmp179_+tmp180_;
   double tmp182_ = tmp98_*mLocGL_2_0;
   double tmp183_ = tmp181_+tmp182_;
   double tmp184_ = (tmp183_)*(tmp14_);
   double tmp185_ = (tmp94_)*mLocGL_0_1;
   double tmp186_ = (tmp97_)*mLocGL_1_1;
   double tmp187_ = tmp185_+tmp186_;
   double tmp188_ = tmp98_*mLocGL_2_1;
   double tmp189_ = tmp187_+tmp188_;
   double tmp190_ = (tmp189_)*(tmp26_);
   double tmp191_ = tmp184_+tmp190_;
   double tmp192_ = (tmp94_)*mLocGL_0_2;
   double tmp193_ = (tmp97_)*mLocGL_1_2;
   double tmp194_ = tmp192_+tmp193_;
   double tmp195_ = tmp98_*mLocGL_2_2;
   double tmp196_ = tmp194_+tmp195_;
   double tmp197_ = (tmp196_)*(tmp28_);
   double tmp198_ = tmp191_+tmp197_;
   double tmp199_ = -(tmp198_);
   double tmp200_ = tmp199_/tmp89_;
   double tmp201_ = tmp29_*(tmp36_);
   double tmp202_ = -(tmp201_);
   double tmp203_ = tmp202_/tmp89_;
   double tmp204_ = tmp29_*(tmp42_);
   double tmp205_ = -(tmp204_);
   double tmp206_ = tmp205_/tmp89_;
   double tmp207_ = tmp29_*(tmp49_);
   double tmp208_ = -(tmp207_);
   double tmp209_ = tmp208_/tmp89_;

  mVal[0] = ((tmp79_)*(tmp52_)-mLocXIm)*mLocScNorm;

  mCompDer[0][0] = (((tmp31_*mLocGL_0_0+tmp4_*mLocGL_1_0)*(tmp14_)+(tmp31_*mLocGL_0_1+tmp4_*mLocGL_1_1)*(tmp26_)+(tmp31_*mLocGL_0_2+tmp4_*mLocGL_1_2)*(tmp28_))*(tmp52_)+(tmp126_)*(tmp79_))*mLocScNorm;
  mCompDer[0][1] = (((tmp81_*mLocGL_0_0+tmp82_*mLocGL_1_0+tmp2_*mLocGL_2_0)*(tmp14_)+(tmp81_*mLocGL_0_1+tmp82_*mLocGL_1_1+tmp2_*mLocGL_2_1)*(tmp26_)+(tmp81_*mLocGL_0_2+tmp82_*mLocGL_1_2+tmp2_*mLocGL_2_2)*(tmp28_))*(tmp52_)+(tmp171_)*(tmp79_))*mLocScNorm;
  mCompDer[0][2] = (tmp200_)*(tmp79_)*mLocScNorm;
  mCompDer[0][3] = (tmp29_*(tmp64_)*(tmp52_)+(tmp203_)*(tmp79_))*mLocScNorm;
  mCompDer[0][4] = (tmp29_*(tmp70_)*(tmp52_)+(tmp206_)*(tmp79_))*mLocScNorm;
  mCompDer[0][5] = (tmp29_*(tmp77_)*(tmp52_)+(tmp209_)*(tmp79_))*mLocScNorm;
  mVal[1] = ((tmp146_)*(tmp52_)-mLocYIm)*mLocScNorm;

  mCompDer[1][0] = ((((tmp108_)*mLocGL_0_0+(tmp110_)*mLocGL_1_0)*(tmp14_)+((tmp108_)*mLocGL_0_1+(tmp110_)*mLocGL_1_1)*(tmp26_)+((tmp108_)*mLocGL_0_2+(tmp110_)*mLocGL_1_2)*(tmp28_))*(tmp52_)+(tmp126_)*(tmp146_))*mLocScNorm;
  mCompDer[1][1] = (((tmp147_*mLocGL_0_0+tmp148_*mLocGL_1_0+tmp149_*mLocGL_2_0)*(tmp14_)+(tmp147_*mLocGL_0_1+tmp148_*mLocGL_1_1+tmp149_*mLocGL_2_1)*(tmp26_)+(tmp147_*mLocGL_0_2+tmp148_*mLocGL_1_2+tmp149_*mLocGL_2_2)*(tmp28_))*(tmp52_)+(tmp171_)*(tmp146_))*mLocScNorm;
  mCompDer[1][2] = ((((tmp174_)*mLocGL_0_0+(tmp177_)*mLocGL_1_0+tmp178_*mLocGL_2_0)*(tmp14_)+((tmp174_)*mLocGL_0_1+(tmp177_)*mLocGL_1_1+tmp178_*mLocGL_2_1)*(tmp26_)+((tmp174_)*mLocGL_0_2+(tmp177_)*mLocGL_1_2+tmp178_*mLocGL_2_2)*(tmp28_))*(tmp52_)+(tmp200_)*(tmp146_))*mLocScNorm;
  mCompDer[1][3] = (tmp29_*(tmp131_)*(tmp52_)+(tmp203_)*(tmp146_))*mLocScNorm;
  mCompDer[1][4] = (tmp29_*(tmp137_)*(tmp52_)+(tmp206_)*(tmp146_))*mLocScNorm;
  mCompDer[1][5] = (tmp29_*(tmp144_)*(tmp52_)+(tmp209_)*(tmp146_))*mLocScNorm;
}


void cEqAppui_GL__TerFix_M2CNoVar::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_GL__TerFix_M2CNoVar Has no Der Sec");
}

void cEqAppui_GL__TerFix_M2CNoVar::SetGL_0_0(double aVal){ mLocGL_0_0 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_0_1(double aVal){ mLocGL_0_1 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_0_2(double aVal){ mLocGL_0_2 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_1_0(double aVal){ mLocGL_1_0 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_1_1(double aVal){ mLocGL_1_1 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_1_2(double aVal){ mLocGL_1_2 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_2_0(double aVal){ mLocGL_2_0 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_2_1(double aVal){ mLocGL_2_1 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetGL_2_2(double aVal){ mLocGL_2_2 = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetScNorm(double aVal){ mLocScNorm = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_GL__TerFix_M2CNoVar::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_GL__TerFix_M2CNoVar::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "GL_0_0") return & mLocGL_0_0;
   if (aName == "GL_0_1") return & mLocGL_0_1;
   if (aName == "GL_0_2") return & mLocGL_0_2;
   if (aName == "GL_1_0") return & mLocGL_1_0;
   if (aName == "GL_1_1") return & mLocGL_1_1;
   if (aName == "GL_1_2") return & mLocGL_1_2;
   if (aName == "GL_2_0") return & mLocGL_2_0;
   if (aName == "GL_2_1") return & mLocGL_2_1;
   if (aName == "GL_2_2") return & mLocGL_2_2;
   if (aName == "ScNorm") return & mLocScNorm;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_GL__TerFix_M2CNoVar::mTheAuto("cEqAppui_GL__TerFix_M2CNoVar",cEqAppui_GL__TerFix_M2CNoVar::Alloc);


cElCompiledFonc *  cEqAppui_GL__TerFix_M2CNoVar::Alloc()
{  return new cEqAppui_GL__TerFix_M2CNoVar();
}


