// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_X_C2MPolyn4.h"


cEqAppui_X_C2MPolyn4::cEqAppui_X_C2MPolyn4():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,27));
   AddIntRef (cIncIntervale("Orient",27,33));
   Close(false);
}



void cEqAppui_X_C2MPolyn4::ComputeVal()
{
   double tmp0_ = mCompCoord[27];
   double tmp1_ = mCompCoord[28];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[29];
   double tmp7_ = mCompCoord[30];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[31];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[32];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mLocXIm/mLocPolyn4_State_0_0;
   double tmp18_ = mLocYIm/mLocPolyn4_State_0_0;
   double tmp19_ = (tmp17_)*(tmp17_);
   double tmp20_ = (tmp18_)*(tmp18_);
   double tmp21_ = tmp19_*(tmp17_);
   double tmp22_ = (tmp18_)*(tmp17_);
   double tmp23_ = tmp22_*(tmp17_);
   double tmp24_ = tmp20_*(tmp17_);
   double tmp25_ = (tmp18_)*tmp20_;

  mVal[0] = (mCompCoord[1]+mCompCoord[0]*((tmp4_*tmp2_*(tmp8_)+tmp3_*tmp2_*(tmp14_)+tmp5_*(tmp16_))/((-(tmp3_)*tmp10_+tmp4_*tmp11_*tmp12_)*(tmp8_)+(tmp4_*tmp10_+tmp3_*tmp11_*tmp12_)*(tmp14_)+tmp2_*tmp12_*(tmp16_))))-((((1+mCompCoord[3])*(tmp17_)+mCompCoord[4]*(tmp18_))-mCompCoord[5]*2*tmp19_+mCompCoord[6]*(tmp17_)*(tmp18_)+mCompCoord[7]*tmp20_)*mLocPolyn4_State_0_0+(mCompCoord[9]*tmp21_+mCompCoord[10]*tmp23_+mCompCoord[11]*tmp24_+mCompCoord[12]*tmp25_+mCompCoord[17]*tmp21_*(tmp17_)+mCompCoord[18]*tmp23_*(tmp17_)+mCompCoord[19]*tmp24_*(tmp17_)+mCompCoord[20]*tmp25_*(tmp17_)+mCompCoord[21]*(tmp18_)*tmp25_)*mLocPolyn4_State_0_0);

}


void cEqAppui_X_C2MPolyn4::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[27];
   double tmp1_ = mCompCoord[28];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[29];
   double tmp7_ = mCompCoord[30];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[31];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[32];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = mLocXIm/mLocPolyn4_State_0_0;
   double tmp18_ = mLocYIm/mLocPolyn4_State_0_0;
   double tmp19_ = (tmp17_)*(tmp17_);
   double tmp20_ = (tmp18_)*(tmp18_);
   double tmp21_ = tmp19_*(tmp17_);
   double tmp22_ = (tmp18_)*(tmp17_);
   double tmp23_ = tmp22_*(tmp17_);
   double tmp24_ = tmp20_*(tmp17_);
   double tmp25_ = (tmp18_)*tmp20_;
   double tmp26_ = tmp4_*tmp2_;
   double tmp27_ = tmp26_*(tmp8_);
   double tmp28_ = tmp3_*tmp2_;
   double tmp29_ = tmp28_*(tmp14_);
   double tmp30_ = tmp27_+tmp29_;
   double tmp31_ = tmp5_*(tmp16_);
   double tmp32_ = tmp30_+tmp31_;
   double tmp33_ = -(tmp3_);
   double tmp34_ = tmp33_*tmp10_;
   double tmp35_ = tmp4_*tmp11_;
   double tmp36_ = tmp35_*tmp12_;
   double tmp37_ = tmp34_+tmp36_;
   double tmp38_ = (tmp37_)*(tmp8_);
   double tmp39_ = tmp4_*tmp10_;
   double tmp40_ = tmp3_*tmp11_;
   double tmp41_ = tmp40_*tmp12_;
   double tmp42_ = tmp39_+tmp41_;
   double tmp43_ = (tmp42_)*(tmp14_);
   double tmp44_ = tmp38_+tmp43_;
   double tmp45_ = tmp2_*tmp12_;
   double tmp46_ = tmp45_*(tmp16_);
   double tmp47_ = tmp44_+tmp46_;
   double tmp48_ = (tmp32_)/(tmp47_);
   double tmp49_ = (tmp17_)*(tmp18_);
   double tmp50_ = tmp21_*(tmp17_);
   double tmp51_ = tmp23_*(tmp17_);
   double tmp52_ = tmp24_*(tmp17_);
   double tmp53_ = tmp25_*(tmp17_);
   double tmp54_ = (tmp18_)*tmp25_;
   double tmp55_ = -(1);
   double tmp56_ = tmp55_*tmp3_;
   double tmp57_ = mCompCoord[0];
   double tmp58_ = tmp55_*tmp5_;
   double tmp59_ = -(tmp2_);
   double tmp60_ = ElSquare(tmp47_);
   double tmp61_ = -(tmp12_);
   double tmp62_ = tmp55_*tmp9_;

  mVal[0] = (mCompCoord[1]+tmp57_*(tmp48_))-((((1+mCompCoord[3])*(tmp17_)+mCompCoord[4]*(tmp18_))-mCompCoord[5]*2*tmp19_+mCompCoord[6]*tmp49_+mCompCoord[7]*tmp20_)*mLocPolyn4_State_0_0+(mCompCoord[9]*tmp21_+mCompCoord[10]*tmp23_+mCompCoord[11]*tmp24_+mCompCoord[12]*tmp25_+mCompCoord[17]*tmp50_+mCompCoord[18]*tmp51_+mCompCoord[19]*tmp52_+mCompCoord[20]*tmp53_+mCompCoord[21]*tmp54_)*mLocPolyn4_State_0_0);

  mCompDer[0][0] = tmp48_;
  mCompDer[0][1] = 1;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = -((tmp17_)*mLocPolyn4_State_0_0);
  mCompDer[0][4] = -((tmp18_)*mLocPolyn4_State_0_0);
  mCompDer[0][5] = -(-(2*tmp19_)*mLocPolyn4_State_0_0);
  mCompDer[0][6] = -(tmp49_*mLocPolyn4_State_0_0);
  mCompDer[0][7] = -(tmp20_*mLocPolyn4_State_0_0);
  mCompDer[0][8] = 0;
  mCompDer[0][9] = -(tmp21_*mLocPolyn4_State_0_0);
  mCompDer[0][10] = -(tmp23_*mLocPolyn4_State_0_0);
  mCompDer[0][11] = -(tmp24_*mLocPolyn4_State_0_0);
  mCompDer[0][12] = -(tmp25_*mLocPolyn4_State_0_0);
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mCompDer[0][15] = 0;
  mCompDer[0][16] = 0;
  mCompDer[0][17] = -(tmp50_*mLocPolyn4_State_0_0);
  mCompDer[0][18] = -(tmp51_*mLocPolyn4_State_0_0);
  mCompDer[0][19] = -(tmp52_*mLocPolyn4_State_0_0);
  mCompDer[0][20] = -(tmp53_*mLocPolyn4_State_0_0);
  mCompDer[0][21] = -(tmp54_*mLocPolyn4_State_0_0);
  mCompDer[0][22] = 0;
  mCompDer[0][23] = 0;
  mCompDer[0][24] = 0;
  mCompDer[0][25] = 0;
  mCompDer[0][26] = 0;
  mCompDer[0][27] = (((tmp56_*tmp2_*(tmp8_)+tmp26_*(tmp14_))*(tmp47_)-(tmp32_)*((-(tmp4_)*tmp10_+tmp56_*tmp11_*tmp12_)*(tmp8_)+(tmp56_*tmp10_+tmp36_)*(tmp14_)))/tmp60_)*tmp57_;
  mCompDer[0][28] = (((tmp58_*tmp4_*(tmp8_)+tmp58_*tmp3_*(tmp14_)+tmp2_*(tmp16_))*(tmp47_)-(tmp32_)*(tmp59_*tmp4_*tmp12_*(tmp8_)+tmp59_*tmp3_*tmp12_*(tmp14_)+tmp58_*tmp12_*(tmp16_)))/tmp60_)*tmp57_;
  mCompDer[0][29] = (-((tmp32_)*((tmp61_*tmp33_+tmp62_*tmp35_)*(tmp8_)+(tmp61_*tmp4_+tmp62_*tmp40_)*(tmp14_)+tmp62_*tmp2_*(tmp16_)))/tmp60_)*tmp57_;
  mCompDer[0][30] = ((tmp55_*tmp26_*(tmp47_)-(tmp32_)*tmp55_*(tmp37_))/tmp60_)*tmp57_;
  mCompDer[0][31] = ((tmp55_*tmp28_*(tmp47_)-(tmp32_)*tmp55_*(tmp42_))/tmp60_)*tmp57_;
  mCompDer[0][32] = ((tmp58_*(tmp47_)-(tmp32_)*tmp55_*tmp45_)/tmp60_)*tmp57_;
}


void cEqAppui_X_C2MPolyn4::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_X_C2MPolyn4 Has no Der Sec");
}

void cEqAppui_X_C2MPolyn4::SetPolyn4_State_0_0(double aVal){ mLocPolyn4_State_0_0 = aVal;}
void cEqAppui_X_C2MPolyn4::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_X_C2MPolyn4::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_X_C2MPolyn4::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_X_C2MPolyn4::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_X_C2MPolyn4::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_X_C2MPolyn4::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Polyn4_State_0_0") return & mLocPolyn4_State_0_0;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_X_C2MPolyn4::mTheAuto("cEqAppui_X_C2MPolyn4",cEqAppui_X_C2MPolyn4::Alloc);


cElCompiledFonc *  cEqAppui_X_C2MPolyn4::Alloc()
{  return new cEqAppui_X_C2MPolyn4();
}


