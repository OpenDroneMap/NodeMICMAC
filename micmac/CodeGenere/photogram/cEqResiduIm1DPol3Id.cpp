/*Header-MicMac-eLiSe-25/06/2007

    MicMac : Multi Image Correspondances par Methodes Automatiques de Correlation
    eLiSe  : ELements of an Image Software Environnement

    www.micmac.ign.fr

   
    Copyright : Institut Geographique National
    Author : Marc Pierrot Deseilligny
    Contributors : Gregoire Maillet, Didier Boldo.

[1] M. Pierrot-Deseilligny, N. Paparoditis.
    "A multiresolution and optimization-based image matching approach:
    An application to surface reconstruction from SPOT5-HRS stereo imagery."
    In IAPRS vol XXXVI-1/W41 in ISPRS Workshop On Topographic Mapping From Space
    (With Special Emphasis on Small Satellites), Ankara, Turquie, 02-2006.

[2] M. Pierrot-Deseilligny, "MicMac, un lociel de mise en correspondance
    d'images, adapte au contexte geograhique" to appears in 
    Bulletin d'information de l'Institut Geographique National, 2007.

Francais :

   MicMac est un logiciel de mise en correspondance d'image adapte 
   au contexte de recherche en information geographique. Il s'appuie sur
   la bibliotheque de manipulation d'image eLiSe. Il est distibue sous la
   licences Cecill-B.  Voir en bas de fichier et  http://www.cecill.info.


English :

    MicMac is an open source software specialized in image matching
    for research in geographic information. MicMac is built on the
    eLiSe image library. MicMac is governed by the  "Cecill-B licence".
    See below and http://www.cecill.info.

Header-MicMac-eLiSe-25/06/2007*/
// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqResiduIm1DPol3Id.h"


cEqResiduIm1DPol3Id::cEqResiduIm1DPol3Id():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr1",0,20));
   AddIntRef (cIncIntervale("Or1",20,26));
   AddIntRef (cIncIntervale("Or2",26,32));
   Close(false);
}



void cEqResiduIm1DPol3Id::ComputeVal()
{
   double tmp0_ = ElSquare(mLocYL1);
   double tmp1_ = ElSquare(mLocXL1);
   double tmp2_ = mCompCoord[20];
   double tmp3_ = sin(tmp2_);
   double tmp4_ = mCompCoord[21];
   double tmp5_ = mCompCoord[22];
   double tmp6_ = VCube(mLocYL1);
   double tmp7_ = VCube(mLocXL1);
   double tmp8_ = cos(tmp2_);
   double tmp9_ = sin(tmp5_);
   double tmp10_ = sin(tmp4_);
   double tmp11_ = -(tmp10_);
   double tmp12_ = tmp3_*tmp11_;
   double tmp13_ = cos(tmp5_);
   double tmp14_ = mCompCoord[0];
   double tmp15_ = mCompCoord[1];
   double tmp16_ = mCompCoord[2];
   double tmp17_ = mCompCoord[3];
   double tmp18_ = mCompCoord[4];
   double tmp19_ = mCompCoord[5];
   double tmp20_ = mCompCoord[6];
   double tmp21_ = mCompCoord[7];
   double tmp22_ = ElSquare(mLocYL2);
   double tmp23_ = mCompCoord[8];
   double tmp24_ = ElSquare(mLocXL2);
   double tmp25_ = mCompCoord[9];
   double tmp26_ = mCompCoord[27];
   double tmp27_ = mCompCoord[10];
   double tmp28_ = mCompCoord[11];
   double tmp29_ = mCompCoord[12];
   double tmp30_ = mCompCoord[13];
   double tmp31_ = mCompCoord[14];
   double tmp32_ = mCompCoord[15];
   double tmp33_ = mCompCoord[16];
   double tmp34_ = VCube(mLocYL2);
   double tmp35_ = mCompCoord[17];
   double tmp36_ = mCompCoord[18];
   double tmp37_ = mCompCoord[19];
   double tmp38_ = VCube(mLocXL2);
   double tmp39_ = cos(tmp26_);
   double tmp40_ = mCompCoord[28];
   double tmp41_ = tmp15_*mLocYL1;
   double tmp42_ = tmp14_+tmp41_;
   double tmp43_ = tmp16_*mLocXL1;
   double tmp44_ = tmp42_+tmp43_;
   double tmp45_ = tmp17_*tmp0_;
   double tmp46_ = tmp44_+tmp45_;
   double tmp47_ = tmp18_*mLocXL1;
   double tmp48_ = tmp47_*mLocYL1;
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp19_*tmp1_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = tmp20_*tmp6_;
   double tmp53_ = tmp51_+tmp52_;
   double tmp54_ = tmp21_*mLocXL1;
   double tmp55_ = tmp54_*tmp0_;
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = tmp23_*tmp1_;
   double tmp58_ = tmp57_*mLocYL1;
   double tmp59_ = tmp56_+tmp58_;
   double tmp60_ = tmp25_*tmp7_;
   double tmp61_ = tmp59_+tmp60_;
   double tmp62_ = cos(tmp4_);
   double tmp63_ = tmp28_*mLocYL1;
   double tmp64_ = tmp27_+tmp63_;
   double tmp65_ = tmp29_*mLocXL1;
   double tmp66_ = tmp64_+tmp65_;
   double tmp67_ = tmp30_*tmp0_;
   double tmp68_ = tmp66_+tmp67_;
   double tmp69_ = tmp31_*mLocXL1;
   double tmp70_ = tmp69_*mLocYL1;
   double tmp71_ = tmp68_+tmp70_;
   double tmp72_ = tmp32_*tmp1_;
   double tmp73_ = tmp71_+tmp72_;
   double tmp74_ = tmp33_*tmp6_;
   double tmp75_ = tmp73_+tmp74_;
   double tmp76_ = tmp35_*mLocXL1;
   double tmp77_ = tmp76_*tmp0_;
   double tmp78_ = tmp75_+tmp77_;
   double tmp79_ = tmp36_*tmp1_;
   double tmp80_ = tmp79_*mLocYL1;
   double tmp81_ = tmp78_+tmp80_;
   double tmp82_ = tmp37_*tmp7_;
   double tmp83_ = tmp81_+tmp82_;
   double tmp84_ = tmp15_*mLocYL2;
   double tmp85_ = tmp14_+tmp84_;
   double tmp86_ = tmp16_*mLocXL2;
   double tmp87_ = tmp85_+tmp86_;
   double tmp88_ = tmp17_*tmp22_;
   double tmp89_ = tmp87_+tmp88_;
   double tmp90_ = tmp18_*mLocXL2;
   double tmp91_ = tmp90_*mLocYL2;
   double tmp92_ = tmp89_+tmp91_;
   double tmp93_ = tmp19_*tmp24_;
   double tmp94_ = tmp92_+tmp93_;
   double tmp95_ = tmp20_*tmp34_;
   double tmp96_ = tmp94_+tmp95_;
   double tmp97_ = tmp21_*mLocXL2;
   double tmp98_ = tmp97_*tmp22_;
   double tmp99_ = tmp96_+tmp98_;
   double tmp100_ = tmp23_*tmp24_;
   double tmp101_ = tmp100_*mLocYL2;
   double tmp102_ = tmp99_+tmp101_;
   double tmp103_ = tmp25_*tmp38_;
   double tmp104_ = tmp102_+tmp103_;
   double tmp105_ = mCompCoord[26];
   double tmp106_ = cos(tmp40_);
   double tmp107_ = sin(tmp105_);
   double tmp108_ = sin(tmp26_);
   double tmp109_ = sin(tmp40_);
   double tmp110_ = tmp28_*mLocYL2;
   double tmp111_ = tmp27_+tmp110_;
   double tmp112_ = tmp29_*mLocXL2;
   double tmp113_ = tmp111_+tmp112_;
   double tmp114_ = tmp30_*tmp22_;
   double tmp115_ = tmp113_+tmp114_;
   double tmp116_ = tmp31_*mLocXL2;
   double tmp117_ = tmp116_*mLocYL2;
   double tmp118_ = tmp115_+tmp117_;
   double tmp119_ = tmp32_*tmp24_;
   double tmp120_ = tmp118_+tmp119_;
   double tmp121_ = tmp33_*tmp34_;
   double tmp122_ = tmp120_+tmp121_;
   double tmp123_ = tmp35_*mLocXL2;
   double tmp124_ = tmp123_*tmp22_;
   double tmp125_ = tmp122_+tmp124_;
   double tmp126_ = tmp36_*tmp24_;
   double tmp127_ = tmp126_*mLocYL2;
   double tmp128_ = tmp125_+tmp127_;
   double tmp129_ = tmp37_*tmp38_;
   double tmp130_ = tmp128_+tmp129_;
   double tmp131_ = cos(tmp105_);
   double tmp132_ = -(tmp108_);
   double tmp133_ = tmp107_*tmp132_;
   double tmp134_ = tmp3_*tmp62_;
   double tmp135_ = tmp134_*(tmp61_);
   double tmp136_ = tmp8_*tmp13_;
   double tmp137_ = tmp12_*tmp9_;
   double tmp138_ = tmp136_+tmp137_;
   double tmp139_ = (tmp138_)*(tmp83_);
   double tmp140_ = tmp135_+tmp139_;
   double tmp141_ = -(tmp9_);
   double tmp142_ = tmp8_*tmp141_;
   double tmp143_ = tmp12_*tmp13_;
   double tmp144_ = tmp142_+tmp143_;
   double tmp145_ = tmp140_+tmp144_;
   double tmp146_ = tmp108_*(tmp104_);
   double tmp147_ = tmp39_*tmp109_;
   double tmp148_ = tmp147_*(tmp130_);
   double tmp149_ = tmp146_+tmp148_;
   double tmp150_ = tmp39_*tmp106_;
   double tmp151_ = tmp149_+tmp150_;
   double tmp152_ = (tmp145_)*(tmp151_);
   double tmp153_ = tmp10_*(tmp61_);
   double tmp154_ = tmp62_*tmp9_;
   double tmp155_ = tmp154_*(tmp83_);
   double tmp156_ = tmp153_+tmp155_;
   double tmp157_ = tmp62_*tmp13_;
   double tmp158_ = tmp156_+tmp157_;
   double tmp159_ = tmp107_*tmp39_;
   double tmp160_ = tmp159_*(tmp104_);
   double tmp161_ = tmp131_*tmp106_;
   double tmp162_ = tmp133_*tmp109_;
   double tmp163_ = tmp161_+tmp162_;
   double tmp164_ = (tmp163_)*(tmp130_);
   double tmp165_ = tmp160_+tmp164_;
   double tmp166_ = -(tmp109_);
   double tmp167_ = tmp131_*tmp166_;
   double tmp168_ = tmp133_*tmp106_;
   double tmp169_ = tmp167_+tmp168_;
   double tmp170_ = tmp165_+tmp169_;
   double tmp171_ = (tmp158_)*(tmp170_);
   double tmp172_ = tmp152_-tmp171_;
   double tmp173_ = -(tmp107_);
   double tmp174_ = tmp131_*tmp132_;
   double tmp175_ = -(tmp3_);
   double tmp176_ = tmp8_*tmp11_;
   double tmp177_ = tmp131_*tmp39_;
   double tmp178_ = tmp177_*(tmp104_);
   double tmp179_ = tmp173_*tmp106_;
   double tmp180_ = tmp174_*tmp109_;
   double tmp181_ = tmp179_+tmp180_;
   double tmp182_ = (tmp181_)*(tmp130_);
   double tmp183_ = tmp178_+tmp182_;
   double tmp184_ = tmp173_*tmp166_;
   double tmp185_ = tmp174_*tmp106_;
   double tmp186_ = tmp184_+tmp185_;
   double tmp187_ = tmp183_+tmp186_;
   double tmp188_ = (tmp158_)*(tmp187_);
   double tmp189_ = tmp8_*tmp62_;
   double tmp190_ = tmp189_*(tmp61_);
   double tmp191_ = tmp175_*tmp13_;
   double tmp192_ = tmp176_*tmp9_;
   double tmp193_ = tmp191_+tmp192_;
   double tmp194_ = (tmp193_)*(tmp83_);
   double tmp195_ = tmp190_+tmp194_;
   double tmp196_ = tmp175_*tmp141_;
   double tmp197_ = tmp176_*tmp13_;
   double tmp198_ = tmp196_+tmp197_;
   double tmp199_ = tmp195_+tmp198_;
   double tmp200_ = (tmp199_)*(tmp151_);
   double tmp201_ = tmp188_-tmp200_;
   double tmp202_ = (tmp199_)*(tmp170_);
   double tmp203_ = (tmp145_)*(tmp187_);
   double tmp204_ = tmp202_-tmp203_;
   double tmp205_ = mCompCoord[31];
   double tmp206_ = mCompCoord[25];
   double tmp207_ = tmp205_-tmp206_;
   double tmp208_ = mCompCoord[29];
   double tmp209_ = mCompCoord[23];
   double tmp210_ = tmp208_-tmp209_;
   double tmp211_ = mCompCoord[30];
   double tmp212_ = mCompCoord[24];
   double tmp213_ = tmp211_-tmp212_;
   double tmp214_ = (tmp213_)*(tmp151_);
   double tmp215_ = (tmp207_)*(tmp170_);
   double tmp216_ = tmp214_-tmp215_;
   double tmp217_ = (tmp207_)*(tmp187_);
   double tmp218_ = (tmp210_)*(tmp151_);
   double tmp219_ = tmp217_-tmp218_;
   double tmp220_ = (tmp210_)*(tmp170_);
   double tmp221_ = (tmp213_)*(tmp187_);
   double tmp222_ = tmp220_-tmp221_;

  mVal[0] = (sqrt((tmp172_)*(tmp172_)+(tmp201_)*(tmp201_)+(tmp204_)*(tmp204_))/sqrt((tmp199_)*(tmp199_)+(tmp145_)*(tmp145_)+(tmp158_)*(tmp158_)))*(((tmp216_)*(tmp199_)+(tmp219_)*(tmp145_)+(tmp222_)*(tmp158_))/((tmp216_)*(tmp172_)+(tmp219_)*(tmp201_)+(tmp222_)*(tmp204_)));

}


void cEqResiduIm1DPol3Id::ComputeValDeriv()
{
   double tmp0_ = ElSquare(mLocYL1);
   double tmp1_ = ElSquare(mLocXL1);
   double tmp2_ = mCompCoord[20];
   double tmp3_ = sin(tmp2_);
   double tmp4_ = mCompCoord[21];
   double tmp5_ = mCompCoord[22];
   double tmp6_ = VCube(mLocYL1);
   double tmp7_ = VCube(mLocXL1);
   double tmp8_ = cos(tmp2_);
   double tmp9_ = sin(tmp5_);
   double tmp10_ = sin(tmp4_);
   double tmp11_ = -(tmp10_);
   double tmp12_ = tmp3_*tmp11_;
   double tmp13_ = cos(tmp5_);
   double tmp14_ = mCompCoord[0];
   double tmp15_ = mCompCoord[1];
   double tmp16_ = mCompCoord[2];
   double tmp17_ = mCompCoord[3];
   double tmp18_ = mCompCoord[4];
   double tmp19_ = mCompCoord[5];
   double tmp20_ = mCompCoord[6];
   double tmp21_ = mCompCoord[7];
   double tmp22_ = ElSquare(mLocYL2);
   double tmp23_ = mCompCoord[8];
   double tmp24_ = ElSquare(mLocXL2);
   double tmp25_ = mCompCoord[9];
   double tmp26_ = mCompCoord[27];
   double tmp27_ = mCompCoord[10];
   double tmp28_ = mCompCoord[11];
   double tmp29_ = mCompCoord[12];
   double tmp30_ = mCompCoord[13];
   double tmp31_ = mCompCoord[14];
   double tmp32_ = mCompCoord[15];
   double tmp33_ = mCompCoord[16];
   double tmp34_ = VCube(mLocYL2);
   double tmp35_ = mCompCoord[17];
   double tmp36_ = mCompCoord[18];
   double tmp37_ = mCompCoord[19];
   double tmp38_ = VCube(mLocXL2);
   double tmp39_ = cos(tmp26_);
   double tmp40_ = mCompCoord[28];
   double tmp41_ = tmp15_*mLocYL1;
   double tmp42_ = tmp14_+tmp41_;
   double tmp43_ = tmp16_*mLocXL1;
   double tmp44_ = tmp42_+tmp43_;
   double tmp45_ = tmp17_*tmp0_;
   double tmp46_ = tmp44_+tmp45_;
   double tmp47_ = tmp18_*mLocXL1;
   double tmp48_ = tmp47_*mLocYL1;
   double tmp49_ = tmp46_+tmp48_;
   double tmp50_ = tmp19_*tmp1_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = tmp20_*tmp6_;
   double tmp53_ = tmp51_+tmp52_;
   double tmp54_ = tmp21_*mLocXL1;
   double tmp55_ = tmp54_*tmp0_;
   double tmp56_ = tmp53_+tmp55_;
   double tmp57_ = tmp23_*tmp1_;
   double tmp58_ = tmp57_*mLocYL1;
   double tmp59_ = tmp56_+tmp58_;
   double tmp60_ = tmp25_*tmp7_;
   double tmp61_ = tmp59_+tmp60_;
   double tmp62_ = cos(tmp4_);
   double tmp63_ = tmp28_*mLocYL1;
   double tmp64_ = tmp27_+tmp63_;
   double tmp65_ = tmp29_*mLocXL1;
   double tmp66_ = tmp64_+tmp65_;
   double tmp67_ = tmp30_*tmp0_;
   double tmp68_ = tmp66_+tmp67_;
   double tmp69_ = tmp31_*mLocXL1;
   double tmp70_ = tmp69_*mLocYL1;
   double tmp71_ = tmp68_+tmp70_;
   double tmp72_ = tmp32_*tmp1_;
   double tmp73_ = tmp71_+tmp72_;
   double tmp74_ = tmp33_*tmp6_;
   double tmp75_ = tmp73_+tmp74_;
   double tmp76_ = tmp35_*mLocXL1;
   double tmp77_ = tmp76_*tmp0_;
   double tmp78_ = tmp75_+tmp77_;
   double tmp79_ = tmp36_*tmp1_;
   double tmp80_ = tmp79_*mLocYL1;
   double tmp81_ = tmp78_+tmp80_;
   double tmp82_ = tmp37_*tmp7_;
   double tmp83_ = tmp81_+tmp82_;
   double tmp84_ = tmp15_*mLocYL2;
   double tmp85_ = tmp14_+tmp84_;
   double tmp86_ = tmp16_*mLocXL2;
   double tmp87_ = tmp85_+tmp86_;
   double tmp88_ = tmp17_*tmp22_;
   double tmp89_ = tmp87_+tmp88_;
   double tmp90_ = tmp18_*mLocXL2;
   double tmp91_ = tmp90_*mLocYL2;
   double tmp92_ = tmp89_+tmp91_;
   double tmp93_ = tmp19_*tmp24_;
   double tmp94_ = tmp92_+tmp93_;
   double tmp95_ = tmp20_*tmp34_;
   double tmp96_ = tmp94_+tmp95_;
   double tmp97_ = tmp21_*mLocXL2;
   double tmp98_ = tmp97_*tmp22_;
   double tmp99_ = tmp96_+tmp98_;
   double tmp100_ = tmp23_*tmp24_;
   double tmp101_ = tmp100_*mLocYL2;
   double tmp102_ = tmp99_+tmp101_;
   double tmp103_ = tmp25_*tmp38_;
   double tmp104_ = tmp102_+tmp103_;
   double tmp105_ = mCompCoord[26];
   double tmp106_ = cos(tmp40_);
   double tmp107_ = sin(tmp105_);
   double tmp108_ = sin(tmp26_);
   double tmp109_ = sin(tmp40_);
   double tmp110_ = tmp28_*mLocYL2;
   double tmp111_ = tmp27_+tmp110_;
   double tmp112_ = tmp29_*mLocXL2;
   double tmp113_ = tmp111_+tmp112_;
   double tmp114_ = tmp30_*tmp22_;
   double tmp115_ = tmp113_+tmp114_;
   double tmp116_ = tmp31_*mLocXL2;
   double tmp117_ = tmp116_*mLocYL2;
   double tmp118_ = tmp115_+tmp117_;
   double tmp119_ = tmp32_*tmp24_;
   double tmp120_ = tmp118_+tmp119_;
   double tmp121_ = tmp33_*tmp34_;
   double tmp122_ = tmp120_+tmp121_;
   double tmp123_ = tmp35_*mLocXL2;
   double tmp124_ = tmp123_*tmp22_;
   double tmp125_ = tmp122_+tmp124_;
   double tmp126_ = tmp36_*tmp24_;
   double tmp127_ = tmp126_*mLocYL2;
   double tmp128_ = tmp125_+tmp127_;
   double tmp129_ = tmp37_*tmp38_;
   double tmp130_ = tmp128_+tmp129_;
   double tmp131_ = cos(tmp105_);
   double tmp132_ = -(tmp108_);
   double tmp133_ = tmp107_*tmp132_;
   double tmp134_ = tmp3_*tmp62_;
   double tmp135_ = tmp134_*(tmp61_);
   double tmp136_ = tmp8_*tmp13_;
   double tmp137_ = tmp12_*tmp9_;
   double tmp138_ = tmp136_+tmp137_;
   double tmp139_ = (tmp138_)*(tmp83_);
   double tmp140_ = tmp135_+tmp139_;
   double tmp141_ = -(tmp9_);
   double tmp142_ = tmp8_*tmp141_;
   double tmp143_ = tmp12_*tmp13_;
   double tmp144_ = tmp142_+tmp143_;
   double tmp145_ = tmp140_+tmp144_;
   double tmp146_ = tmp108_*(tmp104_);
   double tmp147_ = tmp39_*tmp109_;
   double tmp148_ = tmp147_*(tmp130_);
   double tmp149_ = tmp146_+tmp148_;
   double tmp150_ = tmp39_*tmp106_;
   double tmp151_ = tmp149_+tmp150_;
   double tmp152_ = (tmp145_)*(tmp151_);
   double tmp153_ = tmp10_*(tmp61_);
   double tmp154_ = tmp62_*tmp9_;
   double tmp155_ = tmp154_*(tmp83_);
   double tmp156_ = tmp153_+tmp155_;
   double tmp157_ = tmp62_*tmp13_;
   double tmp158_ = tmp156_+tmp157_;
   double tmp159_ = tmp107_*tmp39_;
   double tmp160_ = tmp159_*(tmp104_);
   double tmp161_ = tmp131_*tmp106_;
   double tmp162_ = tmp133_*tmp109_;
   double tmp163_ = tmp161_+tmp162_;
   double tmp164_ = (tmp163_)*(tmp130_);
   double tmp165_ = tmp160_+tmp164_;
   double tmp166_ = -(tmp109_);
   double tmp167_ = tmp131_*tmp166_;
   double tmp168_ = tmp133_*tmp106_;
   double tmp169_ = tmp167_+tmp168_;
   double tmp170_ = tmp165_+tmp169_;
   double tmp171_ = (tmp158_)*(tmp170_);
   double tmp172_ = tmp152_-tmp171_;
   double tmp173_ = -(tmp107_);
   double tmp174_ = tmp131_*tmp132_;
   double tmp175_ = -(tmp3_);
   double tmp176_ = tmp8_*tmp11_;
   double tmp177_ = tmp131_*tmp39_;
   double tmp178_ = tmp177_*(tmp104_);
   double tmp179_ = tmp173_*tmp106_;
   double tmp180_ = tmp174_*tmp109_;
   double tmp181_ = tmp179_+tmp180_;
   double tmp182_ = (tmp181_)*(tmp130_);
   double tmp183_ = tmp178_+tmp182_;
   double tmp184_ = tmp173_*tmp166_;
   double tmp185_ = tmp174_*tmp106_;
   double tmp186_ = tmp184_+tmp185_;
   double tmp187_ = tmp183_+tmp186_;
   double tmp188_ = (tmp158_)*(tmp187_);
   double tmp189_ = tmp8_*tmp62_;
   double tmp190_ = tmp189_*(tmp61_);
   double tmp191_ = tmp175_*tmp13_;
   double tmp192_ = tmp176_*tmp9_;
   double tmp193_ = tmp191_+tmp192_;
   double tmp194_ = (tmp193_)*(tmp83_);
   double tmp195_ = tmp190_+tmp194_;
   double tmp196_ = tmp175_*tmp141_;
   double tmp197_ = tmp176_*tmp13_;
   double tmp198_ = tmp196_+tmp197_;
   double tmp199_ = tmp195_+tmp198_;
   double tmp200_ = (tmp199_)*(tmp151_);
   double tmp201_ = tmp188_-tmp200_;
   double tmp202_ = (tmp199_)*(tmp170_);
   double tmp203_ = (tmp145_)*(tmp187_);
   double tmp204_ = tmp202_-tmp203_;
   double tmp205_ = mCompCoord[31];
   double tmp206_ = mCompCoord[25];
   double tmp207_ = tmp205_-tmp206_;
   double tmp208_ = mCompCoord[29];
   double tmp209_ = mCompCoord[23];
   double tmp210_ = tmp208_-tmp209_;
   double tmp211_ = mCompCoord[30];
   double tmp212_ = mCompCoord[24];
   double tmp213_ = tmp211_-tmp212_;
   double tmp214_ = (tmp213_)*(tmp151_);
   double tmp215_ = (tmp207_)*(tmp170_);
   double tmp216_ = tmp214_-tmp215_;
   double tmp217_ = (tmp207_)*(tmp187_);
   double tmp218_ = (tmp210_)*(tmp151_);
   double tmp219_ = tmp217_-tmp218_;
   double tmp220_ = (tmp210_)*(tmp170_);
   double tmp221_ = (tmp213_)*(tmp187_);
   double tmp222_ = tmp220_-tmp221_;
   double tmp223_ = tmp134_*(tmp151_);
   double tmp224_ = tmp108_*(tmp145_);
   double tmp225_ = tmp223_+tmp224_;
   double tmp226_ = tmp10_*(tmp170_);
   double tmp227_ = tmp159_*(tmp158_);
   double tmp228_ = tmp226_+tmp227_;
   double tmp229_ = (tmp225_)-(tmp228_);
   double tmp230_ = (tmp229_)*(tmp172_);
   double tmp231_ = tmp10_*(tmp187_);
   double tmp232_ = tmp177_*(tmp158_);
   double tmp233_ = tmp231_+tmp232_;
   double tmp234_ = tmp189_*(tmp151_);
   double tmp235_ = tmp108_*(tmp199_);
   double tmp236_ = tmp234_+tmp235_;
   double tmp237_ = (tmp233_)-(tmp236_);
   double tmp238_ = (tmp237_)*(tmp201_);
   double tmp239_ = tmp189_*(tmp170_);
   double tmp240_ = tmp159_*(tmp199_);
   double tmp241_ = tmp239_+tmp240_;
   double tmp242_ = tmp134_*(tmp187_);
   double tmp243_ = tmp177_*(tmp145_);
   double tmp244_ = tmp242_+tmp243_;
   double tmp245_ = (tmp241_)-(tmp244_);
   double tmp246_ = (tmp245_)*(tmp204_);
   double tmp247_ = (tmp172_)*(tmp172_);
   double tmp248_ = (tmp201_)*(tmp201_);
   double tmp249_ = tmp247_+tmp248_;
   double tmp250_ = (tmp204_)*(tmp204_);
   double tmp251_ = tmp249_+tmp250_;
   double tmp252_ = sqrt(tmp251_);
   double tmp253_ = (tmp199_)*(tmp199_);
   double tmp254_ = (tmp145_)*(tmp145_);
   double tmp255_ = tmp253_+tmp254_;
   double tmp256_ = (tmp158_)*(tmp158_);
   double tmp257_ = tmp255_+tmp256_;
   double tmp258_ = sqrt(tmp257_);
   double tmp259_ = tmp189_*(tmp199_);
   double tmp260_ = tmp134_*(tmp145_);
   double tmp261_ = tmp10_*(tmp158_);
   double tmp262_ = (tmp216_)*(tmp199_);
   double tmp263_ = (tmp219_)*(tmp145_);
   double tmp264_ = tmp262_+tmp263_;
   double tmp265_ = (tmp222_)*(tmp158_);
   double tmp266_ = tmp264_+tmp265_;
   double tmp267_ = (tmp216_)*(tmp172_);
   double tmp268_ = (tmp219_)*(tmp201_);
   double tmp269_ = tmp267_+tmp268_;
   double tmp270_ = (tmp222_)*(tmp204_);
   double tmp271_ = tmp269_+tmp270_;
   double tmp272_ = (tmp266_)/(tmp271_);
   double tmp273_ = tmp108_*(tmp213_);
   double tmp274_ = tmp159_*(tmp207_);
   double tmp275_ = tmp273_-tmp274_;
   double tmp276_ = tmp177_*(tmp207_);
   double tmp277_ = tmp108_*(tmp210_);
   double tmp278_ = tmp276_-tmp277_;
   double tmp279_ = tmp159_*(tmp210_);
   double tmp280_ = tmp177_*(tmp213_);
   double tmp281_ = tmp279_-tmp280_;
   double tmp282_ = tmp252_/tmp258_;
   double tmp283_ = mLocYL1*tmp134_;
   double tmp284_ = tmp283_*(tmp151_);
   double tmp285_ = mLocYL2*tmp108_;
   double tmp286_ = tmp285_*(tmp145_);
   double tmp287_ = tmp284_+tmp286_;
   double tmp288_ = mLocYL1*tmp10_;
   double tmp289_ = tmp288_*(tmp170_);
   double tmp290_ = mLocYL2*tmp159_;
   double tmp291_ = tmp290_*(tmp158_);
   double tmp292_ = tmp289_+tmp291_;
   double tmp293_ = (tmp287_)-(tmp292_);
   double tmp294_ = (tmp293_)*(tmp172_);
   double tmp295_ = tmp288_*(tmp187_);
   double tmp296_ = mLocYL2*tmp177_;
   double tmp297_ = tmp296_*(tmp158_);
   double tmp298_ = tmp295_+tmp297_;
   double tmp299_ = mLocYL1*tmp189_;
   double tmp300_ = tmp299_*(tmp151_);
   double tmp301_ = tmp285_*(tmp199_);
   double tmp302_ = tmp300_+tmp301_;
   double tmp303_ = (tmp298_)-(tmp302_);
   double tmp304_ = (tmp303_)*(tmp201_);
   double tmp305_ = tmp299_*(tmp170_);
   double tmp306_ = tmp290_*(tmp199_);
   double tmp307_ = tmp305_+tmp306_;
   double tmp308_ = tmp283_*(tmp187_);
   double tmp309_ = tmp296_*(tmp145_);
   double tmp310_ = tmp308_+tmp309_;
   double tmp311_ = (tmp307_)-(tmp310_);
   double tmp312_ = (tmp311_)*(tmp204_);
   double tmp313_ = tmp299_*(tmp199_);
   double tmp314_ = tmp283_*(tmp145_);
   double tmp315_ = tmp288_*(tmp158_);
   double tmp316_ = ElSquare(tmp258_);
   double tmp317_ = tmp285_*(tmp213_);
   double tmp318_ = tmp290_*(tmp207_);
   double tmp319_ = tmp317_-tmp318_;
   double tmp320_ = tmp296_*(tmp207_);
   double tmp321_ = tmp285_*(tmp210_);
   double tmp322_ = tmp320_-tmp321_;
   double tmp323_ = tmp290_*(tmp210_);
   double tmp324_ = tmp296_*(tmp213_);
   double tmp325_ = tmp323_-tmp324_;
   double tmp326_ = ElSquare(tmp271_);
   double tmp327_ = mLocXL1*tmp134_;
   double tmp328_ = tmp327_*(tmp151_);
   double tmp329_ = mLocXL2*tmp108_;
   double tmp330_ = tmp329_*(tmp145_);
   double tmp331_ = tmp328_+tmp330_;
   double tmp332_ = mLocXL1*tmp10_;
   double tmp333_ = tmp332_*(tmp170_);
   double tmp334_ = mLocXL2*tmp159_;
   double tmp335_ = tmp334_*(tmp158_);
   double tmp336_ = tmp333_+tmp335_;
   double tmp337_ = (tmp331_)-(tmp336_);
   double tmp338_ = (tmp337_)*(tmp172_);
   double tmp339_ = tmp332_*(tmp187_);
   double tmp340_ = mLocXL2*tmp177_;
   double tmp341_ = tmp340_*(tmp158_);
   double tmp342_ = tmp339_+tmp341_;
   double tmp343_ = mLocXL1*tmp189_;
   double tmp344_ = tmp343_*(tmp151_);
   double tmp345_ = tmp329_*(tmp199_);
   double tmp346_ = tmp344_+tmp345_;
   double tmp347_ = (tmp342_)-(tmp346_);
   double tmp348_ = (tmp347_)*(tmp201_);
   double tmp349_ = tmp343_*(tmp170_);
   double tmp350_ = tmp334_*(tmp199_);
   double tmp351_ = tmp349_+tmp350_;
   double tmp352_ = tmp327_*(tmp187_);
   double tmp353_ = tmp340_*(tmp145_);
   double tmp354_ = tmp352_+tmp353_;
   double tmp355_ = (tmp351_)-(tmp354_);
   double tmp356_ = (tmp355_)*(tmp204_);
   double tmp357_ = tmp343_*(tmp199_);
   double tmp358_ = tmp327_*(tmp145_);
   double tmp359_ = tmp332_*(tmp158_);
   double tmp360_ = tmp329_*(tmp213_);
   double tmp361_ = tmp334_*(tmp207_);
   double tmp362_ = tmp360_-tmp361_;
   double tmp363_ = tmp340_*(tmp207_);
   double tmp364_ = tmp329_*(tmp210_);
   double tmp365_ = tmp363_-tmp364_;
   double tmp366_ = tmp334_*(tmp210_);
   double tmp367_ = tmp340_*(tmp213_);
   double tmp368_ = tmp366_-tmp367_;
   double tmp369_ = tmp0_*tmp134_;
   double tmp370_ = tmp369_*(tmp151_);
   double tmp371_ = tmp22_*tmp108_;
   double tmp372_ = tmp371_*(tmp145_);
   double tmp373_ = tmp370_+tmp372_;
   double tmp374_ = tmp0_*tmp10_;
   double tmp375_ = tmp374_*(tmp170_);
   double tmp376_ = tmp22_*tmp159_;
   double tmp377_ = tmp376_*(tmp158_);
   double tmp378_ = tmp375_+tmp377_;
   double tmp379_ = (tmp373_)-(tmp378_);
   double tmp380_ = (tmp379_)*(tmp172_);
   double tmp381_ = tmp374_*(tmp187_);
   double tmp382_ = tmp22_*tmp177_;
   double tmp383_ = tmp382_*(tmp158_);
   double tmp384_ = tmp381_+tmp383_;
   double tmp385_ = tmp0_*tmp189_;
   double tmp386_ = tmp385_*(tmp151_);
   double tmp387_ = tmp371_*(tmp199_);
   double tmp388_ = tmp386_+tmp387_;
   double tmp389_ = (tmp384_)-(tmp388_);
   double tmp390_ = (tmp389_)*(tmp201_);
   double tmp391_ = tmp385_*(tmp170_);
   double tmp392_ = tmp376_*(tmp199_);
   double tmp393_ = tmp391_+tmp392_;
   double tmp394_ = tmp369_*(tmp187_);
   double tmp395_ = tmp382_*(tmp145_);
   double tmp396_ = tmp394_+tmp395_;
   double tmp397_ = (tmp393_)-(tmp396_);
   double tmp398_ = (tmp397_)*(tmp204_);
   double tmp399_ = tmp385_*(tmp199_);
   double tmp400_ = tmp369_*(tmp145_);
   double tmp401_ = tmp374_*(tmp158_);
   double tmp402_ = tmp371_*(tmp213_);
   double tmp403_ = tmp376_*(tmp207_);
   double tmp404_ = tmp402_-tmp403_;
   double tmp405_ = tmp382_*(tmp207_);
   double tmp406_ = tmp371_*(tmp210_);
   double tmp407_ = tmp405_-tmp406_;
   double tmp408_ = tmp376_*(tmp210_);
   double tmp409_ = tmp382_*(tmp213_);
   double tmp410_ = tmp408_-tmp409_;
   double tmp411_ = mLocXL1*mLocYL1;
   double tmp412_ = mLocXL2*mLocYL2;
   double tmp413_ = tmp411_*tmp134_;
   double tmp414_ = tmp413_*(tmp151_);
   double tmp415_ = tmp412_*tmp108_;
   double tmp416_ = tmp415_*(tmp145_);
   double tmp417_ = tmp414_+tmp416_;
   double tmp418_ = tmp411_*tmp10_;
   double tmp419_ = tmp418_*(tmp170_);
   double tmp420_ = tmp412_*tmp159_;
   double tmp421_ = tmp420_*(tmp158_);
   double tmp422_ = tmp419_+tmp421_;
   double tmp423_ = (tmp417_)-(tmp422_);
   double tmp424_ = (tmp423_)*(tmp172_);
   double tmp425_ = tmp418_*(tmp187_);
   double tmp426_ = tmp412_*tmp177_;
   double tmp427_ = tmp426_*(tmp158_);
   double tmp428_ = tmp425_+tmp427_;
   double tmp429_ = tmp411_*tmp189_;
   double tmp430_ = tmp429_*(tmp151_);
   double tmp431_ = tmp415_*(tmp199_);
   double tmp432_ = tmp430_+tmp431_;
   double tmp433_ = (tmp428_)-(tmp432_);
   double tmp434_ = (tmp433_)*(tmp201_);
   double tmp435_ = tmp429_*(tmp170_);
   double tmp436_ = tmp420_*(tmp199_);
   double tmp437_ = tmp435_+tmp436_;
   double tmp438_ = tmp413_*(tmp187_);
   double tmp439_ = tmp426_*(tmp145_);
   double tmp440_ = tmp438_+tmp439_;
   double tmp441_ = (tmp437_)-(tmp440_);
   double tmp442_ = (tmp441_)*(tmp204_);
   double tmp443_ = tmp429_*(tmp199_);
   double tmp444_ = tmp413_*(tmp145_);
   double tmp445_ = tmp418_*(tmp158_);
   double tmp446_ = tmp415_*(tmp213_);
   double tmp447_ = tmp420_*(tmp207_);
   double tmp448_ = tmp446_-tmp447_;
   double tmp449_ = tmp426_*(tmp207_);
   double tmp450_ = tmp415_*(tmp210_);
   double tmp451_ = tmp449_-tmp450_;
   double tmp452_ = tmp420_*(tmp210_);
   double tmp453_ = tmp426_*(tmp213_);
   double tmp454_ = tmp452_-tmp453_;
   double tmp455_ = tmp1_*tmp134_;
   double tmp456_ = tmp455_*(tmp151_);
   double tmp457_ = tmp24_*tmp108_;
   double tmp458_ = tmp457_*(tmp145_);
   double tmp459_ = tmp456_+tmp458_;
   double tmp460_ = tmp1_*tmp10_;
   double tmp461_ = tmp460_*(tmp170_);
   double tmp462_ = tmp24_*tmp159_;
   double tmp463_ = tmp462_*(tmp158_);
   double tmp464_ = tmp461_+tmp463_;
   double tmp465_ = (tmp459_)-(tmp464_);
   double tmp466_ = (tmp465_)*(tmp172_);
   double tmp467_ = tmp460_*(tmp187_);
   double tmp468_ = tmp24_*tmp177_;
   double tmp469_ = tmp468_*(tmp158_);
   double tmp470_ = tmp467_+tmp469_;
   double tmp471_ = tmp1_*tmp189_;
   double tmp472_ = tmp471_*(tmp151_);
   double tmp473_ = tmp457_*(tmp199_);
   double tmp474_ = tmp472_+tmp473_;
   double tmp475_ = (tmp470_)-(tmp474_);
   double tmp476_ = (tmp475_)*(tmp201_);
   double tmp477_ = tmp471_*(tmp170_);
   double tmp478_ = tmp462_*(tmp199_);
   double tmp479_ = tmp477_+tmp478_;
   double tmp480_ = tmp455_*(tmp187_);
   double tmp481_ = tmp468_*(tmp145_);
   double tmp482_ = tmp480_+tmp481_;
   double tmp483_ = (tmp479_)-(tmp482_);
   double tmp484_ = (tmp483_)*(tmp204_);
   double tmp485_ = tmp471_*(tmp199_);
   double tmp486_ = tmp455_*(tmp145_);
   double tmp487_ = tmp460_*(tmp158_);
   double tmp488_ = tmp457_*(tmp213_);
   double tmp489_ = tmp462_*(tmp207_);
   double tmp490_ = tmp488_-tmp489_;
   double tmp491_ = tmp468_*(tmp207_);
   double tmp492_ = tmp457_*(tmp210_);
   double tmp493_ = tmp491_-tmp492_;
   double tmp494_ = tmp462_*(tmp210_);
   double tmp495_ = tmp468_*(tmp213_);
   double tmp496_ = tmp494_-tmp495_;
   double tmp497_ = tmp6_*tmp134_;
   double tmp498_ = tmp497_*(tmp151_);
   double tmp499_ = tmp34_*tmp108_;
   double tmp500_ = tmp499_*(tmp145_);
   double tmp501_ = tmp498_+tmp500_;
   double tmp502_ = tmp6_*tmp10_;
   double tmp503_ = tmp502_*(tmp170_);
   double tmp504_ = tmp34_*tmp159_;
   double tmp505_ = tmp504_*(tmp158_);
   double tmp506_ = tmp503_+tmp505_;
   double tmp507_ = (tmp501_)-(tmp506_);
   double tmp508_ = (tmp507_)*(tmp172_);
   double tmp509_ = tmp502_*(tmp187_);
   double tmp510_ = tmp34_*tmp177_;
   double tmp511_ = tmp510_*(tmp158_);
   double tmp512_ = tmp509_+tmp511_;
   double tmp513_ = tmp6_*tmp189_;
   double tmp514_ = tmp513_*(tmp151_);
   double tmp515_ = tmp499_*(tmp199_);
   double tmp516_ = tmp514_+tmp515_;
   double tmp517_ = (tmp512_)-(tmp516_);
   double tmp518_ = (tmp517_)*(tmp201_);
   double tmp519_ = tmp513_*(tmp170_);
   double tmp520_ = tmp504_*(tmp199_);
   double tmp521_ = tmp519_+tmp520_;
   double tmp522_ = tmp497_*(tmp187_);
   double tmp523_ = tmp510_*(tmp145_);
   double tmp524_ = tmp522_+tmp523_;
   double tmp525_ = (tmp521_)-(tmp524_);
   double tmp526_ = (tmp525_)*(tmp204_);
   double tmp527_ = tmp513_*(tmp199_);
   double tmp528_ = tmp497_*(tmp145_);
   double tmp529_ = tmp502_*(tmp158_);
   double tmp530_ = tmp499_*(tmp213_);
   double tmp531_ = tmp504_*(tmp207_);
   double tmp532_ = tmp530_-tmp531_;
   double tmp533_ = tmp510_*(tmp207_);
   double tmp534_ = tmp499_*(tmp210_);
   double tmp535_ = tmp533_-tmp534_;
   double tmp536_ = tmp504_*(tmp210_);
   double tmp537_ = tmp510_*(tmp213_);
   double tmp538_ = tmp536_-tmp537_;
   double tmp539_ = mLocXL1*tmp0_;
   double tmp540_ = mLocXL2*tmp22_;
   double tmp541_ = tmp539_*tmp134_;
   double tmp542_ = tmp541_*(tmp151_);
   double tmp543_ = tmp540_*tmp108_;
   double tmp544_ = tmp543_*(tmp145_);
   double tmp545_ = tmp542_+tmp544_;
   double tmp546_ = tmp539_*tmp10_;
   double tmp547_ = tmp546_*(tmp170_);
   double tmp548_ = tmp540_*tmp159_;
   double tmp549_ = tmp548_*(tmp158_);
   double tmp550_ = tmp547_+tmp549_;
   double tmp551_ = (tmp545_)-(tmp550_);
   double tmp552_ = (tmp551_)*(tmp172_);
   double tmp553_ = tmp546_*(tmp187_);
   double tmp554_ = tmp540_*tmp177_;
   double tmp555_ = tmp554_*(tmp158_);
   double tmp556_ = tmp553_+tmp555_;
   double tmp557_ = tmp539_*tmp189_;
   double tmp558_ = tmp557_*(tmp151_);
   double tmp559_ = tmp543_*(tmp199_);
   double tmp560_ = tmp558_+tmp559_;
   double tmp561_ = (tmp556_)-(tmp560_);
   double tmp562_ = (tmp561_)*(tmp201_);
   double tmp563_ = tmp557_*(tmp170_);
   double tmp564_ = tmp548_*(tmp199_);
   double tmp565_ = tmp563_+tmp564_;
   double tmp566_ = tmp541_*(tmp187_);
   double tmp567_ = tmp554_*(tmp145_);
   double tmp568_ = tmp566_+tmp567_;
   double tmp569_ = (tmp565_)-(tmp568_);
   double tmp570_ = (tmp569_)*(tmp204_);
   double tmp571_ = tmp557_*(tmp199_);
   double tmp572_ = tmp541_*(tmp145_);
   double tmp573_ = tmp546_*(tmp158_);
   double tmp574_ = tmp543_*(tmp213_);
   double tmp575_ = tmp548_*(tmp207_);
   double tmp576_ = tmp574_-tmp575_;
   double tmp577_ = tmp554_*(tmp207_);
   double tmp578_ = tmp543_*(tmp210_);
   double tmp579_ = tmp577_-tmp578_;
   double tmp580_ = tmp548_*(tmp210_);
   double tmp581_ = tmp554_*(tmp213_);
   double tmp582_ = tmp580_-tmp581_;
   double tmp583_ = tmp1_*mLocYL1;
   double tmp584_ = tmp24_*mLocYL2;
   double tmp585_ = tmp583_*tmp134_;
   double tmp586_ = tmp585_*(tmp151_);
   double tmp587_ = tmp584_*tmp108_;
   double tmp588_ = tmp587_*(tmp145_);
   double tmp589_ = tmp586_+tmp588_;
   double tmp590_ = tmp583_*tmp10_;
   double tmp591_ = tmp590_*(tmp170_);
   double tmp592_ = tmp584_*tmp159_;
   double tmp593_ = tmp592_*(tmp158_);
   double tmp594_ = tmp591_+tmp593_;
   double tmp595_ = (tmp589_)-(tmp594_);
   double tmp596_ = (tmp595_)*(tmp172_);
   double tmp597_ = tmp590_*(tmp187_);
   double tmp598_ = tmp584_*tmp177_;
   double tmp599_ = tmp598_*(tmp158_);
   double tmp600_ = tmp597_+tmp599_;
   double tmp601_ = tmp583_*tmp189_;
   double tmp602_ = tmp601_*(tmp151_);
   double tmp603_ = tmp587_*(tmp199_);
   double tmp604_ = tmp602_+tmp603_;
   double tmp605_ = (tmp600_)-(tmp604_);
   double tmp606_ = (tmp605_)*(tmp201_);
   double tmp607_ = tmp601_*(tmp170_);
   double tmp608_ = tmp592_*(tmp199_);
   double tmp609_ = tmp607_+tmp608_;
   double tmp610_ = tmp585_*(tmp187_);
   double tmp611_ = tmp598_*(tmp145_);
   double tmp612_ = tmp610_+tmp611_;
   double tmp613_ = (tmp609_)-(tmp612_);
   double tmp614_ = (tmp613_)*(tmp204_);
   double tmp615_ = tmp601_*(tmp199_);
   double tmp616_ = tmp585_*(tmp145_);
   double tmp617_ = tmp590_*(tmp158_);
   double tmp618_ = tmp587_*(tmp213_);
   double tmp619_ = tmp592_*(tmp207_);
   double tmp620_ = tmp618_-tmp619_;
   double tmp621_ = tmp598_*(tmp207_);
   double tmp622_ = tmp587_*(tmp210_);
   double tmp623_ = tmp621_-tmp622_;
   double tmp624_ = tmp592_*(tmp210_);
   double tmp625_ = tmp598_*(tmp213_);
   double tmp626_ = tmp624_-tmp625_;
   double tmp627_ = tmp7_*tmp134_;
   double tmp628_ = tmp627_*(tmp151_);
   double tmp629_ = tmp38_*tmp108_;
   double tmp630_ = tmp629_*(tmp145_);
   double tmp631_ = tmp628_+tmp630_;
   double tmp632_ = tmp7_*tmp10_;
   double tmp633_ = tmp632_*(tmp170_);
   double tmp634_ = tmp38_*tmp159_;
   double tmp635_ = tmp634_*(tmp158_);
   double tmp636_ = tmp633_+tmp635_;
   double tmp637_ = (tmp631_)-(tmp636_);
   double tmp638_ = (tmp637_)*(tmp172_);
   double tmp639_ = tmp632_*(tmp187_);
   double tmp640_ = tmp38_*tmp177_;
   double tmp641_ = tmp640_*(tmp158_);
   double tmp642_ = tmp639_+tmp641_;
   double tmp643_ = tmp7_*tmp189_;
   double tmp644_ = tmp643_*(tmp151_);
   double tmp645_ = tmp629_*(tmp199_);
   double tmp646_ = tmp644_+tmp645_;
   double tmp647_ = (tmp642_)-(tmp646_);
   double tmp648_ = (tmp647_)*(tmp201_);
   double tmp649_ = tmp643_*(tmp170_);
   double tmp650_ = tmp634_*(tmp199_);
   double tmp651_ = tmp649_+tmp650_;
   double tmp652_ = tmp627_*(tmp187_);
   double tmp653_ = tmp640_*(tmp145_);
   double tmp654_ = tmp652_+tmp653_;
   double tmp655_ = (tmp651_)-(tmp654_);
   double tmp656_ = (tmp655_)*(tmp204_);
   double tmp657_ = tmp643_*(tmp199_);
   double tmp658_ = tmp627_*(tmp145_);
   double tmp659_ = tmp632_*(tmp158_);
   double tmp660_ = tmp629_*(tmp213_);
   double tmp661_ = tmp634_*(tmp207_);
   double tmp662_ = tmp660_-tmp661_;
   double tmp663_ = tmp640_*(tmp207_);
   double tmp664_ = tmp629_*(tmp210_);
   double tmp665_ = tmp663_-tmp664_;
   double tmp666_ = tmp634_*(tmp210_);
   double tmp667_ = tmp640_*(tmp213_);
   double tmp668_ = tmp666_-tmp667_;
   double tmp669_ = (tmp138_)*(tmp151_);
   double tmp670_ = tmp147_*(tmp145_);
   double tmp671_ = tmp669_+tmp670_;
   double tmp672_ = tmp154_*(tmp170_);
   double tmp673_ = (tmp163_)*(tmp158_);
   double tmp674_ = tmp672_+tmp673_;
   double tmp675_ = (tmp671_)-(tmp674_);
   double tmp676_ = (tmp675_)*(tmp172_);
   double tmp677_ = tmp154_*(tmp187_);
   double tmp678_ = (tmp181_)*(tmp158_);
   double tmp679_ = tmp677_+tmp678_;
   double tmp680_ = (tmp193_)*(tmp151_);
   double tmp681_ = tmp147_*(tmp199_);
   double tmp682_ = tmp680_+tmp681_;
   double tmp683_ = (tmp679_)-(tmp682_);
   double tmp684_ = (tmp683_)*(tmp201_);
   double tmp685_ = (tmp193_)*(tmp170_);
   double tmp686_ = (tmp163_)*(tmp199_);
   double tmp687_ = tmp685_+tmp686_;
   double tmp688_ = (tmp138_)*(tmp187_);
   double tmp689_ = (tmp181_)*(tmp145_);
   double tmp690_ = tmp688_+tmp689_;
   double tmp691_ = (tmp687_)-(tmp690_);
   double tmp692_ = (tmp691_)*(tmp204_);
   double tmp693_ = (tmp193_)*(tmp199_);
   double tmp694_ = (tmp138_)*(tmp145_);
   double tmp695_ = tmp154_*(tmp158_);
   double tmp696_ = tmp147_*(tmp213_);
   double tmp697_ = (tmp163_)*(tmp207_);
   double tmp698_ = tmp696_-tmp697_;
   double tmp699_ = (tmp181_)*(tmp207_);
   double tmp700_ = tmp147_*(tmp210_);
   double tmp701_ = tmp699_-tmp700_;
   double tmp702_ = (tmp163_)*(tmp210_);
   double tmp703_ = (tmp181_)*(tmp213_);
   double tmp704_ = tmp702_-tmp703_;
   double tmp705_ = mLocYL1*(tmp138_);
   double tmp706_ = tmp705_*(tmp151_);
   double tmp707_ = mLocYL2*tmp147_;
   double tmp708_ = tmp707_*(tmp145_);
   double tmp709_ = tmp706_+tmp708_;
   double tmp710_ = mLocYL1*tmp154_;
   double tmp711_ = tmp710_*(tmp170_);
   double tmp712_ = mLocYL2*(tmp163_);
   double tmp713_ = tmp712_*(tmp158_);
   double tmp714_ = tmp711_+tmp713_;
   double tmp715_ = (tmp709_)-(tmp714_);
   double tmp716_ = (tmp715_)*(tmp172_);
   double tmp717_ = tmp710_*(tmp187_);
   double tmp718_ = mLocYL2*(tmp181_);
   double tmp719_ = tmp718_*(tmp158_);
   double tmp720_ = tmp717_+tmp719_;
   double tmp721_ = mLocYL1*(tmp193_);
   double tmp722_ = tmp721_*(tmp151_);
   double tmp723_ = tmp707_*(tmp199_);
   double tmp724_ = tmp722_+tmp723_;
   double tmp725_ = (tmp720_)-(tmp724_);
   double tmp726_ = (tmp725_)*(tmp201_);
   double tmp727_ = tmp721_*(tmp170_);
   double tmp728_ = tmp712_*(tmp199_);
   double tmp729_ = tmp727_+tmp728_;
   double tmp730_ = tmp705_*(tmp187_);
   double tmp731_ = tmp718_*(tmp145_);
   double tmp732_ = tmp730_+tmp731_;
   double tmp733_ = (tmp729_)-(tmp732_);
   double tmp734_ = (tmp733_)*(tmp204_);
   double tmp735_ = tmp721_*(tmp199_);
   double tmp736_ = tmp705_*(tmp145_);
   double tmp737_ = tmp710_*(tmp158_);
   double tmp738_ = tmp707_*(tmp213_);
   double tmp739_ = tmp712_*(tmp207_);
   double tmp740_ = tmp738_-tmp739_;
   double tmp741_ = tmp718_*(tmp207_);
   double tmp742_ = tmp707_*(tmp210_);
   double tmp743_ = tmp741_-tmp742_;
   double tmp744_ = tmp712_*(tmp210_);
   double tmp745_ = tmp718_*(tmp213_);
   double tmp746_ = tmp744_-tmp745_;
   double tmp747_ = mLocXL1*(tmp138_);
   double tmp748_ = tmp747_*(tmp151_);
   double tmp749_ = mLocXL2*tmp147_;
   double tmp750_ = tmp749_*(tmp145_);
   double tmp751_ = tmp748_+tmp750_;
   double tmp752_ = mLocXL1*tmp154_;
   double tmp753_ = tmp752_*(tmp170_);
   double tmp754_ = mLocXL2*(tmp163_);
   double tmp755_ = tmp754_*(tmp158_);
   double tmp756_ = tmp753_+tmp755_;
   double tmp757_ = (tmp751_)-(tmp756_);
   double tmp758_ = (tmp757_)*(tmp172_);
   double tmp759_ = tmp752_*(tmp187_);
   double tmp760_ = mLocXL2*(tmp181_);
   double tmp761_ = tmp760_*(tmp158_);
   double tmp762_ = tmp759_+tmp761_;
   double tmp763_ = mLocXL1*(tmp193_);
   double tmp764_ = tmp763_*(tmp151_);
   double tmp765_ = tmp749_*(tmp199_);
   double tmp766_ = tmp764_+tmp765_;
   double tmp767_ = (tmp762_)-(tmp766_);
   double tmp768_ = (tmp767_)*(tmp201_);
   double tmp769_ = tmp763_*(tmp170_);
   double tmp770_ = tmp754_*(tmp199_);
   double tmp771_ = tmp769_+tmp770_;
   double tmp772_ = tmp747_*(tmp187_);
   double tmp773_ = tmp760_*(tmp145_);
   double tmp774_ = tmp772_+tmp773_;
   double tmp775_ = (tmp771_)-(tmp774_);
   double tmp776_ = (tmp775_)*(tmp204_);
   double tmp777_ = tmp763_*(tmp199_);
   double tmp778_ = tmp747_*(tmp145_);
   double tmp779_ = tmp752_*(tmp158_);
   double tmp780_ = tmp749_*(tmp213_);
   double tmp781_ = tmp754_*(tmp207_);
   double tmp782_ = tmp780_-tmp781_;
   double tmp783_ = tmp760_*(tmp207_);
   double tmp784_ = tmp749_*(tmp210_);
   double tmp785_ = tmp783_-tmp784_;
   double tmp786_ = tmp754_*(tmp210_);
   double tmp787_ = tmp760_*(tmp213_);
   double tmp788_ = tmp786_-tmp787_;
   double tmp789_ = tmp0_*(tmp138_);
   double tmp790_ = tmp789_*(tmp151_);
   double tmp791_ = tmp22_*tmp147_;
   double tmp792_ = tmp791_*(tmp145_);
   double tmp793_ = tmp790_+tmp792_;
   double tmp794_ = tmp0_*tmp154_;
   double tmp795_ = tmp794_*(tmp170_);
   double tmp796_ = tmp22_*(tmp163_);
   double tmp797_ = tmp796_*(tmp158_);
   double tmp798_ = tmp795_+tmp797_;
   double tmp799_ = (tmp793_)-(tmp798_);
   double tmp800_ = (tmp799_)*(tmp172_);
   double tmp801_ = tmp794_*(tmp187_);
   double tmp802_ = tmp22_*(tmp181_);
   double tmp803_ = tmp802_*(tmp158_);
   double tmp804_ = tmp801_+tmp803_;
   double tmp805_ = tmp0_*(tmp193_);
   double tmp806_ = tmp805_*(tmp151_);
   double tmp807_ = tmp791_*(tmp199_);
   double tmp808_ = tmp806_+tmp807_;
   double tmp809_ = (tmp804_)-(tmp808_);
   double tmp810_ = (tmp809_)*(tmp201_);
   double tmp811_ = tmp805_*(tmp170_);
   double tmp812_ = tmp796_*(tmp199_);
   double tmp813_ = tmp811_+tmp812_;
   double tmp814_ = tmp789_*(tmp187_);
   double tmp815_ = tmp802_*(tmp145_);
   double tmp816_ = tmp814_+tmp815_;
   double tmp817_ = (tmp813_)-(tmp816_);
   double tmp818_ = (tmp817_)*(tmp204_);
   double tmp819_ = tmp805_*(tmp199_);
   double tmp820_ = tmp789_*(tmp145_);
   double tmp821_ = tmp794_*(tmp158_);
   double tmp822_ = tmp791_*(tmp213_);
   double tmp823_ = tmp796_*(tmp207_);
   double tmp824_ = tmp822_-tmp823_;
   double tmp825_ = tmp802_*(tmp207_);
   double tmp826_ = tmp791_*(tmp210_);
   double tmp827_ = tmp825_-tmp826_;
   double tmp828_ = tmp796_*(tmp210_);
   double tmp829_ = tmp802_*(tmp213_);
   double tmp830_ = tmp828_-tmp829_;
   double tmp831_ = tmp411_*(tmp138_);
   double tmp832_ = tmp831_*(tmp151_);
   double tmp833_ = tmp412_*tmp147_;
   double tmp834_ = tmp833_*(tmp145_);
   double tmp835_ = tmp832_+tmp834_;
   double tmp836_ = tmp411_*tmp154_;
   double tmp837_ = tmp836_*(tmp170_);
   double tmp838_ = tmp412_*(tmp163_);
   double tmp839_ = tmp838_*(tmp158_);
   double tmp840_ = tmp837_+tmp839_;
   double tmp841_ = (tmp835_)-(tmp840_);
   double tmp842_ = (tmp841_)*(tmp172_);
   double tmp843_ = tmp836_*(tmp187_);
   double tmp844_ = tmp412_*(tmp181_);
   double tmp845_ = tmp844_*(tmp158_);
   double tmp846_ = tmp843_+tmp845_;
   double tmp847_ = tmp411_*(tmp193_);
   double tmp848_ = tmp847_*(tmp151_);
   double tmp849_ = tmp833_*(tmp199_);
   double tmp850_ = tmp848_+tmp849_;
   double tmp851_ = (tmp846_)-(tmp850_);
   double tmp852_ = (tmp851_)*(tmp201_);
   double tmp853_ = tmp847_*(tmp170_);
   double tmp854_ = tmp838_*(tmp199_);
   double tmp855_ = tmp853_+tmp854_;
   double tmp856_ = tmp831_*(tmp187_);
   double tmp857_ = tmp844_*(tmp145_);
   double tmp858_ = tmp856_+tmp857_;
   double tmp859_ = (tmp855_)-(tmp858_);
   double tmp860_ = (tmp859_)*(tmp204_);
   double tmp861_ = tmp847_*(tmp199_);
   double tmp862_ = tmp831_*(tmp145_);
   double tmp863_ = tmp836_*(tmp158_);
   double tmp864_ = tmp833_*(tmp213_);
   double tmp865_ = tmp838_*(tmp207_);
   double tmp866_ = tmp864_-tmp865_;
   double tmp867_ = tmp844_*(tmp207_);
   double tmp868_ = tmp833_*(tmp210_);
   double tmp869_ = tmp867_-tmp868_;
   double tmp870_ = tmp838_*(tmp210_);
   double tmp871_ = tmp844_*(tmp213_);
   double tmp872_ = tmp870_-tmp871_;
   double tmp873_ = tmp1_*(tmp138_);
   double tmp874_ = tmp873_*(tmp151_);
   double tmp875_ = tmp24_*tmp147_;
   double tmp876_ = tmp875_*(tmp145_);
   double tmp877_ = tmp874_+tmp876_;
   double tmp878_ = tmp1_*tmp154_;
   double tmp879_ = tmp878_*(tmp170_);
   double tmp880_ = tmp24_*(tmp163_);
   double tmp881_ = tmp880_*(tmp158_);
   double tmp882_ = tmp879_+tmp881_;
   double tmp883_ = (tmp877_)-(tmp882_);
   double tmp884_ = (tmp883_)*(tmp172_);
   double tmp885_ = tmp878_*(tmp187_);
   double tmp886_ = tmp24_*(tmp181_);
   double tmp887_ = tmp886_*(tmp158_);
   double tmp888_ = tmp885_+tmp887_;
   double tmp889_ = tmp1_*(tmp193_);
   double tmp890_ = tmp889_*(tmp151_);
   double tmp891_ = tmp875_*(tmp199_);
   double tmp892_ = tmp890_+tmp891_;
   double tmp893_ = (tmp888_)-(tmp892_);
   double tmp894_ = (tmp893_)*(tmp201_);
   double tmp895_ = tmp889_*(tmp170_);
   double tmp896_ = tmp880_*(tmp199_);
   double tmp897_ = tmp895_+tmp896_;
   double tmp898_ = tmp873_*(tmp187_);
   double tmp899_ = tmp886_*(tmp145_);
   double tmp900_ = tmp898_+tmp899_;
   double tmp901_ = (tmp897_)-(tmp900_);
   double tmp902_ = (tmp901_)*(tmp204_);
   double tmp903_ = tmp889_*(tmp199_);
   double tmp904_ = tmp873_*(tmp145_);
   double tmp905_ = tmp878_*(tmp158_);
   double tmp906_ = tmp875_*(tmp213_);
   double tmp907_ = tmp880_*(tmp207_);
   double tmp908_ = tmp906_-tmp907_;
   double tmp909_ = tmp886_*(tmp207_);
   double tmp910_ = tmp875_*(tmp210_);
   double tmp911_ = tmp909_-tmp910_;
   double tmp912_ = tmp880_*(tmp210_);
   double tmp913_ = tmp886_*(tmp213_);
   double tmp914_ = tmp912_-tmp913_;
   double tmp915_ = tmp6_*(tmp138_);
   double tmp916_ = tmp915_*(tmp151_);
   double tmp917_ = tmp34_*tmp147_;
   double tmp918_ = tmp917_*(tmp145_);
   double tmp919_ = tmp916_+tmp918_;
   double tmp920_ = tmp6_*tmp154_;
   double tmp921_ = tmp920_*(tmp170_);
   double tmp922_ = tmp34_*(tmp163_);
   double tmp923_ = tmp922_*(tmp158_);
   double tmp924_ = tmp921_+tmp923_;
   double tmp925_ = (tmp919_)-(tmp924_);
   double tmp926_ = (tmp925_)*(tmp172_);
   double tmp927_ = tmp920_*(tmp187_);
   double tmp928_ = tmp34_*(tmp181_);
   double tmp929_ = tmp928_*(tmp158_);
   double tmp930_ = tmp927_+tmp929_;
   double tmp931_ = tmp6_*(tmp193_);
   double tmp932_ = tmp931_*(tmp151_);
   double tmp933_ = tmp917_*(tmp199_);
   double tmp934_ = tmp932_+tmp933_;
   double tmp935_ = (tmp930_)-(tmp934_);
   double tmp936_ = (tmp935_)*(tmp201_);
   double tmp937_ = tmp931_*(tmp170_);
   double tmp938_ = tmp922_*(tmp199_);
   double tmp939_ = tmp937_+tmp938_;
   double tmp940_ = tmp915_*(tmp187_);
   double tmp941_ = tmp928_*(tmp145_);
   double tmp942_ = tmp940_+tmp941_;
   double tmp943_ = (tmp939_)-(tmp942_);
   double tmp944_ = (tmp943_)*(tmp204_);
   double tmp945_ = tmp931_*(tmp199_);
   double tmp946_ = tmp915_*(tmp145_);
   double tmp947_ = tmp920_*(tmp158_);
   double tmp948_ = tmp917_*(tmp213_);
   double tmp949_ = tmp922_*(tmp207_);
   double tmp950_ = tmp948_-tmp949_;
   double tmp951_ = tmp928_*(tmp207_);
   double tmp952_ = tmp917_*(tmp210_);
   double tmp953_ = tmp951_-tmp952_;
   double tmp954_ = tmp922_*(tmp210_);
   double tmp955_ = tmp928_*(tmp213_);
   double tmp956_ = tmp954_-tmp955_;
   double tmp957_ = tmp539_*(tmp138_);
   double tmp958_ = tmp957_*(tmp151_);
   double tmp959_ = tmp540_*tmp147_;
   double tmp960_ = tmp959_*(tmp145_);
   double tmp961_ = tmp958_+tmp960_;
   double tmp962_ = tmp539_*tmp154_;
   double tmp963_ = tmp962_*(tmp170_);
   double tmp964_ = tmp540_*(tmp163_);
   double tmp965_ = tmp964_*(tmp158_);
   double tmp966_ = tmp963_+tmp965_;
   double tmp967_ = (tmp961_)-(tmp966_);
   double tmp968_ = (tmp967_)*(tmp172_);
   double tmp969_ = tmp962_*(tmp187_);
   double tmp970_ = tmp540_*(tmp181_);
   double tmp971_ = tmp970_*(tmp158_);
   double tmp972_ = tmp969_+tmp971_;
   double tmp973_ = tmp539_*(tmp193_);
   double tmp974_ = tmp973_*(tmp151_);
   double tmp975_ = tmp959_*(tmp199_);
   double tmp976_ = tmp974_+tmp975_;
   double tmp977_ = (tmp972_)-(tmp976_);
   double tmp978_ = (tmp977_)*(tmp201_);
   double tmp979_ = tmp973_*(tmp170_);
   double tmp980_ = tmp964_*(tmp199_);
   double tmp981_ = tmp979_+tmp980_;
   double tmp982_ = tmp957_*(tmp187_);
   double tmp983_ = tmp970_*(tmp145_);
   double tmp984_ = tmp982_+tmp983_;
   double tmp985_ = (tmp981_)-(tmp984_);
   double tmp986_ = (tmp985_)*(tmp204_);
   double tmp987_ = tmp973_*(tmp199_);
   double tmp988_ = tmp957_*(tmp145_);
   double tmp989_ = tmp962_*(tmp158_);
   double tmp990_ = tmp959_*(tmp213_);
   double tmp991_ = tmp964_*(tmp207_);
   double tmp992_ = tmp990_-tmp991_;
   double tmp993_ = tmp970_*(tmp207_);
   double tmp994_ = tmp959_*(tmp210_);
   double tmp995_ = tmp993_-tmp994_;
   double tmp996_ = tmp964_*(tmp210_);
   double tmp997_ = tmp970_*(tmp213_);
   double tmp998_ = tmp996_-tmp997_;
   double tmp999_ = tmp583_*(tmp138_);
   double tmp1000_ = tmp999_*(tmp151_);
   double tmp1001_ = tmp584_*tmp147_;
   double tmp1002_ = tmp1001_*(tmp145_);
   double tmp1003_ = tmp1000_+tmp1002_;
   double tmp1004_ = tmp583_*tmp154_;
   double tmp1005_ = tmp1004_*(tmp170_);
   double tmp1006_ = tmp584_*(tmp163_);
   double tmp1007_ = tmp1006_*(tmp158_);
   double tmp1008_ = tmp1005_+tmp1007_;
   double tmp1009_ = (tmp1003_)-(tmp1008_);
   double tmp1010_ = (tmp1009_)*(tmp172_);
   double tmp1011_ = tmp1004_*(tmp187_);
   double tmp1012_ = tmp584_*(tmp181_);
   double tmp1013_ = tmp1012_*(tmp158_);
   double tmp1014_ = tmp1011_+tmp1013_;
   double tmp1015_ = tmp583_*(tmp193_);
   double tmp1016_ = tmp1015_*(tmp151_);
   double tmp1017_ = tmp1001_*(tmp199_);
   double tmp1018_ = tmp1016_+tmp1017_;
   double tmp1019_ = (tmp1014_)-(tmp1018_);
   double tmp1020_ = (tmp1019_)*(tmp201_);
   double tmp1021_ = tmp1015_*(tmp170_);
   double tmp1022_ = tmp1006_*(tmp199_);
   double tmp1023_ = tmp1021_+tmp1022_;
   double tmp1024_ = tmp999_*(tmp187_);
   double tmp1025_ = tmp1012_*(tmp145_);
   double tmp1026_ = tmp1024_+tmp1025_;
   double tmp1027_ = (tmp1023_)-(tmp1026_);
   double tmp1028_ = (tmp1027_)*(tmp204_);
   double tmp1029_ = tmp1015_*(tmp199_);
   double tmp1030_ = tmp999_*(tmp145_);
   double tmp1031_ = tmp1004_*(tmp158_);
   double tmp1032_ = tmp1001_*(tmp213_);
   double tmp1033_ = tmp1006_*(tmp207_);
   double tmp1034_ = tmp1032_-tmp1033_;
   double tmp1035_ = tmp1012_*(tmp207_);
   double tmp1036_ = tmp1001_*(tmp210_);
   double tmp1037_ = tmp1035_-tmp1036_;
   double tmp1038_ = tmp1006_*(tmp210_);
   double tmp1039_ = tmp1012_*(tmp213_);
   double tmp1040_ = tmp1038_-tmp1039_;
   double tmp1041_ = tmp7_*(tmp138_);
   double tmp1042_ = tmp1041_*(tmp151_);
   double tmp1043_ = tmp38_*tmp147_;
   double tmp1044_ = tmp1043_*(tmp145_);
   double tmp1045_ = tmp1042_+tmp1044_;
   double tmp1046_ = tmp7_*tmp154_;
   double tmp1047_ = tmp1046_*(tmp170_);
   double tmp1048_ = tmp38_*(tmp163_);
   double tmp1049_ = tmp1048_*(tmp158_);
   double tmp1050_ = tmp1047_+tmp1049_;
   double tmp1051_ = (tmp1045_)-(tmp1050_);
   double tmp1052_ = (tmp1051_)*(tmp172_);
   double tmp1053_ = tmp1046_*(tmp187_);
   double tmp1054_ = tmp38_*(tmp181_);
   double tmp1055_ = tmp1054_*(tmp158_);
   double tmp1056_ = tmp1053_+tmp1055_;
   double tmp1057_ = tmp7_*(tmp193_);
   double tmp1058_ = tmp1057_*(tmp151_);
   double tmp1059_ = tmp1043_*(tmp199_);
   double tmp1060_ = tmp1058_+tmp1059_;
   double tmp1061_ = (tmp1056_)-(tmp1060_);
   double tmp1062_ = (tmp1061_)*(tmp201_);
   double tmp1063_ = tmp1057_*(tmp170_);
   double tmp1064_ = tmp1048_*(tmp199_);
   double tmp1065_ = tmp1063_+tmp1064_;
   double tmp1066_ = tmp1041_*(tmp187_);
   double tmp1067_ = tmp1054_*(tmp145_);
   double tmp1068_ = tmp1066_+tmp1067_;
   double tmp1069_ = (tmp1065_)-(tmp1068_);
   double tmp1070_ = (tmp1069_)*(tmp204_);
   double tmp1071_ = tmp1057_*(tmp199_);
   double tmp1072_ = tmp1041_*(tmp145_);
   double tmp1073_ = tmp1046_*(tmp158_);
   double tmp1074_ = tmp1043_*(tmp213_);
   double tmp1075_ = tmp1048_*(tmp207_);
   double tmp1076_ = tmp1074_-tmp1075_;
   double tmp1077_ = tmp1054_*(tmp207_);
   double tmp1078_ = tmp1043_*(tmp210_);
   double tmp1079_ = tmp1077_-tmp1078_;
   double tmp1080_ = tmp1048_*(tmp210_);
   double tmp1081_ = tmp1054_*(tmp213_);
   double tmp1082_ = tmp1080_-tmp1081_;
   double tmp1083_ = -(1);
   double tmp1084_ = tmp1083_*tmp3_;
   double tmp1085_ = tmp1084_*tmp13_;
   double tmp1086_ = tmp1085_+tmp192_;
   double tmp1087_ = (tmp1086_)*(tmp83_);
   double tmp1088_ = tmp190_+tmp1087_;
   double tmp1089_ = tmp1084_*tmp141_;
   double tmp1090_ = tmp1089_+tmp197_;
   double tmp1091_ = tmp1088_+tmp1090_;
   double tmp1092_ = (tmp1091_)*(tmp151_);
   double tmp1093_ = tmp1092_*(tmp172_);
   double tmp1094_ = -(tmp8_);
   double tmp1095_ = tmp1084_*tmp11_;
   double tmp1096_ = tmp1084_*tmp62_;
   double tmp1097_ = tmp1096_*(tmp61_);
   double tmp1098_ = tmp1094_*tmp13_;
   double tmp1099_ = tmp1095_*tmp9_;
   double tmp1100_ = tmp1098_+tmp1099_;
   double tmp1101_ = (tmp1100_)*(tmp83_);
   double tmp1102_ = tmp1097_+tmp1101_;
   double tmp1103_ = tmp1094_*tmp141_;
   double tmp1104_ = tmp1095_*tmp13_;
   double tmp1105_ = tmp1103_+tmp1104_;
   double tmp1106_ = tmp1102_+tmp1105_;
   double tmp1107_ = (tmp1106_)*(tmp151_);
   double tmp1108_ = -(tmp1107_);
   double tmp1109_ = tmp1108_*(tmp201_);
   double tmp1110_ = (tmp1106_)*(tmp170_);
   double tmp1111_ = (tmp1091_)*(tmp187_);
   double tmp1112_ = tmp1110_-tmp1111_;
   double tmp1113_ = (tmp1112_)*(tmp204_);
   double tmp1114_ = (tmp1106_)*(tmp199_);
   double tmp1115_ = (tmp1091_)*(tmp145_);
   double tmp1116_ = -(tmp62_);
   double tmp1117_ = tmp1116_*tmp3_;
   double tmp1118_ = tmp1083_*tmp10_;
   double tmp1119_ = tmp1118_*tmp3_;
   double tmp1120_ = tmp1119_*(tmp61_);
   double tmp1121_ = tmp1117_*tmp9_;
   double tmp1122_ = tmp1121_*(tmp83_);
   double tmp1123_ = tmp1120_+tmp1122_;
   double tmp1124_ = tmp1117_*tmp13_;
   double tmp1125_ = tmp1123_+tmp1124_;
   double tmp1126_ = (tmp1125_)*(tmp151_);
   double tmp1127_ = tmp62_*(tmp61_);
   double tmp1128_ = tmp1118_*tmp9_;
   double tmp1129_ = tmp1128_*(tmp83_);
   double tmp1130_ = tmp1127_+tmp1129_;
   double tmp1131_ = tmp1118_*tmp13_;
   double tmp1132_ = tmp1130_+tmp1131_;
   double tmp1133_ = (tmp1132_)*(tmp170_);
   double tmp1134_ = tmp1126_-tmp1133_;
   double tmp1135_ = (tmp1134_)*(tmp172_);
   double tmp1136_ = tmp1116_*tmp8_;
   double tmp1137_ = (tmp1132_)*(tmp187_);
   double tmp1138_ = tmp1118_*tmp8_;
   double tmp1139_ = tmp1138_*(tmp61_);
   double tmp1140_ = tmp1136_*tmp9_;
   double tmp1141_ = tmp1140_*(tmp83_);
   double tmp1142_ = tmp1139_+tmp1141_;
   double tmp1143_ = tmp1136_*tmp13_;
   double tmp1144_ = tmp1142_+tmp1143_;
   double tmp1145_ = (tmp1144_)*(tmp151_);
   double tmp1146_ = tmp1137_-tmp1145_;
   double tmp1147_ = (tmp1146_)*(tmp201_);
   double tmp1148_ = (tmp1144_)*(tmp170_);
   double tmp1149_ = (tmp1125_)*(tmp187_);
   double tmp1150_ = tmp1148_-tmp1149_;
   double tmp1151_ = (tmp1150_)*(tmp204_);
   double tmp1152_ = (tmp1144_)*(tmp199_);
   double tmp1153_ = (tmp1125_)*(tmp145_);
   double tmp1154_ = (tmp1132_)*(tmp158_);
   double tmp1155_ = tmp1083_*tmp9_;
   double tmp1156_ = tmp1155_*tmp8_;
   double tmp1157_ = tmp13_*tmp12_;
   double tmp1158_ = tmp1156_+tmp1157_;
   double tmp1159_ = (tmp1158_)*(tmp83_);
   double tmp1160_ = -(tmp13_);
   double tmp1161_ = tmp1160_*tmp8_;
   double tmp1162_ = tmp1155_*tmp12_;
   double tmp1163_ = tmp1161_+tmp1162_;
   double tmp1164_ = tmp1159_+tmp1163_;
   double tmp1165_ = (tmp1164_)*(tmp151_);
   double tmp1166_ = tmp13_*tmp62_;
   double tmp1167_ = tmp1166_*(tmp83_);
   double tmp1168_ = tmp1155_*tmp62_;
   double tmp1169_ = tmp1167_+tmp1168_;
   double tmp1170_ = (tmp1169_)*(tmp170_);
   double tmp1171_ = tmp1165_-tmp1170_;
   double tmp1172_ = (tmp1171_)*(tmp172_);
   double tmp1173_ = (tmp1169_)*(tmp187_);
   double tmp1174_ = tmp1155_*tmp175_;
   double tmp1175_ = tmp13_*tmp176_;
   double tmp1176_ = tmp1174_+tmp1175_;
   double tmp1177_ = (tmp1176_)*(tmp83_);
   double tmp1178_ = tmp1160_*tmp175_;
   double tmp1179_ = tmp1155_*tmp176_;
   double tmp1180_ = tmp1178_+tmp1179_;
   double tmp1181_ = tmp1177_+tmp1180_;
   double tmp1182_ = (tmp1181_)*(tmp151_);
   double tmp1183_ = tmp1173_-tmp1182_;
   double tmp1184_ = (tmp1183_)*(tmp201_);
   double tmp1185_ = (tmp1181_)*(tmp170_);
   double tmp1186_ = (tmp1164_)*(tmp187_);
   double tmp1187_ = tmp1185_-tmp1186_;
   double tmp1188_ = (tmp1187_)*(tmp204_);
   double tmp1189_ = (tmp1181_)*(tmp199_);
   double tmp1190_ = (tmp1164_)*(tmp145_);
   double tmp1191_ = (tmp1169_)*(tmp158_);
   double tmp1192_ = tmp1083_*(tmp151_);
   double tmp1193_ = -(tmp1192_);
   double tmp1194_ = tmp1083_*(tmp170_);
   double tmp1195_ = tmp1083_*(tmp187_);
   double tmp1196_ = -(tmp1195_);
   double tmp1197_ = -(tmp1194_);
   double tmp1198_ = tmp1083_*tmp107_;
   double tmp1199_ = tmp1198_*tmp106_;
   double tmp1200_ = tmp1199_+tmp180_;
   double tmp1201_ = (tmp1200_)*(tmp130_);
   double tmp1202_ = tmp178_+tmp1201_;
   double tmp1203_ = tmp1198_*tmp166_;
   double tmp1204_ = tmp1203_+tmp185_;
   double tmp1205_ = tmp1202_+tmp1204_;
   double tmp1206_ = (tmp1205_)*(tmp158_);
   double tmp1207_ = -(tmp1206_);
   double tmp1208_ = tmp1207_*(tmp172_);
   double tmp1209_ = -(tmp131_);
   double tmp1210_ = tmp1198_*tmp132_;
   double tmp1211_ = tmp1198_*tmp39_;
   double tmp1212_ = tmp1211_*(tmp104_);
   double tmp1213_ = tmp1209_*tmp106_;
   double tmp1214_ = tmp1210_*tmp109_;
   double tmp1215_ = tmp1213_+tmp1214_;
   double tmp1216_ = (tmp1215_)*(tmp130_);
   double tmp1217_ = tmp1212_+tmp1216_;
   double tmp1218_ = tmp1209_*tmp166_;
   double tmp1219_ = tmp1210_*tmp106_;
   double tmp1220_ = tmp1218_+tmp1219_;
   double tmp1221_ = tmp1217_+tmp1220_;
   double tmp1222_ = (tmp1221_)*(tmp158_);
   double tmp1223_ = tmp1222_*(tmp201_);
   double tmp1224_ = (tmp1205_)*(tmp199_);
   double tmp1225_ = (tmp1221_)*(tmp145_);
   double tmp1226_ = tmp1224_-tmp1225_;
   double tmp1227_ = (tmp1226_)*(tmp204_);
   double tmp1228_ = (tmp1205_)*(tmp207_);
   double tmp1229_ = -(tmp1228_);
   double tmp1230_ = (tmp1221_)*(tmp207_);
   double tmp1231_ = (tmp1205_)*(tmp210_);
   double tmp1232_ = (tmp1221_)*(tmp213_);
   double tmp1233_ = tmp1231_-tmp1232_;
   double tmp1234_ = tmp1083_*tmp108_;
   double tmp1235_ = -(tmp39_);
   double tmp1236_ = tmp1235_*tmp107_;
   double tmp1237_ = tmp39_*(tmp104_);
   double tmp1238_ = tmp1234_*tmp109_;
   double tmp1239_ = tmp1238_*(tmp130_);
   double tmp1240_ = tmp1237_+tmp1239_;
   double tmp1241_ = tmp1234_*tmp106_;
   double tmp1242_ = tmp1240_+tmp1241_;
   double tmp1243_ = (tmp1242_)*(tmp145_);
   double tmp1244_ = tmp1234_*tmp107_;
   double tmp1245_ = tmp1244_*(tmp104_);
   double tmp1246_ = tmp1236_*tmp109_;
   double tmp1247_ = tmp1246_*(tmp130_);
   double tmp1248_ = tmp1245_+tmp1247_;
   double tmp1249_ = tmp1236_*tmp106_;
   double tmp1250_ = tmp1248_+tmp1249_;
   double tmp1251_ = (tmp1250_)*(tmp158_);
   double tmp1252_ = tmp1243_-tmp1251_;
   double tmp1253_ = (tmp1252_)*(tmp172_);
   double tmp1254_ = tmp1235_*tmp131_;
   double tmp1255_ = tmp1234_*tmp131_;
   double tmp1256_ = tmp1255_*(tmp104_);
   double tmp1257_ = tmp1254_*tmp109_;
   double tmp1258_ = tmp1257_*(tmp130_);
   double tmp1259_ = tmp1256_+tmp1258_;
   double tmp1260_ = tmp1254_*tmp106_;
   double tmp1261_ = tmp1259_+tmp1260_;
   double tmp1262_ = (tmp1261_)*(tmp158_);
   double tmp1263_ = (tmp1242_)*(tmp199_);
   double tmp1264_ = tmp1262_-tmp1263_;
   double tmp1265_ = (tmp1264_)*(tmp201_);
   double tmp1266_ = (tmp1250_)*(tmp199_);
   double tmp1267_ = (tmp1261_)*(tmp145_);
   double tmp1268_ = tmp1266_-tmp1267_;
   double tmp1269_ = (tmp1268_)*(tmp204_);
   double tmp1270_ = (tmp1242_)*(tmp213_);
   double tmp1271_ = (tmp1250_)*(tmp207_);
   double tmp1272_ = tmp1270_-tmp1271_;
   double tmp1273_ = (tmp1261_)*(tmp207_);
   double tmp1274_ = (tmp1242_)*(tmp210_);
   double tmp1275_ = tmp1273_-tmp1274_;
   double tmp1276_ = (tmp1250_)*(tmp210_);
   double tmp1277_ = (tmp1261_)*(tmp213_);
   double tmp1278_ = tmp1276_-tmp1277_;
   double tmp1279_ = tmp1083_*tmp109_;
   double tmp1280_ = tmp106_*tmp39_;
   double tmp1281_ = tmp1280_*(tmp130_);
   double tmp1282_ = tmp1279_*tmp39_;
   double tmp1283_ = tmp1281_+tmp1282_;
   double tmp1284_ = (tmp1283_)*(tmp145_);
   double tmp1285_ = tmp1279_*tmp131_;
   double tmp1286_ = tmp106_*tmp133_;
   double tmp1287_ = tmp1285_+tmp1286_;
   double tmp1288_ = (tmp1287_)*(tmp130_);
   double tmp1289_ = -(tmp106_);
   double tmp1290_ = tmp1289_*tmp131_;
   double tmp1291_ = tmp1279_*tmp133_;
   double tmp1292_ = tmp1290_+tmp1291_;
   double tmp1293_ = tmp1288_+tmp1292_;
   double tmp1294_ = (tmp1293_)*(tmp158_);
   double tmp1295_ = tmp1284_-tmp1294_;
   double tmp1296_ = (tmp1295_)*(tmp172_);
   double tmp1297_ = tmp1279_*tmp173_;
   double tmp1298_ = tmp106_*tmp174_;
   double tmp1299_ = tmp1297_+tmp1298_;
   double tmp1300_ = (tmp1299_)*(tmp130_);
   double tmp1301_ = tmp1289_*tmp173_;
   double tmp1302_ = tmp1279_*tmp174_;
   double tmp1303_ = tmp1301_+tmp1302_;
   double tmp1304_ = tmp1300_+tmp1303_;
   double tmp1305_ = (tmp1304_)*(tmp158_);
   double tmp1306_ = (tmp1283_)*(tmp199_);
   double tmp1307_ = tmp1305_-tmp1306_;
   double tmp1308_ = (tmp1307_)*(tmp201_);
   double tmp1309_ = (tmp1293_)*(tmp199_);
   double tmp1310_ = (tmp1304_)*(tmp145_);
   double tmp1311_ = tmp1309_-tmp1310_;
   double tmp1312_ = (tmp1311_)*(tmp204_);
   double tmp1313_ = (tmp1283_)*(tmp213_);
   double tmp1314_ = (tmp1293_)*(tmp207_);
   double tmp1315_ = tmp1313_-tmp1314_;
   double tmp1316_ = (tmp1304_)*(tmp207_);
   double tmp1317_ = (tmp1283_)*(tmp210_);
   double tmp1318_ = tmp1316_-tmp1317_;
   double tmp1319_ = (tmp1293_)*(tmp210_);
   double tmp1320_ = (tmp1304_)*(tmp213_);
   double tmp1321_ = tmp1319_-tmp1320_;
   double tmp1322_ = -(tmp151_);
   double tmp1323_ = -(tmp187_);
   double tmp1324_ = -(tmp170_);

  mVal[0] = (tmp282_)*(tmp272_);

  mCompDer[0][0] = ((((0.500000*(tmp230_+tmp230_+tmp238_+tmp238_+tmp246_+tmp246_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp259_+tmp259_+tmp260_+tmp260_+tmp261_+tmp261_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp275_)*(tmp199_)+tmp189_*(tmp216_)+(tmp278_)*(tmp145_)+tmp134_*(tmp219_)+(tmp281_)*(tmp158_)+tmp10_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp275_)*(tmp172_)+(tmp229_)*(tmp216_)+(tmp278_)*(tmp201_)+(tmp237_)*(tmp219_)+(tmp281_)*(tmp204_)+(tmp245_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][1] = ((((0.500000*(tmp294_+tmp294_+tmp304_+tmp304_+tmp312_+tmp312_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp313_+tmp313_+tmp314_+tmp314_+tmp315_+tmp315_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp319_)*(tmp199_)+tmp299_*(tmp216_)+(tmp322_)*(tmp145_)+tmp283_*(tmp219_)+(tmp325_)*(tmp158_)+tmp288_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp319_)*(tmp172_)+(tmp293_)*(tmp216_)+(tmp322_)*(tmp201_)+(tmp303_)*(tmp219_)+(tmp325_)*(tmp204_)+(tmp311_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][2] = ((((0.500000*(tmp338_+tmp338_+tmp348_+tmp348_+tmp356_+tmp356_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp357_+tmp357_+tmp358_+tmp358_+tmp359_+tmp359_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp362_)*(tmp199_)+tmp343_*(tmp216_)+(tmp365_)*(tmp145_)+tmp327_*(tmp219_)+(tmp368_)*(tmp158_)+tmp332_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp362_)*(tmp172_)+(tmp337_)*(tmp216_)+(tmp365_)*(tmp201_)+(tmp347_)*(tmp219_)+(tmp368_)*(tmp204_)+(tmp355_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][3] = ((((0.500000*(tmp380_+tmp380_+tmp390_+tmp390_+tmp398_+tmp398_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp399_+tmp399_+tmp400_+tmp400_+tmp401_+tmp401_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp404_)*(tmp199_)+tmp385_*(tmp216_)+(tmp407_)*(tmp145_)+tmp369_*(tmp219_)+(tmp410_)*(tmp158_)+tmp374_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp404_)*(tmp172_)+(tmp379_)*(tmp216_)+(tmp407_)*(tmp201_)+(tmp389_)*(tmp219_)+(tmp410_)*(tmp204_)+(tmp397_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][4] = ((((0.500000*(tmp424_+tmp424_+tmp434_+tmp434_+tmp442_+tmp442_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp443_+tmp443_+tmp444_+tmp444_+tmp445_+tmp445_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp448_)*(tmp199_)+tmp429_*(tmp216_)+(tmp451_)*(tmp145_)+tmp413_*(tmp219_)+(tmp454_)*(tmp158_)+tmp418_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp448_)*(tmp172_)+(tmp423_)*(tmp216_)+(tmp451_)*(tmp201_)+(tmp433_)*(tmp219_)+(tmp454_)*(tmp204_)+(tmp441_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][5] = ((((0.500000*(tmp466_+tmp466_+tmp476_+tmp476_+tmp484_+tmp484_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp485_+tmp485_+tmp486_+tmp486_+tmp487_+tmp487_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp490_)*(tmp199_)+tmp471_*(tmp216_)+(tmp493_)*(tmp145_)+tmp455_*(tmp219_)+(tmp496_)*(tmp158_)+tmp460_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp490_)*(tmp172_)+(tmp465_)*(tmp216_)+(tmp493_)*(tmp201_)+(tmp475_)*(tmp219_)+(tmp496_)*(tmp204_)+(tmp483_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][6] = ((((0.500000*(tmp508_+tmp508_+tmp518_+tmp518_+tmp526_+tmp526_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp527_+tmp527_+tmp528_+tmp528_+tmp529_+tmp529_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp532_)*(tmp199_)+tmp513_*(tmp216_)+(tmp535_)*(tmp145_)+tmp497_*(tmp219_)+(tmp538_)*(tmp158_)+tmp502_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp532_)*(tmp172_)+(tmp507_)*(tmp216_)+(tmp535_)*(tmp201_)+(tmp517_)*(tmp219_)+(tmp538_)*(tmp204_)+(tmp525_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][7] = ((((0.500000*(tmp552_+tmp552_+tmp562_+tmp562_+tmp570_+tmp570_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp571_+tmp571_+tmp572_+tmp572_+tmp573_+tmp573_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp576_)*(tmp199_)+tmp557_*(tmp216_)+(tmp579_)*(tmp145_)+tmp541_*(tmp219_)+(tmp582_)*(tmp158_)+tmp546_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp576_)*(tmp172_)+(tmp551_)*(tmp216_)+(tmp579_)*(tmp201_)+(tmp561_)*(tmp219_)+(tmp582_)*(tmp204_)+(tmp569_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][8] = ((((0.500000*(tmp596_+tmp596_+tmp606_+tmp606_+tmp614_+tmp614_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp615_+tmp615_+tmp616_+tmp616_+tmp617_+tmp617_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp620_)*(tmp199_)+tmp601_*(tmp216_)+(tmp623_)*(tmp145_)+tmp585_*(tmp219_)+(tmp626_)*(tmp158_)+tmp590_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp620_)*(tmp172_)+(tmp595_)*(tmp216_)+(tmp623_)*(tmp201_)+(tmp605_)*(tmp219_)+(tmp626_)*(tmp204_)+(tmp613_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][9] = ((((0.500000*(tmp638_+tmp638_+tmp648_+tmp648_+tmp656_+tmp656_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp657_+tmp657_+tmp658_+tmp658_+tmp659_+tmp659_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp662_)*(tmp199_)+tmp643_*(tmp216_)+(tmp665_)*(tmp145_)+tmp627_*(tmp219_)+(tmp668_)*(tmp158_)+tmp632_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp662_)*(tmp172_)+(tmp637_)*(tmp216_)+(tmp665_)*(tmp201_)+(tmp647_)*(tmp219_)+(tmp668_)*(tmp204_)+(tmp655_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][10] = ((((0.500000*(tmp676_+tmp676_+tmp684_+tmp684_+tmp692_+tmp692_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp693_+tmp693_+tmp694_+tmp694_+tmp695_+tmp695_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp698_)*(tmp199_)+(tmp193_)*(tmp216_)+(tmp701_)*(tmp145_)+(tmp138_)*(tmp219_)+(tmp704_)*(tmp158_)+tmp154_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp698_)*(tmp172_)+(tmp675_)*(tmp216_)+(tmp701_)*(tmp201_)+(tmp683_)*(tmp219_)+(tmp704_)*(tmp204_)+(tmp691_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][11] = ((((0.500000*(tmp716_+tmp716_+tmp726_+tmp726_+tmp734_+tmp734_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp735_+tmp735_+tmp736_+tmp736_+tmp737_+tmp737_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp740_)*(tmp199_)+tmp721_*(tmp216_)+(tmp743_)*(tmp145_)+tmp705_*(tmp219_)+(tmp746_)*(tmp158_)+tmp710_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp740_)*(tmp172_)+(tmp715_)*(tmp216_)+(tmp743_)*(tmp201_)+(tmp725_)*(tmp219_)+(tmp746_)*(tmp204_)+(tmp733_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][12] = ((((0.500000*(tmp758_+tmp758_+tmp768_+tmp768_+tmp776_+tmp776_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp777_+tmp777_+tmp778_+tmp778_+tmp779_+tmp779_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp782_)*(tmp199_)+tmp763_*(tmp216_)+(tmp785_)*(tmp145_)+tmp747_*(tmp219_)+(tmp788_)*(tmp158_)+tmp752_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp782_)*(tmp172_)+(tmp757_)*(tmp216_)+(tmp785_)*(tmp201_)+(tmp767_)*(tmp219_)+(tmp788_)*(tmp204_)+(tmp775_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][13] = ((((0.500000*(tmp800_+tmp800_+tmp810_+tmp810_+tmp818_+tmp818_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp819_+tmp819_+tmp820_+tmp820_+tmp821_+tmp821_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp824_)*(tmp199_)+tmp805_*(tmp216_)+(tmp827_)*(tmp145_)+tmp789_*(tmp219_)+(tmp830_)*(tmp158_)+tmp794_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp824_)*(tmp172_)+(tmp799_)*(tmp216_)+(tmp827_)*(tmp201_)+(tmp809_)*(tmp219_)+(tmp830_)*(tmp204_)+(tmp817_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][14] = ((((0.500000*(tmp842_+tmp842_+tmp852_+tmp852_+tmp860_+tmp860_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp861_+tmp861_+tmp862_+tmp862_+tmp863_+tmp863_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp866_)*(tmp199_)+tmp847_*(tmp216_)+(tmp869_)*(tmp145_)+tmp831_*(tmp219_)+(tmp872_)*(tmp158_)+tmp836_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp866_)*(tmp172_)+(tmp841_)*(tmp216_)+(tmp869_)*(tmp201_)+(tmp851_)*(tmp219_)+(tmp872_)*(tmp204_)+(tmp859_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][15] = ((((0.500000*(tmp884_+tmp884_+tmp894_+tmp894_+tmp902_+tmp902_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp903_+tmp903_+tmp904_+tmp904_+tmp905_+tmp905_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp908_)*(tmp199_)+tmp889_*(tmp216_)+(tmp911_)*(tmp145_)+tmp873_*(tmp219_)+(tmp914_)*(tmp158_)+tmp878_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp908_)*(tmp172_)+(tmp883_)*(tmp216_)+(tmp911_)*(tmp201_)+(tmp893_)*(tmp219_)+(tmp914_)*(tmp204_)+(tmp901_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][16] = ((((0.500000*(tmp926_+tmp926_+tmp936_+tmp936_+tmp944_+tmp944_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp945_+tmp945_+tmp946_+tmp946_+tmp947_+tmp947_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp950_)*(tmp199_)+tmp931_*(tmp216_)+(tmp953_)*(tmp145_)+tmp915_*(tmp219_)+(tmp956_)*(tmp158_)+tmp920_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp950_)*(tmp172_)+(tmp925_)*(tmp216_)+(tmp953_)*(tmp201_)+(tmp935_)*(tmp219_)+(tmp956_)*(tmp204_)+(tmp943_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][17] = ((((0.500000*(tmp968_+tmp968_+tmp978_+tmp978_+tmp986_+tmp986_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp987_+tmp987_+tmp988_+tmp988_+tmp989_+tmp989_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp992_)*(tmp199_)+tmp973_*(tmp216_)+(tmp995_)*(tmp145_)+tmp957_*(tmp219_)+(tmp998_)*(tmp158_)+tmp962_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp992_)*(tmp172_)+(tmp967_)*(tmp216_)+(tmp995_)*(tmp201_)+(tmp977_)*(tmp219_)+(tmp998_)*(tmp204_)+(tmp985_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][18] = ((((0.500000*(tmp1010_+tmp1010_+tmp1020_+tmp1020_+tmp1028_+tmp1028_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp1029_+tmp1029_+tmp1030_+tmp1030_+tmp1031_+tmp1031_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp1034_)*(tmp199_)+tmp1015_*(tmp216_)+(tmp1037_)*(tmp145_)+tmp999_*(tmp219_)+(tmp1040_)*(tmp158_)+tmp1004_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp1034_)*(tmp172_)+(tmp1009_)*(tmp216_)+(tmp1037_)*(tmp201_)+(tmp1019_)*(tmp219_)+(tmp1040_)*(tmp204_)+(tmp1027_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][19] = ((((0.500000*(tmp1052_+tmp1052_+tmp1062_+tmp1062_+tmp1070_+tmp1070_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp1071_+tmp1071_+tmp1072_+tmp1072_+tmp1073_+tmp1073_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp1076_)*(tmp199_)+tmp1057_*(tmp216_)+(tmp1079_)*(tmp145_)+tmp1041_*(tmp219_)+(tmp1082_)*(tmp158_)+tmp1046_*(tmp222_))*(tmp271_)-(tmp266_)*((tmp1076_)*(tmp172_)+(tmp1051_)*(tmp216_)+(tmp1079_)*(tmp201_)+(tmp1061_)*(tmp219_)+(tmp1082_)*(tmp204_)+(tmp1069_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][20] = ((((0.500000*(tmp1093_+tmp1093_+tmp1109_+tmp1109_+tmp1113_+tmp1113_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp1114_+tmp1114_+tmp1115_+tmp1115_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp1106_)*(tmp216_)+(tmp1091_)*(tmp219_))*(tmp271_)-(tmp266_)*(tmp1092_*(tmp216_)+tmp1108_*(tmp219_)+(tmp1112_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][21] = ((((0.500000*(tmp1135_+tmp1135_+tmp1147_+tmp1147_+tmp1151_+tmp1151_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp1152_+tmp1152_+tmp1153_+tmp1153_+tmp1154_+tmp1154_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp1144_)*(tmp216_)+(tmp1125_)*(tmp219_)+(tmp1132_)*(tmp222_))*(tmp271_)-(tmp266_)*((tmp1134_)*(tmp216_)+(tmp1146_)*(tmp219_)+(tmp1150_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][22] = ((((0.500000*(tmp1172_+tmp1172_+tmp1184_+tmp1184_+tmp1188_+tmp1188_))/tmp252_)*tmp258_-tmp252_*((0.500000*(tmp1189_+tmp1189_+tmp1190_+tmp1190_+tmp1191_+tmp1191_))/tmp258_))/tmp316_)*(tmp272_)+((((tmp1181_)*(tmp216_)+(tmp1164_)*(tmp219_)+(tmp1169_)*(tmp222_))*(tmp271_)-(tmp266_)*((tmp1171_)*(tmp216_)+(tmp1183_)*(tmp219_)+(tmp1187_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][23] = (((tmp1193_*(tmp145_)+tmp1194_*(tmp158_))*(tmp271_)-(tmp266_)*(tmp1193_*(tmp201_)+tmp1194_*(tmp204_)))/tmp326_)*(tmp282_);
  mCompDer[0][24] = (((tmp1192_*(tmp199_)+tmp1196_*(tmp158_))*(tmp271_)-(tmp266_)*(tmp1192_*(tmp172_)+tmp1196_*(tmp204_)))/tmp326_)*(tmp282_);
  mCompDer[0][25] = (((tmp1197_*(tmp199_)+tmp1195_*(tmp145_))*(tmp271_)-(tmp266_)*(tmp1197_*(tmp172_)+tmp1195_*(tmp201_)))/tmp326_)*(tmp282_);
  mCompDer[0][26] = ((((0.500000*(tmp1208_+tmp1208_+tmp1223_+tmp1223_+tmp1227_+tmp1227_))/tmp252_)*tmp258_)/tmp316_)*(tmp272_)+(((tmp1229_*(tmp199_)+tmp1230_*(tmp145_)+(tmp1233_)*(tmp158_))*(tmp271_)-(tmp266_)*(tmp1229_*(tmp172_)+tmp1207_*(tmp216_)+tmp1230_*(tmp201_)+tmp1222_*(tmp219_)+(tmp1233_)*(tmp204_)+(tmp1226_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][27] = ((((0.500000*(tmp1253_+tmp1253_+tmp1265_+tmp1265_+tmp1269_+tmp1269_))/tmp252_)*tmp258_)/tmp316_)*(tmp272_)+((((tmp1272_)*(tmp199_)+(tmp1275_)*(tmp145_)+(tmp1278_)*(tmp158_))*(tmp271_)-(tmp266_)*((tmp1272_)*(tmp172_)+(tmp1252_)*(tmp216_)+(tmp1275_)*(tmp201_)+(tmp1264_)*(tmp219_)+(tmp1278_)*(tmp204_)+(tmp1268_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][28] = ((((0.500000*(tmp1296_+tmp1296_+tmp1308_+tmp1308_+tmp1312_+tmp1312_))/tmp252_)*tmp258_)/tmp316_)*(tmp272_)+((((tmp1315_)*(tmp199_)+(tmp1318_)*(tmp145_)+(tmp1321_)*(tmp158_))*(tmp271_)-(tmp266_)*((tmp1315_)*(tmp172_)+(tmp1295_)*(tmp216_)+(tmp1318_)*(tmp201_)+(tmp1307_)*(tmp219_)+(tmp1321_)*(tmp204_)+(tmp1311_)*(tmp222_)))/tmp326_)*(tmp282_);
  mCompDer[0][29] = (((tmp1322_*(tmp145_)+(tmp170_)*(tmp158_))*(tmp271_)-(tmp266_)*(tmp1322_*(tmp201_)+(tmp170_)*(tmp204_)))/tmp326_)*(tmp282_);
  mCompDer[0][30] = ((((tmp151_)*(tmp199_)+tmp1323_*(tmp158_))*(tmp271_)-(tmp266_)*((tmp151_)*(tmp172_)+tmp1323_*(tmp204_)))/tmp326_)*(tmp282_);
  mCompDer[0][31] = (((tmp1324_*(tmp199_)+(tmp187_)*(tmp145_))*(tmp271_)-(tmp266_)*(tmp1324_*(tmp172_)+(tmp187_)*(tmp201_)))/tmp326_)*(tmp282_);
}


void cEqResiduIm1DPol3Id::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqResiduIm1DPol3Id Has no Der Sec");
}

void cEqResiduIm1DPol3Id::SetXL1(double aVal){ mLocXL1 = aVal;}
void cEqResiduIm1DPol3Id::SetXL2(double aVal){ mLocXL2 = aVal;}
void cEqResiduIm1DPol3Id::SetYL1(double aVal){ mLocYL1 = aVal;}
void cEqResiduIm1DPol3Id::SetYL2(double aVal){ mLocYL2 = aVal;}



double * cEqResiduIm1DPol3Id::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "XL1") return & mLocXL1;
   if (aName == "XL2") return & mLocXL2;
   if (aName == "YL1") return & mLocYL1;
   if (aName == "YL2") return & mLocYL2;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqResiduIm1DPol3Id::mTheAuto("cEqResiduIm1DPol3Id",cEqResiduIm1DPol3Id::Alloc);


cElCompiledFonc *  cEqResiduIm1DPol3Id::Alloc()
{  return new cEqResiduIm1DPol3Id();
}



/*Footer-MicMac-eLiSe-25/06/2007

Ce logiciel est un programme informatique servant à la mise en
correspondances d'images pour la reconstruction du relief.

Ce logiciel est régi par la licence CeCILL-B soumise au droit français et
respectant les principes de diffusion des logiciels libres. Vous pouvez
utiliser, modifier et/ou redistribuer ce programme sous les conditions
de la licence CeCILL-B telle que diffusée par le CEA, le CNRS et l'INRIA 
sur le site "http://www.cecill.info".

En contrepartie de l'accessibilité au code source et des droits de copie,
de modification et de redistribution accordés par cette licence, il n'est
offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
seule une responsabilité restreinte pèse sur l'auteur du programme,  le
titulaire des droits patrimoniaux et les concédants successifs.

A cet égard  l'attention de l'utilisateur est attirée sur les risques
associés au chargement,  à l'utilisation,  à la modification et/ou au
développement et à la reproduction du logiciel par l'utilisateur étant 
donné sa spécificité de logiciel libre, qui peut le rendre complexe à 
manipuler et qui le réserve donc à des développeurs et des professionnels
avertis possédant  des  connaissances  informatiques approfondies.  Les
utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
logiciel à leurs besoins dans des conditions permettant d'assurer la
sécurité de leurs systèmes et ou de leurs données et, plus généralement, 
à l'utiliser et l'exploiter dans les mêmes conditions de sécurité. 

Le fait que vous puissiez accéder à cet en-tête signifie que vous avez 
pris connaissance de la licence CeCILL-B, et que vous en avez accepté les
termes.
Footer-MicMac-eLiSe-25/06/2007*/
