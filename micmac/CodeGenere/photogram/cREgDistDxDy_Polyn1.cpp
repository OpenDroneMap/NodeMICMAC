// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistDxDy_Polyn1.h"


cREgDistDxDy_Polyn1::cREgDistDxDy_Polyn1():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,5));
   Close(false);
}



void cREgDistDxDy_Polyn1::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = 1 + tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = 1 - tmp0_;

  mVal[0] = ((tmp1_) * mLocRegDistxy1_x + tmp2_ * mLocRegDistxy1_y + (tmp1_) * mLocRegDistxy2_x + tmp2_ * mLocRegDistxy2_y) - ((tmp1_) * mLocRegDistxy3_x + tmp2_ * mLocRegDistxy3_y + (tmp1_) * mLocRegDistxy4_x + tmp2_ * mLocRegDistxy4_y);

  mVal[1] = ((tmp3_) * mLocRegDistxy1_y + tmp2_ * mLocRegDistxy1_x + (tmp3_) * mLocRegDistxy2_y + tmp2_ * mLocRegDistxy2_x) - ((tmp3_) * mLocRegDistxy3_y + tmp2_ * mLocRegDistxy3_x + (tmp3_) * mLocRegDistxy4_y + tmp2_ * mLocRegDistxy4_x);

}


void cREgDistDxDy_Polyn1::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = 1 + tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = 1 - tmp0_;
   double tmp4_ = -(1);
   double tmp5_ = mLocRegDistxy1_x + mLocRegDistxy2_x;
   double tmp6_ = mLocRegDistxy3_x + mLocRegDistxy4_x;
   double tmp7_ = (tmp5_) - (tmp6_);

  mVal[0] = ((tmp1_) * mLocRegDistxy1_x + tmp2_ * mLocRegDistxy1_y + (tmp1_) * mLocRegDistxy2_x + tmp2_ * mLocRegDistxy2_y) - ((tmp1_) * mLocRegDistxy3_x + tmp2_ * mLocRegDistxy3_y + (tmp1_) * mLocRegDistxy4_x + tmp2_ * mLocRegDistxy4_y);

  mCompDer[0][0] = 0;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = tmp7_;
  mCompDer[0][4] = (mLocRegDistxy1_y + mLocRegDistxy2_y) - (mLocRegDistxy3_y + mLocRegDistxy4_y);
  mVal[1] = ((tmp3_) * mLocRegDistxy1_y + tmp2_ * mLocRegDistxy1_x + (tmp3_) * mLocRegDistxy2_y + tmp2_ * mLocRegDistxy2_x) - ((tmp3_) * mLocRegDistxy3_y + tmp2_ * mLocRegDistxy3_x + (tmp3_) * mLocRegDistxy4_y + tmp2_ * mLocRegDistxy4_x);

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
  mCompDer[1][3] = (tmp4_ * mLocRegDistxy1_y + tmp4_ * mLocRegDistxy2_y) - (tmp4_ * mLocRegDistxy3_y + tmp4_ * mLocRegDistxy4_y);
  mCompDer[1][4] = tmp7_;
}


void cREgDistDxDy_Polyn1::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistDxDy_Polyn1 Has no Der Sec");
}

void cREgDistDxDy_Polyn1::SetRegDistxy1_x(double aVal){ mLocRegDistxy1_x = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy1_y(double aVal){ mLocRegDistxy1_y = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy2_x(double aVal){ mLocRegDistxy2_x = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy2_y(double aVal){ mLocRegDistxy2_y = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy3_x(double aVal){ mLocRegDistxy3_x = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy3_y(double aVal){ mLocRegDistxy3_y = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy4_x(double aVal){ mLocRegDistxy4_x = aVal;}
void cREgDistDxDy_Polyn1::SetRegDistxy4_y(double aVal){ mLocRegDistxy4_y = aVal;}



double * cREgDistDxDy_Polyn1::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "RegDistxy1_x") return & mLocRegDistxy1_x;
   if (aName == "RegDistxy1_y") return & mLocRegDistxy1_y;
   if (aName == "RegDistxy2_x") return & mLocRegDistxy2_x;
   if (aName == "RegDistxy2_y") return & mLocRegDistxy2_y;
   if (aName == "RegDistxy3_x") return & mLocRegDistxy3_x;
   if (aName == "RegDistxy3_y") return & mLocRegDistxy3_y;
   if (aName == "RegDistxy4_x") return & mLocRegDistxy4_x;
   if (aName == "RegDistxy4_y") return & mLocRegDistxy4_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistDxDy_Polyn1::mTheAuto("cREgDistDxDy_Polyn1",cREgDistDxDy_Polyn1::Alloc);


cElCompiledFonc *  cREgDistDxDy_Polyn1::Alloc()
{  return new cREgDistDxDy_Polyn1();
}


