// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqDirectDistDRad5Interp_CodGen.h"


cEqDirectDistDRad5Interp_CodGen::cEqDirectDistDRad5Interp_CodGen():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Calib",0,10));
   Close(false);
}



void cEqDirectDistDRad5Interp_CodGen::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocPIm1_y-tmp2_;
   double tmp4_ = (tmp1_)*(tmp1_);
   double tmp5_ = (tmp3_)*(tmp3_);
   double tmp6_ = tmp4_+tmp5_;
   double tmp7_ = (tmp6_)*(tmp6_);
   double tmp8_ = tmp7_*(tmp6_);
   double tmp9_ = tmp8_*(tmp6_);
   double tmp10_ = mCompCoord[5];
   double tmp11_ = (tmp6_)*tmp10_;
   double tmp12_ = 1+tmp11_;
   double tmp13_ = mCompCoord[6];
   double tmp14_ = tmp7_*tmp13_;
   double tmp15_ = tmp12_+tmp14_;
   double tmp16_ = mCompCoord[7];
   double tmp17_ = tmp8_*tmp16_;
   double tmp18_ = tmp15_+tmp17_;
   double tmp19_ = mCompCoord[8];
   double tmp20_ = tmp9_*tmp19_;
   double tmp21_ = tmp18_+tmp20_;
   double tmp22_ = tmp9_*(tmp6_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = tmp22_*tmp23_;
   double tmp25_ = tmp21_+tmp24_;
   double tmp26_ = mCompCoord[0];

  mVal[0] = ((tmp0_+(tmp1_)*(tmp25_))-mCompCoord[1])/tmp26_-mLocPIm2_x;

  mVal[1] = ((tmp2_+(tmp3_)*(tmp25_))-mCompCoord[2])/tmp26_-mLocPIm2_y;

}


void cEqDirectDistDRad5Interp_CodGen::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mLocPIm1_x-tmp0_;
   double tmp2_ = mCompCoord[4];
   double tmp3_ = mLocPIm1_y-tmp2_;
   double tmp4_ = (tmp1_)*(tmp1_);
   double tmp5_ = (tmp3_)*(tmp3_);
   double tmp6_ = tmp4_+tmp5_;
   double tmp7_ = (tmp6_)*(tmp6_);
   double tmp8_ = tmp7_*(tmp6_);
   double tmp9_ = tmp8_*(tmp6_);
   double tmp10_ = mCompCoord[5];
   double tmp11_ = (tmp6_)*tmp10_;
   double tmp12_ = 1+tmp11_;
   double tmp13_ = mCompCoord[6];
   double tmp14_ = tmp7_*tmp13_;
   double tmp15_ = tmp12_+tmp14_;
   double tmp16_ = mCompCoord[7];
   double tmp17_ = tmp8_*tmp16_;
   double tmp18_ = tmp15_+tmp17_;
   double tmp19_ = mCompCoord[8];
   double tmp20_ = tmp9_*tmp19_;
   double tmp21_ = tmp18_+tmp20_;
   double tmp22_ = tmp9_*(tmp6_);
   double tmp23_ = mCompCoord[9];
   double tmp24_ = tmp22_*tmp23_;
   double tmp25_ = tmp21_+tmp24_;
   double tmp26_ = (tmp1_)*(tmp25_);
   double tmp27_ = tmp0_+tmp26_;
   double tmp28_ = mCompCoord[1];
   double tmp29_ = (tmp27_)-tmp28_;
   double tmp30_ = mCompCoord[0];
   double tmp31_ = ElSquare(tmp30_);
   double tmp32_ = -(1);
   double tmp33_ = tmp32_*(tmp1_);
   double tmp34_ = tmp33_+tmp33_;
   double tmp35_ = (tmp34_)*(tmp6_);
   double tmp36_ = tmp35_+tmp35_;
   double tmp37_ = (tmp36_)*(tmp6_);
   double tmp38_ = (tmp34_)*tmp7_;
   double tmp39_ = tmp37_+tmp38_;
   double tmp40_ = (tmp39_)*(tmp6_);
   double tmp41_ = (tmp34_)*tmp8_;
   double tmp42_ = tmp40_+tmp41_;
   double tmp43_ = tmp32_*(tmp3_);
   double tmp44_ = tmp43_+tmp43_;
   double tmp45_ = (tmp44_)*(tmp6_);
   double tmp46_ = tmp45_+tmp45_;
   double tmp47_ = (tmp46_)*(tmp6_);
   double tmp48_ = (tmp44_)*tmp7_;
   double tmp49_ = tmp47_+tmp48_;
   double tmp50_ = (tmp49_)*(tmp6_);
   double tmp51_ = (tmp44_)*tmp8_;
   double tmp52_ = tmp50_+tmp51_;
   double tmp53_ = (tmp3_)*(tmp25_);
   double tmp54_ = tmp2_+tmp53_;
   double tmp55_ = mCompCoord[2];
   double tmp56_ = (tmp54_)-tmp55_;
   double tmp57_ = tmp32_*tmp30_;
   double tmp58_ = (tmp57_)/tmp31_;
   double tmp59_ = (tmp34_)*tmp10_;
   double tmp60_ = (tmp36_)*tmp13_;
   double tmp61_ = tmp59_+tmp60_;
   double tmp62_ = (tmp39_)*tmp16_;
   double tmp63_ = tmp61_+tmp62_;
   double tmp64_ = (tmp42_)*tmp19_;
   double tmp65_ = tmp63_+tmp64_;
   double tmp66_ = (tmp42_)*(tmp6_);
   double tmp67_ = (tmp34_)*tmp9_;
   double tmp68_ = tmp66_+tmp67_;
   double tmp69_ = (tmp68_)*tmp23_;
   double tmp70_ = tmp65_+tmp69_;
   double tmp71_ = tmp32_*(tmp25_);
   double tmp72_ = (tmp44_)*tmp10_;
   double tmp73_ = (tmp46_)*tmp13_;
   double tmp74_ = tmp72_+tmp73_;
   double tmp75_ = (tmp49_)*tmp16_;
   double tmp76_ = tmp74_+tmp75_;
   double tmp77_ = (tmp52_)*tmp19_;
   double tmp78_ = tmp76_+tmp77_;
   double tmp79_ = (tmp52_)*(tmp6_);
   double tmp80_ = (tmp44_)*tmp9_;
   double tmp81_ = tmp79_+tmp80_;
   double tmp82_ = (tmp81_)*tmp23_;
   double tmp83_ = tmp78_+tmp82_;

  mVal[0] = (tmp29_)/tmp30_-mLocPIm2_x;

  mCompDer[0][0] = -(tmp29_)/tmp31_;
  mCompDer[0][1] = tmp58_;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = ((1+tmp71_+(tmp70_)*(tmp1_))*tmp30_)/tmp31_;
  mCompDer[0][4] = ((tmp83_)*(tmp1_)*tmp30_)/tmp31_;
  mCompDer[0][5] = ((tmp6_)*(tmp1_)*tmp30_)/tmp31_;
  mCompDer[0][6] = (tmp7_*(tmp1_)*tmp30_)/tmp31_;
  mCompDer[0][7] = (tmp8_*(tmp1_)*tmp30_)/tmp31_;
  mCompDer[0][8] = (tmp9_*(tmp1_)*tmp30_)/tmp31_;
  mCompDer[0][9] = (tmp22_*(tmp1_)*tmp30_)/tmp31_;
  mVal[1] = (tmp56_)/tmp30_-mLocPIm2_y;

  mCompDer[1][0] = -(tmp56_)/tmp31_;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = tmp58_;
  mCompDer[1][3] = ((tmp70_)*(tmp3_)*tmp30_)/tmp31_;
  mCompDer[1][4] = ((1+tmp71_+(tmp83_)*(tmp3_))*tmp30_)/tmp31_;
  mCompDer[1][5] = ((tmp6_)*(tmp3_)*tmp30_)/tmp31_;
  mCompDer[1][6] = (tmp7_*(tmp3_)*tmp30_)/tmp31_;
  mCompDer[1][7] = (tmp8_*(tmp3_)*tmp30_)/tmp31_;
  mCompDer[1][8] = (tmp9_*(tmp3_)*tmp30_)/tmp31_;
  mCompDer[1][9] = (tmp22_*(tmp3_)*tmp30_)/tmp31_;
}


void cEqDirectDistDRad5Interp_CodGen::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqDirectDistDRad5Interp_CodGen Has no Der Sec");
}

void cEqDirectDistDRad5Interp_CodGen::SetPIm1_x(double aVal){ mLocPIm1_x = aVal;}
void cEqDirectDistDRad5Interp_CodGen::SetPIm1_y(double aVal){ mLocPIm1_y = aVal;}
void cEqDirectDistDRad5Interp_CodGen::SetPIm2_x(double aVal){ mLocPIm2_x = aVal;}
void cEqDirectDistDRad5Interp_CodGen::SetPIm2_y(double aVal){ mLocPIm2_y = aVal;}



double * cEqDirectDistDRad5Interp_CodGen::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "PIm1_x") return & mLocPIm1_x;
   if (aName == "PIm1_y") return & mLocPIm1_y;
   if (aName == "PIm2_x") return & mLocPIm2_x;
   if (aName == "PIm2_y") return & mLocPIm2_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqDirectDistDRad5Interp_CodGen::mTheAuto("cEqDirectDistDRad5Interp_CodGen",cEqDirectDistDRad5Interp_CodGen::Alloc);


cElCompiledFonc *  cEqDirectDistDRad5Interp_CodGen::Alloc()
{  return new cEqDirectDistDRad5Interp_CodGen();
}


