// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistVal_Fraser_PPaEqPPs.h"


cREgDistVal_Fraser_PPaEqPPs::cREgDistVal_Fraser_PPaEqPPs():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,12));
   Close(false);
}



void cREgDistVal_Fraser_PPaEqPPs::ComputeVal()
{
   double tmp0_ = mCompCoord[1];
   double tmp1_ = mLocRegDistValP1_x - tmp0_;
   double tmp2_ = mCompCoord[2];
   double tmp3_ = mLocRegDistValP1_y - tmp2_;
   double tmp4_ = (tmp1_) * (tmp1_);
   double tmp5_ = (tmp3_) * (tmp3_);
   double tmp6_ = tmp4_ + tmp5_;
   double tmp7_ = (tmp6_) * (tmp6_);
   double tmp8_ = tmp7_ * (tmp6_);
   double tmp9_ = tmp8_ * (tmp6_);
   double tmp10_ = mCompCoord[3];
   double tmp11_ = tmp10_ * (tmp6_);
   double tmp12_ = mCompCoord[4];
   double tmp13_ = tmp12_ * tmp7_;
   double tmp14_ = tmp11_ + tmp13_;
   double tmp15_ = mCompCoord[5];
   double tmp16_ = tmp15_ * tmp8_;
   double tmp17_ = tmp14_ + tmp16_;
   double tmp18_ = mCompCoord[6];
   double tmp19_ = tmp18_ * tmp9_;
   double tmp20_ = tmp17_ + tmp19_;
   double tmp21_ = mCompCoord[7];
   double tmp22_ = tmp9_ * (tmp6_);
   double tmp23_ = tmp21_ * tmp22_;
   double tmp24_ = tmp20_ + tmp23_;
   double tmp25_ = mCompCoord[9];
   double tmp26_ = (tmp1_) * (tmp3_);
   double tmp27_ = 2 * tmp26_;
   double tmp28_ = mCompCoord[8];

  mVal[0] = (mLocRegDistValP1_x + (tmp1_) * (tmp24_) + (2 * tmp4_ + tmp6_) * tmp28_ + tmp27_ * tmp25_ + mCompCoord[10] * (tmp1_) + mCompCoord[11] * (tmp3_)) - mLocRegDistKnownVal_x;

  mVal[1] = (mLocRegDistValP1_y + (tmp3_) * (tmp24_) + (2 * tmp5_ + tmp6_) * tmp25_ + tmp27_ * tmp28_) - mLocRegDistKnownVal_y;

}


void cREgDistVal_Fraser_PPaEqPPs::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[1];
   double tmp1_ = mLocRegDistValP1_x - tmp0_;
   double tmp2_ = mCompCoord[2];
   double tmp3_ = mLocRegDistValP1_y - tmp2_;
   double tmp4_ = (tmp1_) * (tmp1_);
   double tmp5_ = (tmp3_) * (tmp3_);
   double tmp6_ = tmp4_ + tmp5_;
   double tmp7_ = (tmp6_) * (tmp6_);
   double tmp8_ = tmp7_ * (tmp6_);
   double tmp9_ = tmp8_ * (tmp6_);
   double tmp10_ = mCompCoord[3];
   double tmp11_ = tmp10_ * (tmp6_);
   double tmp12_ = mCompCoord[4];
   double tmp13_ = tmp12_ * tmp7_;
   double tmp14_ = tmp11_ + tmp13_;
   double tmp15_ = mCompCoord[5];
   double tmp16_ = tmp15_ * tmp8_;
   double tmp17_ = tmp14_ + tmp16_;
   double tmp18_ = mCompCoord[6];
   double tmp19_ = tmp18_ * tmp9_;
   double tmp20_ = tmp17_ + tmp19_;
   double tmp21_ = mCompCoord[7];
   double tmp22_ = tmp9_ * (tmp6_);
   double tmp23_ = tmp21_ * tmp22_;
   double tmp24_ = tmp20_ + tmp23_;
   double tmp25_ = -(1);
   double tmp26_ = tmp25_ * (tmp1_);
   double tmp27_ = tmp26_ + tmp26_;
   double tmp28_ = (tmp27_) * (tmp6_);
   double tmp29_ = tmp28_ + tmp28_;
   double tmp30_ = (tmp29_) * (tmp6_);
   double tmp31_ = (tmp27_) * tmp7_;
   double tmp32_ = tmp30_ + tmp31_;
   double tmp33_ = (tmp32_) * (tmp6_);
   double tmp34_ = (tmp27_) * tmp8_;
   double tmp35_ = tmp33_ + tmp34_;
   double tmp36_ = mCompCoord[8];
   double tmp37_ = mCompCoord[9];
   double tmp38_ = mCompCoord[10];
   double tmp39_ = tmp25_ * (tmp3_);
   double tmp40_ = tmp39_ + tmp39_;
   double tmp41_ = (tmp40_) * (tmp6_);
   double tmp42_ = tmp41_ + tmp41_;
   double tmp43_ = (tmp42_) * (tmp6_);
   double tmp44_ = (tmp40_) * tmp7_;
   double tmp45_ = tmp43_ + tmp44_;
   double tmp46_ = (tmp45_) * (tmp6_);
   double tmp47_ = (tmp40_) * tmp8_;
   double tmp48_ = tmp46_ + tmp47_;
   double tmp49_ = mCompCoord[11];
   double tmp50_ = 2 * tmp4_;
   double tmp51_ = tmp50_ + tmp6_;
   double tmp52_ = (tmp1_) * (tmp3_);
   double tmp53_ = 2 * tmp52_;
   double tmp54_ = (tmp27_) * tmp10_;
   double tmp55_ = (tmp29_) * tmp12_;
   double tmp56_ = tmp54_ + tmp55_;
   double tmp57_ = (tmp32_) * tmp15_;
   double tmp58_ = tmp56_ + tmp57_;
   double tmp59_ = (tmp35_) * tmp18_;
   double tmp60_ = tmp58_ + tmp59_;
   double tmp61_ = (tmp35_) * (tmp6_);
   double tmp62_ = (tmp27_) * tmp9_;
   double tmp63_ = tmp61_ + tmp62_;
   double tmp64_ = (tmp63_) * tmp21_;
   double tmp65_ = tmp60_ + tmp64_;
   double tmp66_ = tmp39_ * 2;
   double tmp67_ = tmp25_ * (tmp24_);
   double tmp68_ = (tmp40_) * tmp10_;
   double tmp69_ = (tmp42_) * tmp12_;
   double tmp70_ = tmp68_ + tmp69_;
   double tmp71_ = (tmp45_) * tmp15_;
   double tmp72_ = tmp70_ + tmp71_;
   double tmp73_ = (tmp48_) * tmp18_;
   double tmp74_ = tmp72_ + tmp73_;
   double tmp75_ = (tmp48_) * (tmp6_);
   double tmp76_ = (tmp40_) * tmp9_;
   double tmp77_ = tmp75_ + tmp76_;
   double tmp78_ = (tmp77_) * tmp21_;
   double tmp79_ = tmp74_ + tmp78_;
   double tmp80_ = tmp26_ * 2;
   double tmp81_ = 2 * tmp5_;
   double tmp82_ = tmp81_ + tmp6_;

  mVal[0] = (mLocRegDistValP1_x + (tmp1_) * (tmp24_) + (tmp51_) * tmp36_ + tmp53_ * tmp37_ + tmp38_ * (tmp1_) + tmp49_ * (tmp3_)) - mLocRegDistKnownVal_x;

  mCompDer[0][0] = 0;
  mCompDer[0][1] = tmp67_ + (tmp65_) * (tmp1_) + ((tmp27_) * 2 + tmp27_) * tmp36_ + tmp66_ * tmp37_ + tmp25_ * tmp38_;
  mCompDer[0][2] = (tmp79_) * (tmp1_) + (tmp40_) * tmp36_ + tmp80_ * tmp37_ + tmp25_ * tmp49_;
  mCompDer[0][3] = (tmp6_) * (tmp1_);
  mCompDer[0][4] = tmp7_ * (tmp1_);
  mCompDer[0][5] = tmp8_ * (tmp1_);
  mCompDer[0][6] = tmp9_ * (tmp1_);
  mCompDer[0][7] = tmp22_ * (tmp1_);
  mCompDer[0][8] = tmp51_;
  mCompDer[0][9] = tmp53_;
  mCompDer[0][10] = tmp1_;
  mCompDer[0][11] = tmp3_;
  mVal[1] = (mLocRegDistValP1_y + (tmp3_) * (tmp24_) + (tmp82_) * tmp37_ + tmp53_ * tmp36_) - mLocRegDistKnownVal_y;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = (tmp65_) * (tmp3_) + (tmp27_) * tmp37_ + tmp66_ * tmp36_;
  mCompDer[1][2] = tmp67_ + (tmp79_) * (tmp3_) + ((tmp40_) * 2 + tmp40_) * tmp37_ + tmp80_ * tmp36_;
  mCompDer[1][3] = (tmp6_) * (tmp3_);
  mCompDer[1][4] = tmp7_ * (tmp3_);
  mCompDer[1][5] = tmp8_ * (tmp3_);
  mCompDer[1][6] = tmp9_ * (tmp3_);
  mCompDer[1][7] = tmp22_ * (tmp3_);
  mCompDer[1][8] = tmp53_;
  mCompDer[1][9] = tmp82_;
  mCompDer[1][10] = 0;
  mCompDer[1][11] = 0;
}


void cREgDistVal_Fraser_PPaEqPPs::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistVal_Fraser_PPaEqPPs Has no Der Sec");
}

void cREgDistVal_Fraser_PPaEqPPs::SetRegDistKnownVal_x(double aVal){ mLocRegDistKnownVal_x = aVal;}
void cREgDistVal_Fraser_PPaEqPPs::SetRegDistKnownVal_y(double aVal){ mLocRegDistKnownVal_y = aVal;}
void cREgDistVal_Fraser_PPaEqPPs::SetRegDistValP1_x(double aVal){ mLocRegDistValP1_x = aVal;}
void cREgDistVal_Fraser_PPaEqPPs::SetRegDistValP1_y(double aVal){ mLocRegDistValP1_y = aVal;}



double * cREgDistVal_Fraser_PPaEqPPs::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "RegDistKnownVal_x") return & mLocRegDistKnownVal_x;
   if (aName == "RegDistKnownVal_y") return & mLocRegDistKnownVal_y;
   if (aName == "RegDistValP1_x") return & mLocRegDistValP1_x;
   if (aName == "RegDistValP1_y") return & mLocRegDistValP1_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistVal_Fraser_PPaEqPPs::mTheAuto("cREgDistVal_Fraser_PPaEqPPs",cREgDistVal_Fraser_PPaEqPPs::Alloc);


cElCompiledFonc *  cREgDistVal_Fraser_PPaEqPPs::Alloc()
{  return new cREgDistVal_Fraser_PPaEqPPs();
}


