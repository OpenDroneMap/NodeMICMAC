// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cEqObsBaseGPS_GL.h"


cEqObsBaseGPS_GL::cEqObsBaseGPS_GL():
    cElCompiledFonc(3)
{
   AddIntRef (cIncIntervale("Base",6,9));
   AddIntRef (cIncIntervale("Orient",0,6));
   Close(false);
}



void cEqObsBaseGPS_GL::ComputeVal()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = cos(tmp6_);
   double tmp8_ = -(tmp5_);
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp3_);
   double tmp11_ = tmp4_*tmp8_;
   double tmp12_ = -(tmp9_);
   double tmp13_ = tmp3_*tmp8_;
   double tmp14_ = tmp4_*tmp2_;
   double tmp15_ = tmp3_*tmp2_;
   double tmp16_ = mCompCoord[6];
   double tmp17_ = tmp10_*tmp7_;
   double tmp18_ = tmp11_*tmp9_;
   double tmp19_ = tmp17_+tmp18_;
   double tmp20_ = tmp4_*tmp7_;
   double tmp21_ = tmp13_*tmp9_;
   double tmp22_ = tmp20_+tmp21_;
   double tmp23_ = tmp2_*tmp9_;
   double tmp24_ = mCompCoord[7];
   double tmp25_ = tmp10_*tmp12_;
   double tmp26_ = tmp11_*tmp7_;
   double tmp27_ = tmp25_+tmp26_;
   double tmp28_ = tmp4_*tmp12_;
   double tmp29_ = tmp13_*tmp7_;
   double tmp30_ = tmp28_+tmp29_;
   double tmp31_ = tmp2_*tmp7_;
   double tmp32_ = mCompCoord[8];

  mVal[0] = ((mLocGL_0_0*tmp14_+mLocGL_1_0*tmp15_+mLocGL_2_0*tmp5_)*tmp16_+(mLocGL_0_0*(tmp19_)+mLocGL_1_0*(tmp22_)+mLocGL_2_0*tmp23_)*tmp24_+(mLocGL_0_0*(tmp27_)+mLocGL_1_0*(tmp30_)+mLocGL_2_0*tmp31_)*tmp32_+mCompCoord[3])-mLocGPS_x;

  mVal[1] = ((mLocGL_0_1*tmp14_+mLocGL_1_1*tmp15_+mLocGL_2_1*tmp5_)*tmp16_+(mLocGL_0_1*(tmp19_)+mLocGL_1_1*(tmp22_)+mLocGL_2_1*tmp23_)*tmp24_+(mLocGL_0_1*(tmp27_)+mLocGL_1_1*(tmp30_)+mLocGL_2_1*tmp31_)*tmp32_+mCompCoord[4])-mLocGPS_y;

  mVal[2] = ((mLocGL_0_2*tmp14_+mLocGL_1_2*tmp15_+mLocGL_2_2*tmp5_)*tmp16_+(mLocGL_0_2*(tmp19_)+mLocGL_1_2*(tmp22_)+mLocGL_2_2*tmp23_)*tmp24_+(mLocGL_0_2*(tmp27_)+mLocGL_1_2*(tmp30_)+mLocGL_2_2*tmp31_)*tmp32_+mCompCoord[5])-mLocGPS_z;

}


void cEqObsBaseGPS_GL::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = mCompCoord[1];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[2];
   double tmp7_ = cos(tmp6_);
   double tmp8_ = -(tmp5_);
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp3_);
   double tmp11_ = tmp4_*tmp8_;
   double tmp12_ = -(tmp9_);
   double tmp13_ = tmp3_*tmp8_;
   double tmp14_ = tmp4_*tmp2_;
   double tmp15_ = mCompCoord[6];
   double tmp16_ = -(1);
   double tmp17_ = tmp16_*tmp3_;
   double tmp18_ = tmp11_*tmp9_;
   double tmp19_ = mCompCoord[7];
   double tmp20_ = -(tmp4_);
   double tmp21_ = tmp17_*tmp8_;
   double tmp22_ = tmp11_*tmp7_;
   double tmp23_ = mCompCoord[8];
   double tmp24_ = tmp16_*tmp5_;
   double tmp25_ = -(tmp2_);
   double tmp26_ = tmp25_*tmp4_;
   double tmp27_ = tmp25_*tmp3_;
   double tmp28_ = tmp16_*tmp9_;
   double tmp29_ = -(tmp7_);
   double tmp30_ = mLocGL_0_0*tmp14_;
   double tmp31_ = tmp3_*tmp2_;
   double tmp32_ = mLocGL_1_0*tmp31_;
   double tmp33_ = tmp30_+tmp32_;
   double tmp34_ = mLocGL_2_0*tmp5_;
   double tmp35_ = tmp33_+tmp34_;
   double tmp36_ = tmp10_*tmp7_;
   double tmp37_ = tmp36_+tmp18_;
   double tmp38_ = mLocGL_0_0*(tmp37_);
   double tmp39_ = tmp4_*tmp7_;
   double tmp40_ = tmp13_*tmp9_;
   double tmp41_ = tmp39_+tmp40_;
   double tmp42_ = mLocGL_1_0*(tmp41_);
   double tmp43_ = tmp38_+tmp42_;
   double tmp44_ = tmp2_*tmp9_;
   double tmp45_ = mLocGL_2_0*tmp44_;
   double tmp46_ = tmp43_+tmp45_;
   double tmp47_ = tmp10_*tmp12_;
   double tmp48_ = tmp47_+tmp22_;
   double tmp49_ = mLocGL_0_0*(tmp48_);
   double tmp50_ = tmp4_*tmp12_;
   double tmp51_ = tmp13_*tmp7_;
   double tmp52_ = tmp50_+tmp51_;
   double tmp53_ = mLocGL_1_0*(tmp52_);
   double tmp54_ = tmp49_+tmp53_;
   double tmp55_ = tmp2_*tmp7_;
   double tmp56_ = mLocGL_2_0*tmp55_;
   double tmp57_ = tmp54_+tmp56_;
   double tmp58_ = tmp17_*tmp2_;
   double tmp59_ = tmp20_*tmp7_;
   double tmp60_ = tmp21_*tmp9_;
   double tmp61_ = tmp59_+tmp60_;
   double tmp62_ = tmp17_*tmp7_;
   double tmp63_ = tmp62_+tmp18_;
   double tmp64_ = tmp20_*tmp12_;
   double tmp65_ = tmp21_*tmp7_;
   double tmp66_ = tmp64_+tmp65_;
   double tmp67_ = tmp17_*tmp12_;
   double tmp68_ = tmp67_+tmp22_;
   double tmp69_ = tmp24_*tmp4_;
   double tmp70_ = tmp24_*tmp3_;
   double tmp71_ = tmp26_*tmp9_;
   double tmp72_ = tmp27_*tmp9_;
   double tmp73_ = tmp24_*tmp9_;
   double tmp74_ = tmp26_*tmp7_;
   double tmp75_ = tmp27_*tmp7_;
   double tmp76_ = tmp24_*tmp7_;
   double tmp77_ = tmp28_*tmp10_;
   double tmp78_ = tmp7_*tmp11_;
   double tmp79_ = tmp77_+tmp78_;
   double tmp80_ = tmp28_*tmp4_;
   double tmp81_ = tmp7_*tmp13_;
   double tmp82_ = tmp80_+tmp81_;
   double tmp83_ = tmp7_*tmp2_;
   double tmp84_ = tmp29_*tmp10_;
   double tmp85_ = tmp28_*tmp11_;
   double tmp86_ = tmp84_+tmp85_;
   double tmp87_ = tmp29_*tmp4_;
   double tmp88_ = tmp28_*tmp13_;
   double tmp89_ = tmp87_+tmp88_;
   double tmp90_ = tmp28_*tmp2_;
   double tmp91_ = mLocGL_0_1*tmp14_;
   double tmp92_ = mLocGL_1_1*tmp31_;
   double tmp93_ = tmp91_+tmp92_;
   double tmp94_ = mLocGL_2_1*tmp5_;
   double tmp95_ = tmp93_+tmp94_;
   double tmp96_ = mLocGL_0_1*(tmp37_);
   double tmp97_ = mLocGL_1_1*(tmp41_);
   double tmp98_ = tmp96_+tmp97_;
   double tmp99_ = mLocGL_2_1*tmp44_;
   double tmp100_ = tmp98_+tmp99_;
   double tmp101_ = mLocGL_0_1*(tmp48_);
   double tmp102_ = mLocGL_1_1*(tmp52_);
   double tmp103_ = tmp101_+tmp102_;
   double tmp104_ = mLocGL_2_1*tmp55_;
   double tmp105_ = tmp103_+tmp104_;
   double tmp106_ = mLocGL_0_2*tmp14_;
   double tmp107_ = mLocGL_1_2*tmp31_;
   double tmp108_ = tmp106_+tmp107_;
   double tmp109_ = mLocGL_2_2*tmp5_;
   double tmp110_ = tmp108_+tmp109_;
   double tmp111_ = mLocGL_0_2*(tmp37_);
   double tmp112_ = mLocGL_1_2*(tmp41_);
   double tmp113_ = tmp111_+tmp112_;
   double tmp114_ = mLocGL_2_2*tmp44_;
   double tmp115_ = tmp113_+tmp114_;
   double tmp116_ = mLocGL_0_2*(tmp48_);
   double tmp117_ = mLocGL_1_2*(tmp52_);
   double tmp118_ = tmp116_+tmp117_;
   double tmp119_ = mLocGL_2_2*tmp55_;
   double tmp120_ = tmp118_+tmp119_;

  mVal[0] = ((tmp35_)*tmp15_+(tmp46_)*tmp19_+(tmp57_)*tmp23_+mCompCoord[3])-mLocGPS_x;

  mCompDer[0][0] = (tmp58_*mLocGL_0_0+tmp14_*mLocGL_1_0)*tmp15_+((tmp61_)*mLocGL_0_0+(tmp63_)*mLocGL_1_0)*tmp19_+((tmp66_)*mLocGL_0_0+(tmp68_)*mLocGL_1_0)*tmp23_;
  mCompDer[0][1] = (tmp69_*mLocGL_0_0+tmp70_*mLocGL_1_0+tmp2_*mLocGL_2_0)*tmp15_+(tmp71_*mLocGL_0_0+tmp72_*mLocGL_1_0+tmp73_*mLocGL_2_0)*tmp19_+(tmp74_*mLocGL_0_0+tmp75_*mLocGL_1_0+tmp76_*mLocGL_2_0)*tmp23_;
  mCompDer[0][2] = ((tmp79_)*mLocGL_0_0+(tmp82_)*mLocGL_1_0+tmp83_*mLocGL_2_0)*tmp19_+((tmp86_)*mLocGL_0_0+(tmp89_)*mLocGL_1_0+tmp90_*mLocGL_2_0)*tmp23_;
  mCompDer[0][3] = 1;
  mCompDer[0][4] = 0;
  mCompDer[0][5] = 0;
  mCompDer[0][6] = tmp35_;
  mCompDer[0][7] = tmp46_;
  mCompDer[0][8] = tmp57_;
  mVal[1] = ((tmp95_)*tmp15_+(tmp100_)*tmp19_+(tmp105_)*tmp23_+mCompCoord[4])-mLocGPS_y;

  mCompDer[1][0] = (tmp58_*mLocGL_0_1+tmp14_*mLocGL_1_1)*tmp15_+((tmp61_)*mLocGL_0_1+(tmp63_)*mLocGL_1_1)*tmp19_+((tmp66_)*mLocGL_0_1+(tmp68_)*mLocGL_1_1)*tmp23_;
  mCompDer[1][1] = (tmp69_*mLocGL_0_1+tmp70_*mLocGL_1_1+tmp2_*mLocGL_2_1)*tmp15_+(tmp71_*mLocGL_0_1+tmp72_*mLocGL_1_1+tmp73_*mLocGL_2_1)*tmp19_+(tmp74_*mLocGL_0_1+tmp75_*mLocGL_1_1+tmp76_*mLocGL_2_1)*tmp23_;
  mCompDer[1][2] = ((tmp79_)*mLocGL_0_1+(tmp82_)*mLocGL_1_1+tmp83_*mLocGL_2_1)*tmp19_+((tmp86_)*mLocGL_0_1+(tmp89_)*mLocGL_1_1+tmp90_*mLocGL_2_1)*tmp23_;
  mCompDer[1][3] = 0;
  mCompDer[1][4] = 1;
  mCompDer[1][5] = 0;
  mCompDer[1][6] = tmp95_;
  mCompDer[1][7] = tmp100_;
  mCompDer[1][8] = tmp105_;
  mVal[2] = ((tmp110_)*tmp15_+(tmp115_)*tmp19_+(tmp120_)*tmp23_+mCompCoord[5])-mLocGPS_z;

  mCompDer[2][0] = (tmp58_*mLocGL_0_2+tmp14_*mLocGL_1_2)*tmp15_+((tmp61_)*mLocGL_0_2+(tmp63_)*mLocGL_1_2)*tmp19_+((tmp66_)*mLocGL_0_2+(tmp68_)*mLocGL_1_2)*tmp23_;
  mCompDer[2][1] = (tmp69_*mLocGL_0_2+tmp70_*mLocGL_1_2+tmp2_*mLocGL_2_2)*tmp15_+(tmp71_*mLocGL_0_2+tmp72_*mLocGL_1_2+tmp73_*mLocGL_2_2)*tmp19_+(tmp74_*mLocGL_0_2+tmp75_*mLocGL_1_2+tmp76_*mLocGL_2_2)*tmp23_;
  mCompDer[2][2] = ((tmp79_)*mLocGL_0_2+(tmp82_)*mLocGL_1_2+tmp83_*mLocGL_2_2)*tmp19_+((tmp86_)*mLocGL_0_2+(tmp89_)*mLocGL_1_2+tmp90_*mLocGL_2_2)*tmp23_;
  mCompDer[2][3] = 0;
  mCompDer[2][4] = 0;
  mCompDer[2][5] = 1;
  mCompDer[2][6] = tmp110_;
  mCompDer[2][7] = tmp115_;
  mCompDer[2][8] = tmp120_;
}


void cEqObsBaseGPS_GL::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqObsBaseGPS_GL Has no Der Sec");
}

void cEqObsBaseGPS_GL::SetGL_0_0(double aVal){ mLocGL_0_0 = aVal;}
void cEqObsBaseGPS_GL::SetGL_0_1(double aVal){ mLocGL_0_1 = aVal;}
void cEqObsBaseGPS_GL::SetGL_0_2(double aVal){ mLocGL_0_2 = aVal;}
void cEqObsBaseGPS_GL::SetGL_1_0(double aVal){ mLocGL_1_0 = aVal;}
void cEqObsBaseGPS_GL::SetGL_1_1(double aVal){ mLocGL_1_1 = aVal;}
void cEqObsBaseGPS_GL::SetGL_1_2(double aVal){ mLocGL_1_2 = aVal;}
void cEqObsBaseGPS_GL::SetGL_2_0(double aVal){ mLocGL_2_0 = aVal;}
void cEqObsBaseGPS_GL::SetGL_2_1(double aVal){ mLocGL_2_1 = aVal;}
void cEqObsBaseGPS_GL::SetGL_2_2(double aVal){ mLocGL_2_2 = aVal;}
void cEqObsBaseGPS_GL::SetGPS_x(double aVal){ mLocGPS_x = aVal;}
void cEqObsBaseGPS_GL::SetGPS_y(double aVal){ mLocGPS_y = aVal;}
void cEqObsBaseGPS_GL::SetGPS_z(double aVal){ mLocGPS_z = aVal;}



double * cEqObsBaseGPS_GL::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "GL_0_0") return & mLocGL_0_0;
   if (aName == "GL_0_1") return & mLocGL_0_1;
   if (aName == "GL_0_2") return & mLocGL_0_2;
   if (aName == "GL_1_0") return & mLocGL_1_0;
   if (aName == "GL_1_1") return & mLocGL_1_1;
   if (aName == "GL_1_2") return & mLocGL_1_2;
   if (aName == "GL_2_0") return & mLocGL_2_0;
   if (aName == "GL_2_1") return & mLocGL_2_1;
   if (aName == "GL_2_2") return & mLocGL_2_2;
   if (aName == "GPS_x") return & mLocGPS_x;
   if (aName == "GPS_y") return & mLocGPS_y;
   if (aName == "GPS_z") return & mLocGPS_z;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqObsBaseGPS_GL::mTheAuto("cEqObsBaseGPS_GL",cEqObsBaseGPS_GL::Alloc);


cElCompiledFonc *  cEqObsBaseGPS_GL::Alloc()
{  return new cEqObsBaseGPS_GL();
}


