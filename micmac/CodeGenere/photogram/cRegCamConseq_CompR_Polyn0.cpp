// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cRegCamConseq_CompR_Polyn0.h"


cRegCamConseq_CompR_Polyn0::cRegCamConseq_CompR_Polyn0():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,3));
   AddIntRef (cIncIntervale("Intr2",3,6));
   AddIntRef (cIncIntervale("Tmp_PTer",6,9));
   Close(false);
}



void cRegCamConseq_CompR_Polyn0::ComputeVal()
{
   double tmp0_ = mCompCoord[7];
   double tmp1_ = mCompCoord[0];
   double tmp2_ = tmp1_ / mLocRay_z;
   double tmp3_ = mCompCoord[8];
   double tmp4_ = mCompCoord[6];
   double tmp5_ = mCompCoord[3];
   double tmp6_ = tmp4_ * mLocRay_y;
   double tmp7_ = tmp0_ * mLocRay_x;
   double tmp8_ = tmp6_ - tmp7_;
   double tmp9_ = mLocRay_z + tmp8_;
   double tmp10_ = tmp5_ / (tmp9_);

  mVal[0] = (mLocRay_x * (tmp2_) + mCompCoord[1]) - ((mLocRay_x + tmp0_ * mLocRay_z - tmp3_ * mLocRay_y) * (tmp10_) + mCompCoord[4]);

  mVal[1] = (mLocRay_y * (tmp2_) + mCompCoord[2]) - ((mLocRay_y + tmp3_ * mLocRay_x - tmp4_ * mLocRay_z) * (tmp10_) + mCompCoord[5]);

}


void cRegCamConseq_CompR_Polyn0::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[7];
   double tmp1_ = mCompCoord[6];
   double tmp2_ = tmp1_ * mLocRay_y;
   double tmp3_ = tmp0_ * mLocRay_x;
   double tmp4_ = tmp2_ - tmp3_;
   double tmp5_ = mLocRay_z + tmp4_;
   double tmp6_ = tmp0_ * mLocRay_z;
   double tmp7_ = mCompCoord[8];
   double tmp8_ = tmp7_ * mLocRay_y;
   double tmp9_ = tmp6_ - tmp8_;
   double tmp10_ = mLocRay_x + tmp9_;
   double tmp11_ = mCompCoord[3];
   double tmp12_ = ElSquare(tmp5_);
   double tmp13_ = tmp11_ / (tmp5_);
   double tmp14_ = mCompCoord[0];
   double tmp15_ = tmp14_ / mLocRay_z;
   double tmp16_ = ElSquare(mLocRay_z);
   double tmp17_ = mLocRay_z / tmp16_;
   double tmp18_ = (tmp5_) / tmp12_;
   double tmp19_ = tmp7_ * mLocRay_x;
   double tmp20_ = tmp1_ * mLocRay_z;
   double tmp21_ = tmp19_ - tmp20_;
   double tmp22_ = mLocRay_y + tmp21_;
   double tmp23_ = -(1);
   double tmp24_ = tmp11_ * mLocRay_y;
   double tmp25_ = -(tmp24_);
   double tmp26_ = tmp25_ / tmp12_;
   double tmp27_ = -(mLocRay_x);
   double tmp28_ = tmp11_ * tmp27_;
   double tmp29_ = -(tmp28_);
   double tmp30_ = tmp29_ / tmp12_;

  mVal[0] = (mLocRay_x * (tmp15_) + mCompCoord[1]) - ((tmp10_) * (tmp13_) + mCompCoord[4]);

  mCompDer[0][0] = (tmp17_) * mLocRay_x;
  mCompDer[0][1] = 1;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = -((tmp18_) * (tmp10_));
  mCompDer[0][4] = tmp23_;
  mCompDer[0][5] = 0;
  mCompDer[0][6] = -((tmp26_) * (tmp10_));
  mCompDer[0][7] = -(mLocRay_z * (tmp13_) + (tmp30_) * (tmp10_));
  mCompDer[0][8] = -(-(mLocRay_y) * (tmp13_));
  mVal[1] = (mLocRay_y * (tmp15_) + mCompCoord[2]) - ((tmp22_) * (tmp13_) + mCompCoord[5]);

  mCompDer[1][0] = (tmp17_) * mLocRay_y;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 1;
  mCompDer[1][3] = -((tmp18_) * (tmp22_));
  mCompDer[1][4] = 0;
  mCompDer[1][5] = tmp23_;
  mCompDer[1][6] = -(-(mLocRay_z) * (tmp13_) + (tmp26_) * (tmp22_));
  mCompDer[1][7] = -((tmp30_) * (tmp22_));
  mCompDer[1][8] = -(mLocRay_x * (tmp13_));
}


void cRegCamConseq_CompR_Polyn0::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cRegCamConseq_CompR_Polyn0 Has no Der Sec");
}

void cRegCamConseq_CompR_Polyn0::SetRay_x(double aVal){ mLocRay_x = aVal;}
void cRegCamConseq_CompR_Polyn0::SetRay_y(double aVal){ mLocRay_y = aVal;}
void cRegCamConseq_CompR_Polyn0::SetRay_z(double aVal){ mLocRay_z = aVal;}



double * cRegCamConseq_CompR_Polyn0::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Ray_x") return & mLocRay_x;
   if (aName == "Ray_y") return & mLocRay_y;
   if (aName == "Ray_z") return & mLocRay_z;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cRegCamConseq_CompR_Polyn0::mTheAuto("cRegCamConseq_CompR_Polyn0",cRegCamConseq_CompR_Polyn0::Alloc);


cElCompiledFonc *  cRegCamConseq_CompR_Polyn0::Alloc()
{  return new cRegCamConseq_CompR_Polyn0();
}


