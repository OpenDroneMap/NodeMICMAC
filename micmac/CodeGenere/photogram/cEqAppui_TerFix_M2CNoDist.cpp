// File Automatically generated by eLiSe
#include "general/all.h"
#include "private/all.h"
#include "cEqAppui_TerFix_M2CNoDist.h"


cEqAppui_TerFix_M2CNoDist::cEqAppui_TerFix_M2CNoDist():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,3));
   AddIntRef (cIncIntervale("Orient",3,9));
   Close(false);
}



void cEqAppui_TerFix_M2CNoDist::ComputeVal()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[4];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[5];
   double tmp7_ = mCompCoord[6];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[7];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[8];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = -(tmp3_);
   double tmp18_ = tmp4_*tmp11_;
   double tmp19_ = tmp3_*tmp11_;
   double tmp20_ = mCompCoord[0];
   double tmp21_ = tmp17_*tmp10_;
   double tmp22_ = tmp18_*tmp12_;
   double tmp23_ = tmp21_+tmp22_;
   double tmp24_ = (tmp23_)*(tmp8_);
   double tmp25_ = tmp4_*tmp10_;
   double tmp26_ = tmp19_*tmp12_;
   double tmp27_ = tmp25_+tmp26_;
   double tmp28_ = (tmp27_)*(tmp14_);
   double tmp29_ = tmp24_+tmp28_;
   double tmp30_ = tmp2_*tmp12_;
   double tmp31_ = tmp30_*(tmp16_);
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = tmp20_/(tmp32_);

  mVal[0] = (((tmp4_*tmp2_*(tmp8_)+tmp3_*tmp2_*(tmp14_)+tmp5_*(tmp16_))*(tmp33_)+mCompCoord[1])-mLocXIm)*mLocScNorm;

  mVal[1] = ((((tmp17_*tmp12_+tmp18_*tmp9_)*(tmp8_)+(tmp4_*tmp12_+tmp19_*tmp9_)*(tmp14_)+tmp2_*tmp9_*(tmp16_))*(tmp33_)+mCompCoord[2])-mLocYIm)*mLocScNorm;

}


void cEqAppui_TerFix_M2CNoDist::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[3];
   double tmp1_ = mCompCoord[4];
   double tmp2_ = cos(tmp1_);
   double tmp3_ = sin(tmp0_);
   double tmp4_ = cos(tmp0_);
   double tmp5_ = sin(tmp1_);
   double tmp6_ = mCompCoord[5];
   double tmp7_ = mCompCoord[6];
   double tmp8_ = mLocXTer-tmp7_;
   double tmp9_ = sin(tmp6_);
   double tmp10_ = -(tmp9_);
   double tmp11_ = -(tmp5_);
   double tmp12_ = cos(tmp6_);
   double tmp13_ = mCompCoord[7];
   double tmp14_ = mLocYTer-tmp13_;
   double tmp15_ = mCompCoord[8];
   double tmp16_ = mLocZTer-tmp15_;
   double tmp17_ = -(tmp3_);
   double tmp18_ = tmp17_*tmp10_;
   double tmp19_ = tmp4_*tmp11_;
   double tmp20_ = tmp19_*tmp12_;
   double tmp21_ = tmp18_+tmp20_;
   double tmp22_ = (tmp21_)*(tmp8_);
   double tmp23_ = tmp4_*tmp10_;
   double tmp24_ = tmp3_*tmp11_;
   double tmp25_ = tmp24_*tmp12_;
   double tmp26_ = tmp23_+tmp25_;
   double tmp27_ = (tmp26_)*(tmp14_);
   double tmp28_ = tmp22_+tmp27_;
   double tmp29_ = tmp2_*tmp12_;
   double tmp30_ = tmp29_*(tmp16_);
   double tmp31_ = tmp28_+tmp30_;
   double tmp32_ = tmp4_*tmp2_;
   double tmp33_ = tmp32_*(tmp8_);
   double tmp34_ = tmp3_*tmp2_;
   double tmp35_ = tmp34_*(tmp14_);
   double tmp36_ = tmp33_+tmp35_;
   double tmp37_ = tmp5_*(tmp16_);
   double tmp38_ = tmp36_+tmp37_;
   double tmp39_ = mCompCoord[0];
   double tmp40_ = tmp39_/(tmp31_);
   double tmp41_ = -(1);
   double tmp42_ = tmp41_*tmp3_;
   double tmp43_ = ElSquare(tmp31_);
   double tmp44_ = tmp41_*tmp5_;
   double tmp45_ = -(tmp2_);
   double tmp46_ = -(tmp12_);
   double tmp47_ = tmp41_*tmp9_;
   double tmp48_ = (tmp31_)/tmp43_;
   double tmp49_ = tmp17_*tmp12_;
   double tmp50_ = tmp19_*tmp9_;
   double tmp51_ = tmp49_+tmp50_;
   double tmp52_ = (tmp51_)*(tmp8_);
   double tmp53_ = tmp4_*tmp12_;
   double tmp54_ = tmp24_*tmp9_;
   double tmp55_ = tmp53_+tmp54_;
   double tmp56_ = (tmp55_)*(tmp14_);
   double tmp57_ = tmp52_+tmp56_;
   double tmp58_ = tmp2_*tmp9_;
   double tmp59_ = tmp58_*(tmp16_);
   double tmp60_ = tmp57_+tmp59_;
   double tmp61_ = -(tmp4_);
   double tmp62_ = tmp42_*tmp11_;
   double tmp63_ = tmp61_*tmp10_;
   double tmp64_ = tmp62_*tmp12_;
   double tmp65_ = tmp63_+tmp64_;
   double tmp66_ = (tmp65_)*(tmp8_);
   double tmp67_ = tmp42_*tmp10_;
   double tmp68_ = tmp67_+tmp20_;
   double tmp69_ = (tmp68_)*(tmp14_);
   double tmp70_ = tmp66_+tmp69_;
   double tmp71_ = tmp39_*(tmp70_);
   double tmp72_ = -(tmp71_);
   double tmp73_ = tmp72_/tmp43_;
   double tmp74_ = tmp45_*tmp4_;
   double tmp75_ = tmp45_*tmp3_;
   double tmp76_ = tmp74_*tmp12_;
   double tmp77_ = tmp76_*(tmp8_);
   double tmp78_ = tmp75_*tmp12_;
   double tmp79_ = tmp78_*(tmp14_);
   double tmp80_ = tmp77_+tmp79_;
   double tmp81_ = tmp44_*tmp12_;
   double tmp82_ = tmp81_*(tmp16_);
   double tmp83_ = tmp80_+tmp82_;
   double tmp84_ = tmp39_*(tmp83_);
   double tmp85_ = -(tmp84_);
   double tmp86_ = tmp85_/tmp43_;
   double tmp87_ = tmp46_*tmp17_;
   double tmp88_ = tmp47_*tmp19_;
   double tmp89_ = tmp87_+tmp88_;
   double tmp90_ = (tmp89_)*(tmp8_);
   double tmp91_ = tmp46_*tmp4_;
   double tmp92_ = tmp47_*tmp24_;
   double tmp93_ = tmp91_+tmp92_;
   double tmp94_ = (tmp93_)*(tmp14_);
   double tmp95_ = tmp90_+tmp94_;
   double tmp96_ = tmp47_*tmp2_;
   double tmp97_ = tmp96_*(tmp16_);
   double tmp98_ = tmp95_+tmp97_;
   double tmp99_ = tmp39_*(tmp98_);
   double tmp100_ = -(tmp99_);
   double tmp101_ = tmp100_/tmp43_;
   double tmp102_ = tmp41_*(tmp21_);
   double tmp103_ = tmp39_*tmp102_;
   double tmp104_ = -(tmp103_);
   double tmp105_ = tmp104_/tmp43_;
   double tmp106_ = tmp41_*(tmp26_);
   double tmp107_ = tmp39_*tmp106_;
   double tmp108_ = -(tmp107_);
   double tmp109_ = tmp108_/tmp43_;
   double tmp110_ = tmp41_*tmp29_;
   double tmp111_ = tmp39_*tmp110_;
   double tmp112_ = -(tmp111_);
   double tmp113_ = tmp112_/tmp43_;

  mVal[0] = (((tmp38_)*(tmp40_)+mCompCoord[1])-mLocXIm)*mLocScNorm;

  mCompDer[0][0] = (tmp48_)*(tmp38_)*mLocScNorm;
  mCompDer[0][1] = mLocScNorm;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = ((tmp42_*tmp2_*(tmp8_)+tmp32_*(tmp14_))*(tmp40_)+(tmp73_)*(tmp38_))*mLocScNorm;
  mCompDer[0][4] = ((tmp44_*tmp4_*(tmp8_)+tmp44_*tmp3_*(tmp14_)+tmp2_*(tmp16_))*(tmp40_)+(tmp86_)*(tmp38_))*mLocScNorm;
  mCompDer[0][5] = (tmp101_)*(tmp38_)*mLocScNorm;
  mCompDer[0][6] = (tmp41_*tmp32_*(tmp40_)+(tmp105_)*(tmp38_))*mLocScNorm;
  mCompDer[0][7] = (tmp41_*tmp34_*(tmp40_)+(tmp109_)*(tmp38_))*mLocScNorm;
  mCompDer[0][8] = (tmp44_*(tmp40_)+(tmp113_)*(tmp38_))*mLocScNorm;
  mVal[1] = (((tmp60_)*(tmp40_)+mCompCoord[2])-mLocYIm)*mLocScNorm;

  mCompDer[1][0] = (tmp48_)*(tmp60_)*mLocScNorm;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = mLocScNorm;
  mCompDer[1][3] = (((tmp61_*tmp12_+tmp62_*tmp9_)*(tmp8_)+(tmp42_*tmp12_+tmp50_)*(tmp14_))*(tmp40_)+(tmp73_)*(tmp60_))*mLocScNorm;
  mCompDer[1][4] = ((tmp74_*tmp9_*(tmp8_)+tmp75_*tmp9_*(tmp14_)+tmp44_*tmp9_*(tmp16_))*(tmp40_)+(tmp86_)*(tmp60_))*mLocScNorm;
  mCompDer[1][5] = (((tmp47_*tmp17_+tmp12_*tmp19_)*(tmp8_)+(tmp47_*tmp4_+tmp12_*tmp24_)*(tmp14_)+tmp12_*tmp2_*(tmp16_))*(tmp40_)+(tmp101_)*(tmp60_))*mLocScNorm;
  mCompDer[1][6] = (tmp41_*(tmp51_)*(tmp40_)+(tmp105_)*(tmp60_))*mLocScNorm;
  mCompDer[1][7] = (tmp41_*(tmp55_)*(tmp40_)+(tmp109_)*(tmp60_))*mLocScNorm;
  mCompDer[1][8] = (tmp41_*tmp58_*(tmp40_)+(tmp113_)*(tmp60_))*mLocScNorm;
}


void cEqAppui_TerFix_M2CNoDist::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppui_TerFix_M2CNoDist Has no Der Sec");
}

void cEqAppui_TerFix_M2CNoDist::SetScNorm(double aVal){ mLocScNorm = aVal;}
void cEqAppui_TerFix_M2CNoDist::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppui_TerFix_M2CNoDist::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppui_TerFix_M2CNoDist::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppui_TerFix_M2CNoDist::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppui_TerFix_M2CNoDist::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppui_TerFix_M2CNoDist::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "ScNorm") return & mLocScNorm;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppui_TerFix_M2CNoDist::mTheAuto("cEqAppui_TerFix_M2CNoDist",cEqAppui_TerFix_M2CNoDist::Alloc);


cElCompiledFonc *  cEqAppui_TerFix_M2CNoDist::Alloc()
{  return new cEqAppui_TerFix_M2CNoDist();
}


