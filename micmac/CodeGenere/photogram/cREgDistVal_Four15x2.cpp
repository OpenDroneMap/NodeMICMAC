// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cREgDistVal_Four15x2.h"


cREgDistVal_Four15x2::cREgDistVal_Four15x2():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("Intr",0,18));
   Close(false);
}



void cREgDistVal_Four15x2::ComputeVal()
{
   double tmp0_ = mLocRegDistValP1_x - mLocFour15x2_State_1_0;
   double tmp1_ = (tmp0_) / mLocFour15x2_State_0_0;
   double tmp2_ = mLocRegDistValP1_y - mLocFour15x2_State_2_0;
   double tmp3_ = (tmp2_) / mLocFour15x2_State_0_0;
   double tmp4_ = mCompCoord[9];
   double tmp5_ = tmp1_ - tmp4_;
   double tmp6_ = mCompCoord[10];
   double tmp7_ = tmp3_ - tmp6_;
   double tmp8_ = (tmp5_) * (tmp5_);
   double tmp9_ = (tmp7_) * (tmp7_);
   double tmp10_ = tmp8_ + tmp9_;
   double tmp11_ = (tmp10_) * (tmp10_);
   double tmp12_ = tmp11_ * (tmp10_);
   double tmp13_ = tmp12_ * (tmp10_);
   double tmp14_ = tmp13_ * (tmp10_);
   double tmp15_ = tmp14_ * (tmp10_);
   double tmp16_ = mCompCoord[3];
   double tmp17_ = mCompCoord[4];
   double tmp18_ = mCompCoord[5];
   double tmp19_ = (tmp1_) * (tmp3_);
   double tmp20_ = mCompCoord[6];
   double tmp21_ = (tmp3_) * (tmp3_);
   double tmp22_ = (tmp1_) * (tmp1_);
   double tmp23_ = mCompCoord[11];
   double tmp24_ = tmp23_ * (tmp10_);
   double tmp25_ = mCompCoord[12];
   double tmp26_ = tmp25_ * tmp11_;
   double tmp27_ = tmp24_ + tmp26_;
   double tmp28_ = mCompCoord[13];
   double tmp29_ = tmp28_ * tmp12_;
   double tmp30_ = tmp27_ + tmp29_;
   double tmp31_ = mCompCoord[14];
   double tmp32_ = tmp31_ * tmp13_;
   double tmp33_ = tmp30_ + tmp32_;
   double tmp34_ = mCompCoord[15];
   double tmp35_ = tmp34_ * tmp14_;
   double tmp36_ = tmp33_ + tmp35_;
   double tmp37_ = mCompCoord[16];
   double tmp38_ = tmp37_ * tmp15_;
   double tmp39_ = tmp36_ + tmp38_;
   double tmp40_ = mCompCoord[17];
   double tmp41_ = tmp15_ * (tmp10_);
   double tmp42_ = tmp40_ * tmp41_;
   double tmp43_ = tmp39_ + tmp42_;

  mVal[0] = (mLocFour15x2_State_1_0 + (((1 + tmp16_) * (tmp1_) + tmp17_ * (tmp3_)) - tmp18_ * 2 * tmp22_ + tmp20_ * tmp19_ + mCompCoord[7] * tmp21_ + (tmp5_) * (tmp43_)) * mLocFour15x2_State_0_0) - mLocRegDistKnownVal_x;

  mVal[1] = (mLocFour15x2_State_2_0 + (((1 - tmp16_) * (tmp3_) + tmp17_ * (tmp1_) + tmp18_ * tmp19_) - tmp20_ * 2 * tmp21_ + mCompCoord[8] * tmp22_ + (tmp7_) * (tmp43_)) * mLocFour15x2_State_0_0) - mLocRegDistKnownVal_y;

}


void cREgDistVal_Four15x2::ComputeValDeriv()
{
   double tmp0_ = mLocRegDistValP1_x - mLocFour15x2_State_1_0;
   double tmp1_ = (tmp0_) / mLocFour15x2_State_0_0;
   double tmp2_ = mLocRegDistValP1_y - mLocFour15x2_State_2_0;
   double tmp3_ = (tmp2_) / mLocFour15x2_State_0_0;
   double tmp4_ = mCompCoord[9];
   double tmp5_ = tmp1_ - tmp4_;
   double tmp6_ = mCompCoord[10];
   double tmp7_ = tmp3_ - tmp6_;
   double tmp8_ = (tmp5_) * (tmp5_);
   double tmp9_ = (tmp7_) * (tmp7_);
   double tmp10_ = tmp8_ + tmp9_;
   double tmp11_ = (tmp10_) * (tmp10_);
   double tmp12_ = tmp11_ * (tmp10_);
   double tmp13_ = tmp12_ * (tmp10_);
   double tmp14_ = tmp13_ * (tmp10_);
   double tmp15_ = tmp14_ * (tmp10_);
   double tmp16_ = (tmp1_) * (tmp1_);
   double tmp17_ = (tmp1_) * (tmp3_);
   double tmp18_ = (tmp3_) * (tmp3_);
   double tmp19_ = mCompCoord[11];
   double tmp20_ = tmp19_ * (tmp10_);
   double tmp21_ = mCompCoord[12];
   double tmp22_ = tmp21_ * tmp11_;
   double tmp23_ = tmp20_ + tmp22_;
   double tmp24_ = mCompCoord[13];
   double tmp25_ = tmp24_ * tmp12_;
   double tmp26_ = tmp23_ + tmp25_;
   double tmp27_ = mCompCoord[14];
   double tmp28_ = tmp27_ * tmp13_;
   double tmp29_ = tmp26_ + tmp28_;
   double tmp30_ = mCompCoord[15];
   double tmp31_ = tmp30_ * tmp14_;
   double tmp32_ = tmp29_ + tmp31_;
   double tmp33_ = mCompCoord[16];
   double tmp34_ = tmp33_ * tmp15_;
   double tmp35_ = tmp32_ + tmp34_;
   double tmp36_ = mCompCoord[17];
   double tmp37_ = tmp15_ * (tmp10_);
   double tmp38_ = tmp36_ * tmp37_;
   double tmp39_ = tmp35_ + tmp38_;
   double tmp40_ = -(1);
   double tmp41_ = tmp40_ * (tmp5_);
   double tmp42_ = tmp41_ + tmp41_;
   double tmp43_ = (tmp42_) * (tmp10_);
   double tmp44_ = tmp43_ + tmp43_;
   double tmp45_ = (tmp44_) * (tmp10_);
   double tmp46_ = (tmp42_) * tmp11_;
   double tmp47_ = tmp45_ + tmp46_;
   double tmp48_ = (tmp47_) * (tmp10_);
   double tmp49_ = (tmp42_) * tmp12_;
   double tmp50_ = tmp48_ + tmp49_;
   double tmp51_ = (tmp50_) * (tmp10_);
   double tmp52_ = (tmp42_) * tmp13_;
   double tmp53_ = tmp51_ + tmp52_;
   double tmp54_ = (tmp53_) * (tmp10_);
   double tmp55_ = (tmp42_) * tmp14_;
   double tmp56_ = tmp54_ + tmp55_;
   double tmp57_ = tmp40_ * (tmp7_);
   double tmp58_ = tmp57_ + tmp57_;
   double tmp59_ = (tmp58_) * (tmp10_);
   double tmp60_ = tmp59_ + tmp59_;
   double tmp61_ = (tmp60_) * (tmp10_);
   double tmp62_ = (tmp58_) * tmp11_;
   double tmp63_ = tmp61_ + tmp62_;
   double tmp64_ = (tmp63_) * (tmp10_);
   double tmp65_ = (tmp58_) * tmp12_;
   double tmp66_ = tmp64_ + tmp65_;
   double tmp67_ = (tmp66_) * (tmp10_);
   double tmp68_ = (tmp58_) * tmp13_;
   double tmp69_ = tmp67_ + tmp68_;
   double tmp70_ = (tmp69_) * (tmp10_);
   double tmp71_ = (tmp58_) * tmp14_;
   double tmp72_ = tmp70_ + tmp71_;
   double tmp73_ = mCompCoord[3];
   double tmp74_ = mCompCoord[4];
   double tmp75_ = mCompCoord[5];
   double tmp76_ = mCompCoord[6];
   double tmp77_ = (tmp1_) * mLocFour15x2_State_0_0;
   double tmp78_ = tmp17_ * mLocFour15x2_State_0_0;
   double tmp79_ = (tmp42_) * tmp19_;
   double tmp80_ = (tmp44_) * tmp21_;
   double tmp81_ = tmp79_ + tmp80_;
   double tmp82_ = (tmp47_) * tmp24_;
   double tmp83_ = tmp81_ + tmp82_;
   double tmp84_ = (tmp50_) * tmp27_;
   double tmp85_ = tmp83_ + tmp84_;
   double tmp86_ = (tmp53_) * tmp30_;
   double tmp87_ = tmp85_ + tmp86_;
   double tmp88_ = (tmp56_) * tmp33_;
   double tmp89_ = tmp87_ + tmp88_;
   double tmp90_ = (tmp56_) * (tmp10_);
   double tmp91_ = (tmp42_) * tmp15_;
   double tmp92_ = tmp90_ + tmp91_;
   double tmp93_ = (tmp92_) * tmp36_;
   double tmp94_ = tmp89_ + tmp93_;
   double tmp95_ = tmp40_ * (tmp39_);
   double tmp96_ = (tmp58_) * tmp19_;
   double tmp97_ = (tmp60_) * tmp21_;
   double tmp98_ = tmp96_ + tmp97_;
   double tmp99_ = (tmp63_) * tmp24_;
   double tmp100_ = tmp98_ + tmp99_;
   double tmp101_ = (tmp66_) * tmp27_;
   double tmp102_ = tmp100_ + tmp101_;
   double tmp103_ = (tmp69_) * tmp30_;
   double tmp104_ = tmp102_ + tmp103_;
   double tmp105_ = (tmp72_) * tmp33_;
   double tmp106_ = tmp104_ + tmp105_;
   double tmp107_ = (tmp72_) * (tmp10_);
   double tmp108_ = (tmp58_) * tmp15_;
   double tmp109_ = tmp107_ + tmp108_;
   double tmp110_ = (tmp109_) * tmp36_;
   double tmp111_ = tmp106_ + tmp110_;

  mVal[0] = (mLocFour15x2_State_1_0 + (((1 + tmp73_) * (tmp1_) + tmp74_ * (tmp3_)) - tmp75_ * 2 * tmp16_ + tmp76_ * tmp17_ + mCompCoord[7] * tmp18_ + (tmp5_) * (tmp39_)) * mLocFour15x2_State_0_0) - mLocRegDistKnownVal_x;

  mCompDer[0][0] = 0;
  mCompDer[0][1] = 0;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = tmp77_;
  mCompDer[0][4] = (tmp3_) * mLocFour15x2_State_0_0;
  mCompDer[0][5] = -(2 * tmp16_) * mLocFour15x2_State_0_0;
  mCompDer[0][6] = tmp78_;
  mCompDer[0][7] = tmp18_ * mLocFour15x2_State_0_0;
  mCompDer[0][8] = 0;
  mCompDer[0][9] = (tmp95_ + (tmp94_) * (tmp5_)) * mLocFour15x2_State_0_0;
  mCompDer[0][10] = (tmp111_) * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][11] = (tmp10_) * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][12] = tmp11_ * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][13] = tmp12_ * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][14] = tmp13_ * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][15] = tmp14_ * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][16] = tmp15_ * (tmp5_) * mLocFour15x2_State_0_0;
  mCompDer[0][17] = tmp37_ * (tmp5_) * mLocFour15x2_State_0_0;
  mVal[1] = (mLocFour15x2_State_2_0 + (((1 - tmp73_) * (tmp3_) + tmp74_ * (tmp1_) + tmp75_ * tmp17_) - tmp76_ * 2 * tmp18_ + mCompCoord[8] * tmp16_ + (tmp7_) * (tmp39_)) * mLocFour15x2_State_0_0) - mLocRegDistKnownVal_y;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
  mCompDer[1][3] = tmp40_ * (tmp3_) * mLocFour15x2_State_0_0;
  mCompDer[1][4] = tmp77_;
  mCompDer[1][5] = tmp78_;
  mCompDer[1][6] = -(2 * tmp18_) * mLocFour15x2_State_0_0;
  mCompDer[1][7] = 0;
  mCompDer[1][8] = tmp16_ * mLocFour15x2_State_0_0;
  mCompDer[1][9] = (tmp94_) * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][10] = (tmp95_ + (tmp111_) * (tmp7_)) * mLocFour15x2_State_0_0;
  mCompDer[1][11] = (tmp10_) * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][12] = tmp11_ * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][13] = tmp12_ * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][14] = tmp13_ * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][15] = tmp14_ * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][16] = tmp15_ * (tmp7_) * mLocFour15x2_State_0_0;
  mCompDer[1][17] = tmp37_ * (tmp7_) * mLocFour15x2_State_0_0;
}


void cREgDistVal_Four15x2::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cREgDistVal_Four15x2 Has no Der Sec");
}

void cREgDistVal_Four15x2::SetFour15x2_State_0_0(double aVal){ mLocFour15x2_State_0_0 = aVal;}
void cREgDistVal_Four15x2::SetFour15x2_State_1_0(double aVal){ mLocFour15x2_State_1_0 = aVal;}
void cREgDistVal_Four15x2::SetFour15x2_State_2_0(double aVal){ mLocFour15x2_State_2_0 = aVal;}
void cREgDistVal_Four15x2::SetRegDistKnownVal_x(double aVal){ mLocRegDistKnownVal_x = aVal;}
void cREgDistVal_Four15x2::SetRegDistKnownVal_y(double aVal){ mLocRegDistKnownVal_y = aVal;}
void cREgDistVal_Four15x2::SetRegDistValP1_x(double aVal){ mLocRegDistValP1_x = aVal;}
void cREgDistVal_Four15x2::SetRegDistValP1_y(double aVal){ mLocRegDistValP1_y = aVal;}



double * cREgDistVal_Four15x2::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Four15x2_State_0_0") return & mLocFour15x2_State_0_0;
   if (aName == "Four15x2_State_1_0") return & mLocFour15x2_State_1_0;
   if (aName == "Four15x2_State_2_0") return & mLocFour15x2_State_2_0;
   if (aName == "RegDistKnownVal_x") return & mLocRegDistKnownVal_x;
   if (aName == "RegDistKnownVal_y") return & mLocRegDistKnownVal_y;
   if (aName == "RegDistValP1_x") return & mLocRegDistValP1_x;
   if (aName == "RegDistValP1_y") return & mLocRegDistValP1_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cREgDistVal_Four15x2::mTheAuto("cREgDistVal_Four15x2",cREgDistVal_Four15x2::Alloc);


cElCompiledFonc *  cREgDistVal_Four15x2::Alloc()
{  return new cREgDistVal_Four15x2();
}


