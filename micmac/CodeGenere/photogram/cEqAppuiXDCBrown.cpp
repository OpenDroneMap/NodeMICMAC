// File Automatically generated by eLiSe

#include "general/all.h"
#include "private/all.h"
#include "cEqAppuiXDCBrown.h"


cEqAppuiXDCBrown::cEqAppuiXDCBrown():
    cElCompiledFonc(1)
{
   AddIntRef (cIncIntervale("Intr",0,17));
   AddIntRef (cIncIntervale("Orient",17,23));
   Close(false);
}



void cEqAppuiXDCBrown::ComputeVal()
{
   double tmp0_ = mLocYIm*mLocYIm;
   double tmp1_ = mLocXIm*mLocXIm;
   double tmp2_ = tmp1_*tmp0_;
   double tmp3_ = mCompCoord[17];
   double tmp4_ = mCompCoord[18];
   double tmp5_ = cos(tmp4_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = cos(tmp3_);
   double tmp8_ = sin(tmp4_);
   double tmp9_ = mCompCoord[19];
   double tmp10_ = mCompCoord[20];
   double tmp11_ = mLocXTer-tmp10_;
   double tmp12_ = sin(tmp9_);
   double tmp13_ = -(tmp12_);
   double tmp14_ = -(tmp8_);
   double tmp15_ = cos(tmp9_);
   double tmp16_ = mCompCoord[21];
   double tmp17_ = mLocYTer-tmp16_;
   double tmp18_ = mCompCoord[22];
   double tmp19_ = mLocZTer-tmp18_;

  mVal[0] = (((1+mCompCoord[3])*mLocXIm+mCompCoord[4]*mLocYIm+mCompCoord[5]*mLocXIm*mLocYIm+mCompCoord[6]*tmp0_+mCompCoord[7]*tmp1_*mLocYIm+mCompCoord[8]*mLocXIm*tmp0_+mCompCoord[9]*tmp2_+mCompCoord[15]*(mLocXIm/mLocDCBrown_State_0_0)*tmp2_+mCompCoord[16]*mLocXIm*(tmp1_+tmp0_))-mCompCoord[1])/mCompCoord[0]-(tmp7_*tmp5_*(tmp11_)+tmp6_*tmp5_*(tmp17_)+tmp8_*(tmp19_))/((-(tmp6_)*tmp13_+tmp7_*tmp14_*tmp15_)*(tmp11_)+(tmp7_*tmp13_+tmp6_*tmp14_*tmp15_)*(tmp17_)+tmp5_*tmp15_*(tmp19_));

}


void cEqAppuiXDCBrown::ComputeValDeriv()
{
   double tmp0_ = mLocYIm*mLocYIm;
   double tmp1_ = mLocXIm*mLocXIm;
   double tmp2_ = tmp1_*tmp0_;
   double tmp3_ = mCompCoord[17];
   double tmp4_ = mCompCoord[18];
   double tmp5_ = cos(tmp4_);
   double tmp6_ = sin(tmp3_);
   double tmp7_ = cos(tmp3_);
   double tmp8_ = sin(tmp4_);
   double tmp9_ = mCompCoord[19];
   double tmp10_ = mCompCoord[20];
   double tmp11_ = mLocXTer-tmp10_;
   double tmp12_ = sin(tmp9_);
   double tmp13_ = -(tmp12_);
   double tmp14_ = -(tmp8_);
   double tmp15_ = cos(tmp9_);
   double tmp16_ = mCompCoord[21];
   double tmp17_ = mLocYTer-tmp16_;
   double tmp18_ = mCompCoord[22];
   double tmp19_ = mLocZTer-tmp18_;
   double tmp20_ = mCompCoord[3];
   double tmp21_ = 1+tmp20_;
   double tmp22_ = (tmp21_)*mLocXIm;
   double tmp23_ = mCompCoord[4];
   double tmp24_ = tmp23_*mLocYIm;
   double tmp25_ = tmp22_+tmp24_;
   double tmp26_ = mCompCoord[5];
   double tmp27_ = mLocXIm*mLocYIm;
   double tmp28_ = tmp26_*tmp27_;
   double tmp29_ = tmp25_+tmp28_;
   double tmp30_ = mCompCoord[6];
   double tmp31_ = tmp30_*tmp0_;
   double tmp32_ = tmp29_+tmp31_;
   double tmp33_ = mCompCoord[7];
   double tmp34_ = tmp1_*mLocYIm;
   double tmp35_ = tmp33_*tmp34_;
   double tmp36_ = tmp32_+tmp35_;
   double tmp37_ = mCompCoord[8];
   double tmp38_ = mLocXIm*tmp0_;
   double tmp39_ = tmp37_*tmp38_;
   double tmp40_ = tmp36_+tmp39_;
   double tmp41_ = mCompCoord[9];
   double tmp42_ = tmp41_*tmp2_;
   double tmp43_ = tmp40_+tmp42_;
   double tmp44_ = mCompCoord[15];
   double tmp45_ = mLocXIm/mLocDCBrown_State_0_0;
   double tmp46_ = tmp44_*(tmp45_);
   double tmp47_ = tmp46_*tmp2_;
   double tmp48_ = tmp43_+tmp47_;
   double tmp49_ = mCompCoord[16];
   double tmp50_ = tmp49_*mLocXIm;
   double tmp51_ = tmp1_+tmp0_;
   double tmp52_ = tmp50_*(tmp51_);
   double tmp53_ = tmp48_+tmp52_;
   double tmp54_ = mCompCoord[1];
   double tmp55_ = (tmp53_)-tmp54_;
   double tmp56_ = mCompCoord[0];
   double tmp57_ = ElSquare(tmp56_);
   double tmp58_ = -(1);
   double tmp59_ = tmp7_*tmp5_;
   double tmp60_ = -(tmp6_);
   double tmp61_ = tmp60_*tmp13_;
   double tmp62_ = tmp7_*tmp14_;
   double tmp63_ = tmp62_*tmp15_;
   double tmp64_ = tmp61_+tmp63_;
   double tmp65_ = (tmp64_)*(tmp11_);
   double tmp66_ = tmp7_*tmp13_;
   double tmp67_ = tmp6_*tmp14_;
   double tmp68_ = tmp67_*tmp15_;
   double tmp69_ = tmp66_+tmp68_;
   double tmp70_ = (tmp69_)*(tmp17_);
   double tmp71_ = tmp65_+tmp70_;
   double tmp72_ = tmp5_*tmp15_;
   double tmp73_ = tmp72_*(tmp19_);
   double tmp74_ = tmp71_+tmp73_;
   double tmp75_ = tmp59_*(tmp11_);
   double tmp76_ = tmp6_*tmp5_;
   double tmp77_ = tmp76_*(tmp17_);
   double tmp78_ = tmp75_+tmp77_;
   double tmp79_ = tmp8_*(tmp19_);
   double tmp80_ = tmp78_+tmp79_;
   double tmp81_ = tmp58_*tmp6_;
   double tmp82_ = tmp58_*tmp8_;
   double tmp83_ = -(tmp5_);
   double tmp84_ = ElSquare(tmp74_);
   double tmp85_ = -(tmp15_);
   double tmp86_ = tmp58_*tmp12_;

  mVal[0] = (tmp55_)/tmp56_-(tmp80_)/(tmp74_);

  mCompDer[0][0] = -(tmp55_)/tmp57_;
  mCompDer[0][1] = (tmp58_*tmp56_)/tmp57_;
  mCompDer[0][2] = 0;
  mCompDer[0][3] = (mLocXIm*tmp56_)/tmp57_;
  mCompDer[0][4] = (mLocYIm*tmp56_)/tmp57_;
  mCompDer[0][5] = (tmp27_*tmp56_)/tmp57_;
  mCompDer[0][6] = (tmp0_*tmp56_)/tmp57_;
  mCompDer[0][7] = (tmp34_*tmp56_)/tmp57_;
  mCompDer[0][8] = (tmp38_*tmp56_)/tmp57_;
  mCompDer[0][9] = (tmp2_*tmp56_)/tmp57_;
  mCompDer[0][10] = 0;
  mCompDer[0][11] = 0;
  mCompDer[0][12] = 0;
  mCompDer[0][13] = 0;
  mCompDer[0][14] = 0;
  mCompDer[0][15] = ((tmp45_)*tmp2_*tmp56_)/tmp57_;
  mCompDer[0][16] = (mLocXIm*(tmp51_)*tmp56_)/tmp57_;
  mCompDer[0][17] = -(((tmp81_*tmp5_*(tmp11_)+tmp59_*(tmp17_))*(tmp74_)-(tmp80_)*((-(tmp7_)*tmp13_+tmp81_*tmp14_*tmp15_)*(tmp11_)+(tmp81_*tmp13_+tmp63_)*(tmp17_)))/tmp84_);
  mCompDer[0][18] = -(((tmp82_*tmp7_*(tmp11_)+tmp82_*tmp6_*(tmp17_)+tmp5_*(tmp19_))*(tmp74_)-(tmp80_)*(tmp83_*tmp7_*tmp15_*(tmp11_)+tmp83_*tmp6_*tmp15_*(tmp17_)+tmp82_*tmp15_*(tmp19_)))/tmp84_);
  mCompDer[0][19] = -(-((tmp80_)*((tmp85_*tmp60_+tmp86_*tmp62_)*(tmp11_)+(tmp85_*tmp7_+tmp86_*tmp67_)*(tmp17_)+tmp86_*tmp5_*(tmp19_)))/tmp84_);
  mCompDer[0][20] = -((tmp58_*tmp59_*(tmp74_)-(tmp80_)*tmp58_*(tmp64_))/tmp84_);
  mCompDer[0][21] = -((tmp58_*tmp76_*(tmp74_)-(tmp80_)*tmp58_*(tmp69_))/tmp84_);
  mCompDer[0][22] = -((tmp82_*(tmp74_)-(tmp80_)*tmp58_*tmp72_)/tmp84_);
}


void cEqAppuiXDCBrown::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cEqAppuiXDCBrown Has no Der Sec");
}

void cEqAppuiXDCBrown::SetDCBrown_State_0_0(double aVal){ mLocDCBrown_State_0_0 = aVal;}
void cEqAppuiXDCBrown::SetXIm(double aVal){ mLocXIm = aVal;}
void cEqAppuiXDCBrown::SetXTer(double aVal){ mLocXTer = aVal;}
void cEqAppuiXDCBrown::SetYIm(double aVal){ mLocYIm = aVal;}
void cEqAppuiXDCBrown::SetYTer(double aVal){ mLocYTer = aVal;}
void cEqAppuiXDCBrown::SetZTer(double aVal){ mLocZTer = aVal;}



double * cEqAppuiXDCBrown::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "DCBrown_State_0_0") return & mLocDCBrown_State_0_0;
   if (aName == "XIm") return & mLocXIm;
   if (aName == "XTer") return & mLocXTer;
   if (aName == "YIm") return & mLocYIm;
   if (aName == "YTer") return & mLocYTer;
   if (aName == "ZTer") return & mLocZTer;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cEqAppuiXDCBrown::mTheAuto("cEqAppuiXDCBrown",cEqAppuiXDCBrown::Alloc);


cElCompiledFonc *  cEqAppuiXDCBrown::Alloc()
{  return new cEqAppuiXDCBrown();
}


