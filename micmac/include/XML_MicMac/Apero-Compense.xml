<!--
    Apero   /home/marc/MMM/culture3d/include/XML_MicMac/Apero-Compense.xml DirectoryChantier=/home/marc/TMP/Mini-Cuxha/ "+SetIm=IMG_[0-9]{4}.jpg"  +AeroIn=-RTL-Bascule  +AeroOut=-RTL-Compens  +WithGCP=true +FileGCP-Gr=RTL.xml +FileGCP-Im=MesureFinale-S2D.xml +GrIncGr=0.1 +GrIncIm=0.5 +NbLiais=100
    Innovation
-->

<Global >
   <ParamApero>

       <DicoLoc>
           <Symb>  AeroIn=XXXXXX </Symb>
           <Symb>  AeroOut=XXXXXX </Symb>
           <Symb>  PatterIm0=XXXXXX </Symb>
           <Symb>  SetIm=XXXXXX </Symb>

           <Symb>  LibParamInterne=eAllParamFiges  </Symb>
           <Symb>  SigmaTieP=1  </Symb>
           <Symb>  FactMaxRes=5  </Symb>


           <eSymb>  MaxResTieP=* ${SigmaTieP} ${FactMaxRes}  </eSymb>

           <Symb>  SauvAutom="" </Symb>
           <Symb>  DoSauvAutom=true    </Symb>

           <Symb>  PropDiagU=1.0  </Symb>


           <Symb>  Ext=dat </Symb>


           <Symb>  CalibIn=${AeroIn} </Symb>
           <Symb>  NbLiais=100 </Symb>

           <Symb>  WithGCP=false </Symb>
           <Symb>  FileGCP-Gr=XXXX </Symb>
           <Symb>  FileGCP-Im=XXXX </Symb>
           <Symb>  GrIncGr=XXXX </Symb>
           <Symb>  GrIncIm=XXXX </Symb>

           <Symb>  WithCenter=false </Symb>
           <Symb>  BDDC=XXXX </Symb>
           <Symb>  SigmGPS=XXXX </Symb>
           <Symb>  SigmGPSAlti=XXXX </Symb>
           <Symb>  PatternGPS=.* </Symb>

           <Symb>  CPI=false </Symb>
           <Symb>  CPIInput=false </Symb>
           <Symb>  AllFree=false </Symb>
           <Symb>  FocFree=false </Symb>
           <Symb>  PPFree=false </Symb>
           <Symb>  AffineFree=false </Symb>
           <Symb>  LibCD=false </Symb>
           <Symb>  LibDec=false </Symb>
         

 	   <Symb>  PoseFigee=false </Symb>

 	   <Symb>  WithPatPoseFigee=false </Symb>
 	   <Symb>  PatPoseFigee=XXXX </Symb>

 	   <Symb>  WithPatCentreFigee=false </Symb>
 	   <Symb>  PatCentreFigee=XXXX </Symb>

 	   <Symb>  WithPatOrientFigee=false </Symb>
 	   <Symb>  PatOrientFigee=XXXX </Symb>


           <eSymb>  NotCPI=! ${CPI} </eSymb>
           <eSymb>  DetailAppuis=0 </eSymb>

           <Symb>  Viscos=1 </Symb>
           <eSymb> TetaLVM=/   0.1 ${Viscos} </eSymb>
           <eSymb> CentreLVM=/ 1.0  ${Viscos}</eSymb>
           <Symb>  UseSLM=true </Symb>
			<Symb>  IntrLVM=0.1 </Symb>
			<Symb>  AddViscInt=false </Symb>

           <Symb>  NbMinIterFin=4 </Symb>
           <Symb>  NbMaxIterFin=4 </Symb>
           <Symb>  SeuilEvolIterFin=1e50 </Symb>

            <!-- By backward compatibility WithLA instead of WithLA0 -->
           <Symb>  WithIncLA=false </Symb>
           <Symb>  IncLaX=0 </Symb>
           <Symb>  IncLaY=0 </Symb>
           <Symb>  IncLaZ=0 </Symb>

           <Symb>  WithLA=false </Symb>
           <Symb>  LaX=0 </Symb>
           <Symb>  LaY=0 </Symb>
           <Symb>  LaZ=0 </Symb>

           <Symb>  WithMultiLA=false </Symb>


           <Symb>  WithLA1=false </Symb>
           <Symb>  PatImLA1=XXXXXX </Symb>
           <Symb>  La1X=0 </Symb>
           <Symb>  La1Y=0 </Symb>
           <Symb>  La1Z=0 </Symb>

           <Symb>  WithLA2=false </Symb>
           <Symb>  PatImLA2=XXXXXX </Symb>
           <Symb>  La2X=0 </Symb>
           <Symb>  La2Y=0 </Symb>
           <Symb>  La2Z=0 </Symb>

           <Symb>  WithLA3=false </Symb>
           <Symb>  PatImLA3=XXXXXX </Symb>
           <Symb>  La3X=0 </Symb>
           <Symb>  La3Y=0 </Symb>
           <Symb>  La3Z=0 </Symb>

           <Symb>  WithLA4=false </Symb>
           <Symb>  PatImLA4=XXXXXX </Symb>
           <Symb>  La4X=0 </Symb>
           <Symb>  La4Y=0 </Symb>
           <Symb>  La4Z=0 </Symb>





           <Symb>  HasModeleAdd=false  </Symb>
           <Symb>  ModeleAdditionnel=XXXXX  </Symb>

        
           <Symb>   DegGen=0  </Symb>
           <eSymb>  DoPolyn1=  Or  ${AffineFree} SupEq ${DegGen} 1 </eSymb>
           <eSymb>  DoPolyn2=  SupEq ${DegGen} 2 </eSymb>
           <eSymb>  DoPolyn3=  SupEq ${DegGen} 3 </eSymb>


           <Symb> DRMax=0 </Symb>
           <eSymb> DR1Free= SupEq ${DRMax} 1 </eSymb>
           <eSymb> DR2Free= SupEq ${DRMax} 2 </eSymb>
           <eSymb> DR3Free= SupEq ${DRMax} 3 </eSymb>
           <eSymb> DR4Free= SupEq ${DRMax} 4 </eSymb>
           <eSymb> DR5Free= SupEq ${DRMax} 5 </eSymb>
           <eSymb> DR6Free= SupEq ${DRMax} 6 </eSymb>
           <eSymb> DR7Free= SupEq ${DRMax} 7 </eSymb>
           <eSymb> DR8Free= SupEq ${DRMax} 8 </eSymb>
           <eSymb> DR9Free= SupEq ${DRMax}  9 </eSymb>
           <eSymb> DR10Free=SupEq ${DRMax} 10 </eSymb>

           <Symb> AcceptGB=true </Symb>
           <Symb> PdsGBRot=0.002</Symb>
           <Symb> PdsGBId=0.0</Symb>
           <Symb> PdsGBIter=1e-6</Symb>
           <Symb> SetHom=""  </Symb>

           <Symb> WithBloc=false </Symb>
           <Symb> NameInputBloc=XXX </Symb>
           <Symb> NameOutputBloc=XXX </Symb>

           <Symb> WithBloc_DistGlob=false  </Symb>
           <Symb> PdsBlocTr0_DistGlob=XXXX  </Symb>
           <Symb> PdsBlocTrFin_DistGlob=XXXX  </Symb>
           
           <Symb> WithBloc_TimeRel=false  </Symb>
           <Symb> PdsBlocTr0_TimeRel=XXX  </Symb>
           <Symb> PdsBlocRot0_TimeRel=XXX  </Symb>
           <Symb> PdsBlocTrFin_TimeRel=XXX  </Symb>
           <Symb> PdsBlocRotFin_TimeRel=XXX  </Symb>

           <Symb> WithBloc_Glob=false  </Symb>
           <Symb> PdsBlocTr0_Glob=XXX  </Symb>
           <Symb> PdsBlocRot0_Glob=XXX  </Symb>
           <Symb> PdsBlocTrFin_Glob=XXX  </Symb>
           <Symb> PdsBlocRotFin_Glob=XXX  </Symb>
           <Symb> WBG_Sigma=false  </Symb>
           <Symb> WBG_Stricte=false  </Symb>
           <Symb> WBG_Ang=xxxxx  </Symb>
           <Symb> WBG_Center=xxxxx  </Symb>

           <eSymb> With_BlockGlobalBundle=Or ${WithBloc_Glob} ${WithBloc_DistGlob}  </eSymb>
          
           <Symb> UseHom=true  </Symb>
 
	   <Symb> ModeResolSysLin=eSysL2BlocSym </Symb> 
	   <Symb> ExportSensib=false </Symb> 
	   <Symb> DirExportSensib=XXXXX </Symb> 
	   <Symb> NormaliseEqSc=true </Symb> 
	   <Symb> NormaliseEqTr=true </Symb> 


           <Symb>  With-ContrCamConseq=false </Symb>
           <Symb>  Key-CCC=XXX </Symb>
           <Symb>  Sigma-CCC=1.0 </Symb>

           <Symb>  UseRegulDist=false </Symb>
           <Symb>  RegDist0=0.0 </Symb>
           <Symb>  RegDist1=0.0 </Symb>
           <Symb>  RegDist2=0.0 </Symb>
           <Symb>  RegDistNbCase=0.0 </Symb>
           <Symb>  RegDistSeuil=0.0 </Symb>
           <Symb>  RapTxt=""    </Symb>

           <Symb>  DoUseExportImageResidu=false    </Symb>
           <Symb>  UEIR_ByPair=30    </Symb>
           <Symb>  UEIR_ByPose=50    </Symb>
           <Symb>  UEIR_ByCam=100    </Symb>
           <Symb>  UEIR_NbMesByCase=10 </Symb>

           <Symb>  UEIR_GeneratePly=true </Symb>
           <Symb>  UEIR_GenerateOrtho=-1 </Symb>
           <!-- <eSymb>  LastIterSupl=Or ${DoUseExportImageResidu} ${ExportSensib}  </eSymb> -->
           <eSymb>  LastIterSupl=false  </eSymb>

           <!--      Ponderation pour le "GPS" (observations  sur le centre de PDV) -->
           <Symb> ModePondCentre=ePondL2 </Symb>
           <Symb> EcartMaxPlaniPondCentre=1e20 </Symb>
           <Symb> EcartMaxAltiPondCentre=1e20 </Symb>
           <Symb> SigmaPlaniPondCentre=1e20 </Symb>
           <Symb> SigmaAltiPondCentre=1e20 </Symb>

           <Symb> WithRapOnZ=false </Symb>
           <Symb> ZRapOnZ=0 </Symb>
           <Symb> SigmaRapOnZ=1.0 </Symb>
           <Symb> KeyGrpRapOnZ=XXXX </Symb>
           <Symb> DSElimB=0 </Symb>
           <Symb> StrDebugVecElimTieP="" </Symb>
           <Symb> RatioMaxDistCS=30.0 </Symb>

       </DicoLoc>




       <SectionBDD_Observation>
             <#WHEN  VTEST=${With-ContrCamConseq}>
                 <DeclareObsCalConseq>
                     <PatternSel > .* </PatternSel>
                     <!-- Meme structure que bloc, renvoit Time + Equiv -->
                     <Key> ${Key-CCC} </Key>
                     <KeyJump> NKS-Set-Empty </KeyJump> 
                     <AddFreeRot> false </AddFreeRot>
                 </DeclareObsCalConseq>
             </#WHEN>

             <#WHEN  VTEST=${UseHom}>
                 <BDD_PtsLiaisons>
                     <Id>    Id_Pastis_Hom  </Id>
                     <KeySet> NKS-Set-Homol@${SetHom}@${Ext}  </KeySet>
                     <KeyAssoc>  NKS-Assoc-CplIm2Hom@${SetHom}@${Ext}   </KeyAssoc>
                </BDD_PtsLiaisons>
             </#WHEN>
               <!-- MPD mis ici en dur pour tester les nouveau points multiples -->
             <BDD_NewPtMul>
                  <Id> Id_Pastis_Hom </Id>
                  <SH> ${SetHom}  </SH>
                  <BinaryMode >  false  </BinaryMode>
                  <SupressStdHom >  true   </SupressStdHom>
             </BDD_NewPtMul>


            <BDD_Orient>
                  <Id>  Or-Init   </Id>
                  <KeySet>  NKS-Set-Orient@${AeroIn} </KeySet>
                  <KeyAssoc>  NKS-Assoc-Im2Orient@${AeroIn} </KeyAssoc>
             </BDD_Orient>


             <#WHEN  VTEST=${WithGCP}>
                  <BDD_ObsAppuisFlottant >
                          <Id> Id-Appui </Id>
                          <KeySetOrPat>  ${FileGCP-Im} </KeySetOrPat>
                   </BDD_ObsAppuisFlottant>
             </#WHEN>

             <#WHEN  VTEST=${WithCenter}>
                   <BDD_Centre>
                          <Id>  Id-Centre   </Id>
                          <KeySet>    NKS-Set-Orient@-${BDDC} </KeySet>
                          <KeyAssoc>  NKS-Assoc-Im2Orient@-${BDDC} </KeyAssoc>
                    </BDD_Centre>
             </#WHEN>

               
       </SectionBDD_Observation>

       <SectionInconnues>
             <#WHEN VTEST=${WithLA}>
                  <GpsOffset>
                       <ValInit> ${LaX} ${LaY} ${LaZ} </ValInit>
                       <Id>  TheIdLA </Id>
                       <#WHEN VTEST=${WithIncLA}> <Inc> ${IncLaX}  ${IncLaY}  ${IncLaZ} </Inc> </#WHEN>
                   </GpsOffset>
             </#WHEN>
             <#WHEN VTEST=${WithLA1}>
                  <GpsOffset>
                       <ValInit> ${La1X} ${La1Y} ${La1Z} </ValInit>
                       <Id>  TheIdLA1 </Id>
                       <#WHEN VTEST=${WithIncLA}> <Inc> ${IncLaX}  ${IncLaY}  ${IncLaZ} </Inc> </#WHEN>
                   </GpsOffset>
             </#WHEN>
             <#WHEN VTEST=${WithLA2}>
                  <GpsOffset>
                       <ValInit> ${La2X} ${La2Y} ${La2Z} </ValInit>
                       <Id>  TheIdLA2 </Id>
                       <#WHEN VTEST=${WithIncLA}> <Inc> ${IncLaX}  ${IncLaY}  ${IncLaZ} </Inc> </#WHEN>
                   </GpsOffset>
             </#WHEN>
             <#WHEN VTEST=${WithLA3}>
                  <GpsOffset>
                       <ValInit> ${La3X} ${La3Y} ${La3Z} </ValInit>
                       <Id>  TheIdLA3 </Id>
                       <#WHEN VTEST=${WithIncLA}> <Inc> ${IncLaX}  ${IncLaY}  ${IncLaZ} </Inc> </#WHEN>
                   </GpsOffset>
             </#WHEN>
             <#WHEN VTEST=${WithLA4}>
                  <GpsOffset>
                       <ValInit> ${La4X} ${La4Y} ${La4Z} </ValInit>
                       <Id>  TheIdLA4 </Id>
                       <#WHEN VTEST=${WithIncLA}> <Inc> ${IncLaX}  ${IncLaY}  ${IncLaZ} </Inc> </#WHEN>
                   </GpsOffset>
             </#WHEN>



             <CalibrationCameraInc>
                <Name> GenerateKC-Others   </Name>
                <CalValueInit>
                         <CalFromFileExtern>
                              <NameFile>   ####  </NameFile>
                              <#IF  VTEST=${CPIInput}>
                                   <NameTag> Interne</NameTag>
                                   <NameTag>    CalibrationInternConique </NameTag>
                              </#IF>
                              <AutorizeNonExisting > false </AutorizeNonExisting>
                         </CalFromFileExtern>
                </CalValueInit>
                <#WHEN VTEST=${HasModeleAdd}>
                        <DistortionAddInc>
                               <ModUnif>
                                     <TypeModele> ${ModeleAdditionnel}  </TypeModele>
                               </ModUnif>
                        </DistortionAddInc>
                 </#WHEN>

                <CalibPerPose>
                       <#IF VTEST=${CPI}>
                           <KeyPose2Cal> NKS-Assoc-Id                       </KeyPose2Cal>
                           <KeyPose2Cal> NKS-Assoc-FromFocMm@TheKeyCalib_@ </KeyPose2Cal>
                       </#IF>
                       <#IF VTEST=${CPIInput}>
                           <KeyInitFromPose> NKS-Assoc-Im2Orient@${AeroIn} </KeyInitFromPose>
                           <KeyInitFromPose>  NKS-Assoc-FromFocMm@Ori${CalibIn}/AutoCal@.xml  </KeyInitFromPose>
                       </#IF>
                </CalibPerPose>
                <RayIsRelatifDiag  > true </RayIsRelatifDiag>
                <RayApplyOnlyFE > true </RayApplyOnlyFE>
                <PropDiagUtile> ${PropDiagU} </PropDiagUtile>
             </CalibrationCameraInc>

             <PoseCameraInc>
                   <PatternName>    ${SetIm} </PatternName>  <!-- Si LA c'est en fait PatImLA0 -->
                   <CalcNameCalib>  GenerateKC-Others </CalcNameCalib>
                   <#WHEN  VTEST=${WithCenter}>
                         <IdBDCentre> Id-Centre </IdBDCentre>
                   </#WHEN>
                   <#WHEN VTEST=${WithLA}>
                         <IdOffsetGPS>  TheIdLA </IdOffsetGPS>
                   </#WHEN>
                   
                   <PosValueInit>
                       <PosFromBDOrient> Or-Init </PosFromBDOrient>
                   </PosValueInit>
             </PoseCameraInc>

             <#WHEN VTEST=${WithLA1}>
                   <PoseCameraInc>
                         <PatternName>    ${PatImLA1} </PatternName>  
                         <CalcNameCalib>  GenerateKC-Others </CalcNameCalib>
                         <IdBDCentre> Id-Centre </IdBDCentre>
                         <IdOffsetGPS>  TheIdLA1 </IdOffsetGPS>
                         <PosValueInit>
                             <PosFromBDOrient> Or-Init </PosFromBDOrient>
                         </PosValueInit>
                   </PoseCameraInc>
             </#WHEN>
             <#WHEN VTEST=${WithLA2}>
                   <PoseCameraInc>
                         <PatternName>    ${PatImLA2} </PatternName>  
                         <CalcNameCalib>  GenerateKC-Others </CalcNameCalib>
                         <IdBDCentre> Id-Centre </IdBDCentre>
                         <IdOffsetGPS>  TheIdLA2 </IdOffsetGPS>
                         <PosValueInit>
                             <PosFromBDOrient> Or-Init </PosFromBDOrient>
                         </PosValueInit>
                   </PoseCameraInc>
             </#WHEN>
             <#WHEN VTEST=${WithLA3}>
                   <PoseCameraInc>
                         <PatternName>    ${PatImLA3} </PatternName>  
                         <CalcNameCalib>  GenerateKC-Others </CalcNameCalib>
                         <IdBDCentre> Id-Centre </IdBDCentre>
                         <IdOffsetGPS>  TheIdLA3 </IdOffsetGPS>
                         <PosValueInit>
                             <PosFromBDOrient> Or-Init </PosFromBDOrient>
                         </PosValueInit>
                   </PoseCameraInc>
             </#WHEN>
             <#WHEN VTEST=${WithLA4}>
                   <PoseCameraInc>
                         <PatternName>    ${PatImLA4} </PatternName>  
                         <CalcNameCalib>  GenerateKC-Others </CalcNameCalib>
                         <IdBDCentre> Id-Centre </IdBDCentre>
                         <IdOffsetGPS>  TheIdLA4 </IdOffsetGPS>
                         <PosValueInit>
                             <PosFromBDOrient> Or-Init </PosFromBDOrient>
                         </PosValueInit>
                   </PoseCameraInc>
             </#WHEN>



             <#WHEN  VTEST=${WithGCP}>
                <PointFlottantInc>
                     <Id> Id-Appui </Id>
                     <KeySetOrPat>  ${FileGCP-Gr} </KeySetOrPat>
                     <ModifInc>
                        <OneModifIPF>
                             <KeyName> .* </KeyName>
                             <Incertitude> ${GrIncGr} ${GrIncGr} ${GrIncGr}  </Incertitude>
                             <IsMult>  true </IsMult>
                        </OneModifIPF>
                     </ModifInc>
                </PointFlottantInc>
             </#WHEN>


             <#WHEN  VTEST=${AcceptGB}>
                 <CamGenInc>
                    <PatterName>   ${PatterIm0}  </PatterName>
                    <Orient>      ${AeroIn}  </Orient>
                    <ErrorWhenEmpytPat> false </ErrorWhenEmpytPat>
                    <ErrorWhenNoFileOrient> false </ErrorWhenNoFileOrient>
                 </CamGenInc>
             </#WHEN>


             <#WHEN  VTEST=${WithBloc}>
                 <BlockCamera>
                      <NameFile>  ${NameInputBloc}  </NameFile>
                      <Id> TheBlock </Id>
                      <UseForBundle>
                           <#WHEN  VTEST=${With_BlockGlobalBundle}>
                               <BlockGlobalBundle >   
                                   <#WHEN  VTEST=${WBG_Sigma}>
                                       <SigmaV0>
                                          <Ang> ${WBG_Ang}  </Ang>
                                          <Center> ${WBG_Center}  </Center>
                                       </SigmaV0>
                                   </#WHEN>
                                   <V0Stricte> ${WBG_Stricte} </V0Stricte>
                               </BlockGlobalBundle>
                           </#WHEN>
                           <RelTimeBundle >  ${WithBloc_TimeRel}  </RelTimeBundle>
                           <GlobDistTimeBundle >  ${WithBloc_DistGlob}  </GlobDistTimeBundle>
                      </UseForBundle>
                 </BlockCamera>
             </#WHEN>
            

        </SectionInconnues>


        <SectionChantier>
             <RatioMaxDistCS> ${RatioMaxDistCS} </RatioMaxDistCS>
             <DebugVecElimTieP> ${StrDebugVecElimTieP} </DebugVecElimTieP>
             <DoStatElimBundle> ${DSElimB} </DoStatElimBundle>
             <#WHEN VTEST=${DoUseExportImageResidu}>
                   <UseExportImageResidu>
                        <SzByPair> ${UEIR_ByPair} </SzByPair>
                        <SzByPose> ${UEIR_ByPose} </SzByPose>
                        <SzByCam > ${UEIR_ByCam} </SzByCam>
                        <NbMesByCase > ${UEIR_NbMesByCase} </NbMesByCase>
                        <GeneratePly > ${UEIR_GeneratePly} </GeneratePly>
                        <SzOrtho > ${UEIR_GenerateOrtho} </SzOrtho>
                        <AeroExport> ${AeroOut}    </AeroExport>
                   </UseExportImageResidu>
             </#WHEN>
             <UseRegulDist> ${UseRegulDist} </UseRegulDist>
	     <DirectoryChantier> XXXX </DirectoryChantier>
             <GenereErreurOnContraineCam> false </GenereErreurOnContraineCam>
             <SauvAutom>  ${SauvAutom} </SauvAutom>
             <SauvAutomBasic>  ${DoSauvAutom} </SauvAutomBasic>
        </SectionChantier>

        <SectionSolveur>
	      <ModeResolution> ${ModeResolSysLin} </ModeResolution> 
              <NormaliseEqSc > ${NormaliseEqSc} </NormaliseEqSc>
              <NormaliseEqTr > ${NormaliseEqTr} </NormaliseEqTr>
              <#WHEN VTEST=${UseSLM}>
                 <SLMGlob> 
                    <RappelOnAngles>
                         <ParamF >
                             <PatternNameApply> .* </PatternNameApply>
                             <Incertitude> ${TetaLVM} </Incertitude>
                             <OnCur> true </OnCur>  
                          </ParamF>
                         <TetaApply> 0 </TetaApply>
                         <TetaApply> 1 </TetaApply>
                         <TetaApply> 2 </TetaApply>
                    </RappelOnAngles>
                    <RappelOnCentres>
                         <ParamF> 
                             <PatternNameApply> .* </PatternNameApply>
                             <Incertitude> ${CentreLVM} </Incertitude>
                             <OnCur> true </OnCur>  
                         </ParamF>
                         <OnlyWhenNoCentreInit> true</OnlyWhenNoCentreInit>
                    </RappelOnCentres>
		<#WHEN VTEST=${AddViscInt}>
  			<RappelOnIntrinseque>
                                <ParamF> 
                                       <PatternNameApply> .* </PatternNameApply>
                                       <Incertitude> ${IntrLVM} </Incertitude>
                                       <OnCur> true </OnCur>  
                                </ParamF>
                          </RappelOnIntrinseque>
		</#WHEN>
		                 </SLMGlob>
              </#WHEN>


             <#WHEN VTEST=${UseRegulDist}>
                  <RegDistGlob>
                        <Pds0> ${RegDist0} </Pds0>  <!-- Valeur force a Id -->
                        <Pds1> ${RegDist1} </Pds1>  <!-- Grad force a 1 -->
                        <Pds2> ${RegDist2} </Pds2>  <!-- Derive seconde forcee a 0 -->
                        <NbCase> ${RegDistNbCase}   </NbCase>
                        <SeuilNbPtsByCase > ${RegDistSeuil} </SeuilNbPtsByCase>
                  </RegDistGlob>

             </#WHEN>


        </SectionSolveur>



	<SectionCompensation>
	      <EtapeCompensation>
                   <IterationsCompensation>
                       <SectionContraintes>
                          <ContraintesCamerasInc>
                              <Val> eAllParamFiges  </Val>
                          </ContraintesCamerasInc>
		          
 			<#WHEN VTEST=${PoseFigee}>
			     <ContraintesPoses>
			         <NamePose>   .* </NamePose>
  			         <ByPattern>  true </ByPattern>
			         <Val>      ePoseFigee   </Val>
		              </ContraintesPoses>	
			</#WHEN>
 			<#WHEN VTEST=${WithPatPoseFigee}>
			     <ContraintesPoses>
			         <NamePose>   ${PatPoseFigee} </NamePose>
  			         <ByPattern>  true </ByPattern>
			         <Val>      ePoseFigee   </Val>
		              </ContraintesPoses>	
			</#WHEN>
 			<#WHEN VTEST=${WithPatCentreFigee}>
			     <ContraintesPoses>
			         <NamePose>   ${PatCentreFigee} </NamePose>
  			         <ByPattern>  true </ByPattern>
			         <Val>      eCentreFige   </Val>
		              </ContraintesPoses>	
			</#WHEN>
 			<#WHEN VTEST=${WithPatOrientFigee}>
			     <ContraintesPoses>
			         <NamePose>   ${PatOrientFigee} </NamePose>
  			         <ByPattern>  true </ByPattern>
			         <Val>      eAnglesFiges   </Val>
		              </ContraintesPoses>	
			</#WHEN>

<!--
 	   <Symb>  WithPatCentreFigee=false </Symb>
 	   <Symb>  PatCentreFigee=XXXX </Symb>

 	   <Symb>  WithPatOrientFigee=false </Symb>
 	   <Symb>  PatOrientFigee=XXXX </Symb>
-->
                       </SectionContraintes>
			<#WHEN VTEST=${PoseFigee}>
			     <Messages>  External orientations of the cameras are frozen </Messages>
		        </#WHEN>


                   </IterationsCompensation>

                   <#WHEN VTEST=${FocFree}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberteFocale_1  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                            <Messages>  LIB  Focale </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>

                   <#WHEN VTEST=${PPFree}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLib_PP_CD_10  </Val>
                               </ContraintesCamerasInc>
                                 <#WHEN VTEST=${LibCD}>
                                         <ContraintesCamerasInc>
                                              <Val> eLib_PP_CD_Lies      </Val>
                                              <TolContrainte>  1e-5 </TolContrainte>
                                         </ContraintesCamerasInc>
                                   </#WHEN>
                            </SectionContraintes>
                             <Messages>  LIB  PP </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>


                   <#WHEN VTEST=${AffineFree}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_Phgr_Std_Aff  </Val>
                                   <Val> eLiberteParamDeg_1  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  Affine </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${LibDec}>
                         <IterationsCompensation>
                              <SectionContraintes>
                                    <ContraintesCamerasInc>
                                        <Val> eLiberte_Dec1      </Val>
                                        <Val> eLiberte_Phgr_Std_Dec      </Val>
                                    </ContraintesCamerasInc>
                              </SectionContraintes>
                              <Messages>  LIB  Decentrik </Messages>
                         </IterationsCompensation>
                        <IterationsCompensation> </IterationsCompensation>
                    </#WHEN>

                   <#WHEN VTEST=${DR1Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR1  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR1 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>

                   <#WHEN VTEST=${DR2Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR2  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR2 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>

                   <#WHEN VTEST=${DR3Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR3  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR3 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   
                   <#WHEN VTEST=${LibCD}>
                         <IterationsCompensation>
                              <SectionContraintes>
                                    <ContraintesCamerasInc>
                                        <#IF VTEST=${PPFree}>
                                             <Val>  eLib_PP_CD_11    </Val>
                                             <Val>  eLib_PP_CD_01    </Val>
                                        </#IF>
                                    </ContraintesCamerasInc>
                              </SectionContraintes>
                              <Messages>  LIB  CD </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   
                    <#WHEN VTEST=${DR4Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR4  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR4 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${DR5Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR5  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR5 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${DR6Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR6  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR6 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${DR7Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR7  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR7 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${DR8Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR8  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR8 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${DR9Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR9  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR9 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>
                   <#WHEN VTEST=${DR10Free}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eLiberte_DR10  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                             <Messages>  LIB  DR10 </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>


                   <#WHEN VTEST=${DoPolyn2}>
                         <IterationsCompensation>
                              <SectionContraintes>
                                    <ContraintesCamerasInc>
                                        <Val> eLiberteParamDeg_2      </Val>
                                    </ContraintesCamerasInc>
                              </SectionContraintes>
                              <Messages>  LIB  Polyn2 </Messages>
                         </IterationsCompensation>
                    </#WHEN>
              
              
              

                   <#WHEN VTEST=${DoPolyn3}>
                         <IterationsCompensation>
                              <SectionContraintes>
                                    <ContraintesCamerasInc>
                                        <Val> eLiberteParamDeg_3      </Val>
                                    </ContraintesCamerasInc>
                              </SectionContraintes>
                              <Messages>  LIB  Polyn3 </Messages>
                         </IterationsCompensation>
                    </#WHEN>

                   <#WHEN VTEST=${AllFree}>
                         <IterationsCompensation>
                            <SectionContraintes>
                               <ContraintesCamerasInc>
                                   <Val> eAllParamLibres  </Val>
                               </ContraintesCamerasInc>
                            </SectionContraintes>
                            <Messages>  LIB  All </Messages>
                         </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                         <IterationsCompensation> </IterationsCompensation>
                   </#WHEN>

                   <IterationsCompensation>
                        <CtrlTimeCompens>
                              <NbMin > ${NbMinIterFin} </NbMin>
                              <NbMax>  ${NbMaxIterFin}       </NbMax>
                              <SeuilEvolMoy > ${SeuilEvolIterFin}  </SeuilEvolMoy>
                        </CtrlTimeCompens>
                    </IterationsCompensation>

                   <!-- Cette etape est rajoute pour que la derniere iteration soit
                        predictible
                    -->
                    <#WHEN   VTEST=${LastIterSupl}>
                         <IterationsCompensation>
                         </IterationsCompensation>
                    </#WHEN>

		    <SectionObservations>
                          <#WHEN  VTEST=${UseHom}>
                              <ObsLiaisons>
                                  <NameRef> Id_Pastis_Hom </NameRef>
                                  <Pond>
                                     <EcartMesureIndiv>  1.0 </EcartMesureIndiv>
                                     <Show> eNSM_Paquet     </Show>
                                     <NbMax>   ${NbLiais}    </NbMax>
				     <ModePonderation>  eL1Secured </ModePonderation>
				     <SigmaPond> ${SigmaTieP} </SigmaPond>
				     <EcartMax>  ${MaxResTieP} </EcartMax>
                                  </Pond>

                                   <#WHEN  VTEST=${WithRapOnZ}>
				       <RappelOnZ>
                                             <KeyGrpApply > ${KeyGrpRapOnZ} </KeyGrpApply>
                                             <Z > ${ZRapOnZ}</Z>
                                             <IncC > ${SigmaRapOnZ} </IncC>
                                             <IncE > ${SigmaRapOnZ} </IncE>
					     <!--
                                                  <SeuilR Nb="?" Type="double"> </SeuilR> 
				              -->
                                       </RappelOnZ>
                                   </#WHEN>

                              </ObsLiaisons>
		              <TxtRapDetaille>
		                    <NameFile> ${RapTxt}</NameFile>
		              </TxtRapDetaille>
                          </#WHEN>

                          <#WHEN  VTEST=${WithGCP}>
                               <ObsAppuisFlottant>
                                      <NameRef> Id-Appui </NameRef>
                                      <PondIm>
                                          <EcartMesureIndiv>  ${GrIncIm} </EcartMesureIndiv>
                                          <Show> eNSM_Paquet     </Show>
                                          <ModePonderation>  eL1Secured </ModePonderation>
                                          <SigmaPond> 1.0 </SigmaPond>
                                      </PondIm>

                                      <PtsShowDet>  .* </PtsShowDet>
                                      <DetShow3D >   ${DetailAppuis} </DetShow3D>
                                      <ShowMax> true </ShowMax>
                                      <ShowSom>  true</ShowSom>
                                </ObsAppuisFlottant>
                          </#WHEN>

                          <#WHEN  VTEST=${WithCenter}>

                               <ObsCentrePDV>
                                   <PatternApply> ${PatternGPS} </PatternApply>
                                   <Pond>
                                          <EcartMesureIndiv>  ${SigmGPS}  </EcartMesureIndiv>
                                          <Show> eNSM_Indiv     </Show>
                                          <ModePonderation> ${ModePondCentre} </ModePonderation>
                                          <EcartMax>  ${EcartMaxPlaniPondCentre} </EcartMax>
                                          <SigmaPond>  ${SigmaPlaniPondCentre}   </SigmaPond>
                                   </Pond>
                                   <PondAlti>
                                          <EcartMesureIndiv>  ${SigmGPSAlti}  </EcartMesureIndiv>
                                          <Show> eNSM_Indiv     </Show>
                                          <ModePonderation> ${ModePondCentre} </ModePonderation>
                                          <EcartMax>  ${EcartMaxAltiPondCentre} </EcartMax>
                                          <SigmaPond>  ${SigmaAltiPondCentre}   </SigmaPond>
                                   </PondAlti>
                              </ObsCentrePDV>
                          </#WHEN>
                          <#WHEN VTEST=${AcceptGB}> <!-- Generik Bundle -->
                              <#WHEN VTEST=${WithPatPoseFigee}> <!-- Generik Bundle -->
                                 <ContrCamGenInc>
                                      <PatternApply> ${PatPoseFigee}  </PatternApply>
                                      <PdsAttachToId>   1     </PdsAttachToId>
                                 </ContrCamGenInc>
                              </#WHEN>
                              <ContrCamGenInc>
                                   <PatternApply> .*  </PatternApply>
                                   <PdsAttachToId>   ${PdsGBId}     </PdsAttachToId>
                                   <PdsAttachToLast> ${PdsGBIter}    </PdsAttachToLast>
                                   <PdsAttachRGLob>  ${PdsGBRot}    </PdsAttachRGLob>
                              </ContrCamGenInc>
                          </#WHEN>

                          <#WHEN VTEST=${WithBloc}>
                                <ObsBlockCamRig>
                                    <Id> TheBlock </Id>
                                    <Show> false </Show>
                                    <#WHEN VTEST=${WithBloc_Glob}>
                                        <GlobalPond> 
                                           <PondOnTr >  ${PdsBlocTr0_Glob} </PondOnTr>
                                           <PondOnRot>  ${PdsBlocRot0_Glob} </PondOnRot>
                                           <PondOnTrFinal > ${PdsBlocTrFin_Glob}  </PondOnTrFinal>
                                           <PondOnRotFinal> ${PdsBlocRotFin_Glob} </PondOnRotFinal>
                                       </GlobalPond>
                                    </#WHEN>
                                    <#WHEN VTEST=${WithBloc_TimeRel}>
                                        <RelTimePond> 
                                           <PondOnTr >  ${PdsBlocTr0_TimeRel} </PondOnTr>
                                           <PondOnRot>  ${PdsBlocRot0_TimeRel} </PondOnRot>
                                           <PondOnTrFinal > ${PdsBlocTrFin_TimeRel}  </PondOnTrFinal>
                                           <PondOnRotFinal> ${PdsBlocRotFin_TimeRel} </PondOnRotFinal>
                                        </RelTimePond>
                                    </#WHEN>
                                    <#WHEN VTEST=${WithBloc_DistGlob}>
                                        <GlobalDistPond> 
                                           <PondOnTr>      ${PdsBlocTr0_DistGlob}    </PondOnTr>
                                           <PondOnTrFinal> ${PdsBlocTrFin_DistGlob}  </PondOnTrFinal>
                                           <!-- PdsRot : Fake, unused values -->
                                           <PondOnRot>  1.0 </PondOnRot>
                                           <PondOnRotFinal> 1.0 </PondOnRotFinal>
                                        </GlobalDistPond>
                                    </#WHEN>
                                </ObsBlockCamRig>
                          </#WHEN>

                          <#WHEN  VTEST=${With-ContrCamConseq}>
                              <ContrCamConseq>
                                  <SigmaPix> ${Sigma-CCC} </SigmaPix>
                                  <NbGrid> 10 </NbGrid>
                              </ContrCamConseq>
                          </#WHEN>

		    </SectionObservations>

                    <SectionExport>
                            <ExportPose>
                                <PatternSel> (.*) </PatternSel>
                                <KeyAssoc> NKS-Assoc-Im2Orient@${AeroOut} </KeyAssoc>
                                <AddCalib>  true </AddCalib>
                                <NbVerif>  10 </NbVerif>
                                <TolWhenVerif> 1e-3 </TolWhenVerif>
                                <#WHEN VTEST=${NotCPI}>
                                    <FileExtern> NKS-Assoc-FromFocMm@Ori${AeroOut}/AutoCal@.xml </FileExtern>
                                    <FileExternIsKey> true </FileExternIsKey>
                                </#WHEN>
                            </ExportPose>
                            <#WHEN VTEST=${NotCPI}>
                                 <ExportCalib>
                                     <KeyAssoc>  NKS-Assoc-FromKeyCal@Ori${AeroOut}/AutoCal@.xml </KeyAssoc>
                                     <KeyIsName> false </KeyIsName>
                                </ExportCalib>
                            </#WHEN>
                            <#WHEN  VTEST=${WithBloc}>
                                <ExportBlockCamera>
                                    <Id> TheBlock</Id>
                                    <NameFile> ${NameOutputBloc} </NameFile>
                                    <Estimate>
                                        <Id> TheBlock </Id>
                                        <Show> true   </Show>
                                    </Estimate>

                                </ExportBlockCamera>
                            </#WHEN>

                            <ExportResiduXml> Ori${AeroOut}/Residus.xml </ExportResiduXml>
                            <#WHEN  VTEST=${ExportSensib}>
                               <ExportSensibParamAero Nb="?">
                                     <Dir> ${DirExportSensib} </Dir>
                               </ExportSensibParamAero>
                            </#WHEN>	
                    </SectionExport>
	      </EtapeCompensation>
	</SectionCompensation>

   </ParamApero>
</Global>

