# file:        Makefile
# author:      Andrea Vedaldi
# description: Build SIFT++

NAME               := siftpp
VER                := 0.8.1
DIST                = $(NAME)-$(VER)
BINDIST             = $(DIST)-bin

# --------------------------------------------------------------------
#                                                       Error messages
# --------------------------------------------------------------------

err_no_arch  =
err_no_arch +=$(shell echo "** Unknown host architecture '$(UNAME)'. This identifier"   1>&2)
err_no_arch +=$(shell echo "** was obtained by running 'uname -sm'. Edit the Makefile " 1>&2)
err_no_arch +=$(shell echo "** to add the appropriate configuration."                   1>&2)
err_no_arch +=Configuration failed

# --------------------------------------------------------------------
#                                                                Flags
# --------------------------------------------------------------------
# Options:
# LOWE_STRICT - Be more similar to Lowe's version
# USEFASTMATH - Use faster approximated computations

CXX                ?= c++

CXXFLAGS           += -I. -Wall -g -O3 -DNDEBUG
CXXFLAGS           += -Wno-variadic-macros
CXXFLAGS           += -DVL_LOWE_STRICT 
CXXFLAGS           += -DVL_USEFASTMATH

# Determine on the flight the system we are running on
Darwin_PPC_ARCH             := mac
Darwin_Power_Macintosh_ARCH := mac
Darwin_i386_ARCH            := mci
Linux_i386_ARCH             := glx
Linux_i686_ARCH             := glx
Linux_x86_64_ARCH           := g64
Linux_unknown_ARCH          := glx

UNAME             := $(shell uname -sm)
ARCH              := $($(shell echo "$(UNAME)" | tr \  _)_ARCH)

ifeq ($(ARCH),)
die:=$(error $(err_no_arch))
endif

mac_CXXFLAGS       := -DVL_MAC
mci_CXXFLAGS       := -DVL_MAC
glx_CXXFLAGS       :=
g64_CXXFLAGS       :=

CXXFLAGS           += $($(ARCH)_CXXFLAGS)

# --------------------------------------------------------------------
#
# --------------------------------------------------------------------

.PRECIOUS: %/.dir
%/.dir :	
	mkdir -p $(dir $@)
	echo "Directory generated by make." > $@

.PHONY: all
all: $(ARCH)/sift

$(ARCH)/%.o : %.cpp $(ARCH)/.dir
	$(CXX) $(CXXFLAGS) $< -c -o $@

$(ARCH)/sift : $(ARCH)/sift.o $(ARCH)/sift-driver.o
	$(CXX) $(CXXFLAGS) $^ -o $@

$(ARCH)/benchmark : $(ARCH)/benchmark.o $(ARCH)/sift.o 
	$(CXX) $(CXXFLAGS) $^ -o $@

$(ARCH)/sift-driver.o $(ARCH)/sift.o $(ARCH)/benchmark.o : sift.hpp sift.ipp sift-conv.tpp

sift.html : sift.1
	groff -mdoc -Thtml $^ > $@

.PHONY: dox
dox:
	(test -e dox || mkdir dox)
	doxygen doxygen.conf

.PHONY: test
test: $(ARCH)/sift
	(test -e results || mkdir results)
	$(ARCH)/sift --verbose --output results/img3.key --save-gss data/img3.pgm

.PHONY: autorights
autorights:
	autorights . \
	  --verbose \
	  --recursive \
	  --template notice.txt \
	  --years 2006 \
	  --authors "Andrea Vedaldi (UCLA VisionLab)" \
	  --program "SIFT++"

# --------------------------------------------------------------------
#                                                                 Dist
# --------------------------------------------------------------------

.PHONY: dist, bindist, clean, distclean, info

TIMESTAMP:
	echo "Version $(VER)"            > TIMESTAMP
	echo "Archive created on `date`" >>TIMESTAMP

VERSION:
	echo "$(VER)" > VERSION

clean:
	rm -rf mci glx mac
	find . -name '*~' -exec rm -f \{\} \;
	find . -name '.DS_Store' -exec rm -f \{\} \;

distclean: clean
	rm -rf results dox
	rm -f sift sift-static benchmark
	rm -f .gdb_history
	rm -f sift.html
	rm -f TIMESTAMP VERSION
	rm -rf $(NAME) $(NAME)-*

info:
	@echo ARCH=$(ARCH)

$(NAME): TIMESTAMP VERSION
	rm -rf $(NAME)
	git archive --prefix=$(NAME)/ HEAD | tar xvf -
	cp TIMESTAMP $(NAME)
	cp VERSION $(NAME)

dist: $(NAME)
	COPYFILE_DISABLE=1                                           \
	COPY_EXTENDED_ATTRIBUTES_DISABLE=1                           \
	tar czvf $(DIST).tar.gz $(NAME)

bindist: $(NAME) $(ARCH)/sift sift.html
	for i in mci mac glx ;                                       \
	do                                                           \
	  if test -e $${i}  ;                                        \
	  then                                                       \
	    mkdir $(NAME)/$${i} ;                                    \
	    cp -p $${i}/sift $(NAME)/$${i} ;                         \
          fi                                                         \
	done
	cp -rp sift.html $(NAME)
	COPYFILE_DISABLE=1                                           \
	COPY_EXTENDED_ATTRIBUTES_DISABLE=1                           \
	tar czvf $(BINDIST).tar.gz                                   \
	    $(NAME)
